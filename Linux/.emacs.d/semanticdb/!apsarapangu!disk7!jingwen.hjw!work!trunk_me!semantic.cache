;; Object trunk_me/
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "trunk_me/"
  :tables
  (list
    (semanticdb-table "termcolor.py"
      :major-mode 'python-mode
      :tags 
        '( ("\"\"\"ANSII Color formatting for output in terminal.\"\"\"" code nil nil [1181 1233])
            ("os" include nil nil [1235 1244])
            ("__ALL__" variable nil nil [1247 1280])
            ("VERSION" variable nil nil [1282 1301])
            ("ATTRIBUTES" variable nil nil [1303 1575])
            ("del" code nil nil [1576 1594])
            ("HIGHLIGHTS" variable nil nil [1597 1895])
            ("COLORS" variable nil nil [1898 2169])
            ("RESET" variable nil nil [2172 2189])
            ("colored" function
               (:documentation "Colorize text.

    Available text colors:
        red, green, yellow, blue, magenta, cyan, white.

    Available text highlights:
        on_red, on_green, on_yellow, on_blue, on_magenta, on_cyan, on_white.

    Available attributes:
        bold, dark, underline, blink, reverse, concealed.

    Example:
        colored('Hello, World!', 'red', 'on_grey', ['blue', 'blink'])
        colored('Hello, World!', 'green')
    "
                :arguments 
                  ( ("text" variable nil (reparse-symbol function_parameters) [2204 2208])
                    ("color" variable nil (reparse-symbol function_parameters) [2210 2215])
                    ("on_color" variable nil (reparse-symbol function_parameters) [2222 2230])
                    ("attrs" variable nil (reparse-symbol function_parameters) [2237 2242]))                  )
                nil [2192 3097]))          
      :file "termcolor.py"
      :pointmax 5054
      :fsize 5053
      :lastmodtime '(21973 28372 607077 839000)
      :unmatched-syntax nil))
  :file "!apsarapangu!disk7!jingwen.hjw!work!trunk_me!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
