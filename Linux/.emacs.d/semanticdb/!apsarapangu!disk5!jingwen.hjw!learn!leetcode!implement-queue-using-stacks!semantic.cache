;; Object implement-queue-using-stacks/
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "implement-queue-using-stacks/"
  :tables
  (list
    (semanticdb-table "solution.cc"
      :major-mode 'c++-mode
      :tags 
        '( ("Queue" type
               (:members 
                  ( ("public" label nil (reparse-symbol classsubparts) [15 22])
                    ("push" function
                       (:arguments 
                          ( ("x" variable (:type "int") (reparse-symbol arg-sub-list) [81 87]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [71 124])
                    ("pop" function
                       (:arguments 
                          ( ("" variable (:type "void") (reparse-symbol arg-sub-list) [190 195]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [181 490])
                    ("peek" function
                       (:arguments 
                          ( ("" variable (:type "void") (reparse-symbol arg-sub-list) [535 540]))                          
                        :type "int")
                        (reparse-symbol classsubparts) [526 883])
                    ("empty" function
                       (:arguments 
                          ( ("" variable (:type "void") (reparse-symbol arg-sub-list) [942 947]))                          
                        :type "bool")
                        (reparse-symbol classsubparts) [931 991])
                    ("private" label nil (reparse-symbol classsubparts) [992 1000])
                    ("major_stack" variable (:type ("stack" type
                         (:template-specifier 
                            ( ("int" type nil nil nil))                            
                          :type "class")
                          nil nil)) (reparse-symbol classsubparts) [1005 1028])
                    ("minor_stack" variable (:type ("stack" type
                         (:template-specifier 
                            ( ("int" type nil nil nil))                            
                          :type "class")
                          nil nil)) (reparse-symbol classsubparts) [1033 1056]))                  
                :type "class")
                nil [1 1059]))          
      :file "solution.cc"
      :pointmax 1060
      :fsize 1059
      :lastmodtime '(21935 49727 256036 85000)
      :unmatched-syntax nil))
  :file "!apsarapangu!disk5!jingwen.hjw!learn!leetcode!implement-queue-using-stacks!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
