;; Object geoengine/
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "geoengine/"
  :tables
  (list
    (semanticdb-table "geolog_unittest.cpp"
      :major-mode 'c++-mode
      :tags 
        '( ("coreimpl/replication/geoengine/sqlonline_geolog_internal.h" include nil nil [55 124])
            ("common/time_tools.h" include nil nil [125 155])
            ("apsara/common/base.h" include nil nil [156 187])
            ("apsara/common/unittest.h" include nil nil [188 223])
            ("apsara/common/time_stamp.h" include nil nil [224 261])
            ("string" include (:system-flag t) nil [263 280])
            ("common/sqlonline_semaphore.h" include nil nil [281 320])
            ("apsara" using (:type ("apsara" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [323 346])
            ("apsara::common" using (:type ("apsara::common" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [347 378])
            ("apsara::common::timing" using (:type ("apsara::common::timing" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [379 418])
            ("apsara::pangu" using (:type ("apsara::pangu" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [419 449])
            ("apsara::logging" using (:type ("apsara::logging" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [450 482])
            ("apsara::sqlonline" using (:type ("apsara::sqlonline" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [483 517])
            ("apsara::sqlonline::geoengine" using (:type ("apsara::sqlonline::geoengine" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [518 563])
            ("std" using (:type ("std" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [564 584])
            ("sLogger" variable
               (:pointer 1
                :typemodifiers ("static")
                :default-value "logging::GetLogger(\"/apsara/sqlonline/geoengine/geolog_unittest\")"
                :type ("logging::Logger" type (:type "class") nil nil))
                nil [586 686])
            ("DECLARE_FLAG_INT32" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("sqlonline_FailInjectionProbability" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [748 783]))                  
                :type "int")
                nil [729 784])
            ("DECLARE_FLAG_BOOL" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("sqlonline_LogFileReadFailInjection" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [803 838]))                  
                :type "int")
                nil [785 839])
            ("DECLARE_FLAG_BOOL" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("sqlonline_LogFileGetNextLogEntrySizeFailInjection" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [858 908]))                  
                :type "int")
                nil [840 909])
            ("DECLARE_FLAG_BOOL" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("sqlonline_LogFileWriteFailInjection" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [928 964]))                  
                :type "int")
                nil [910 965])
            ("DECLARE_FLAG_BOOL" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("sqlonline_PanguFileSystemFailInjection" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [984 1023]))                  
                :type "int")
                nil [966 1024])
            ("TestGeoLog" type
               (:superclasses 
                  ( ("apsara::UnitTestFixtureBase" type
                       (:protection "public"
                        :type "class")
                        nil nil))                  
                :members 
                  ( ("public" label nil (reparse-symbol classsubparts) [1094 1101])
                    ("APSARA_UNIT_TEST_CASE" function
                       (:prototype-flag t
                        :arguments 
                          ( ("" variable (:type ("TestBasicReadWrite" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1157 1176]))                          
                        :type "int")
                        (reparse-symbol classsubparts) [1135 1180])
                    ("APSARA_UNIT_TEST_CASE" function
                       (:prototype-flag t
                        :arguments 
                          ( ("" variable (:type ("TestReadWithoutWrite" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1207 1228]))                          
                        :type "int")
                        (reparse-symbol classsubparts) [1185 1232])
                    ("APSARA_UNIT_TEST_CASE" function
                       (:prototype-flag t
                        :arguments 
                          ( ("" variable (:type ("TestWriteThenRead" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1259 1277]))                          
                        :type "int")
                        (reparse-symbol classsubparts) [1237 1281])
                    ("APSARA_UNIT_TEST_CASE" function
                       (:prototype-flag t
                        :arguments 
                          ( ("" variable (:type ("TestReadAtSpecificPoint" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1308 1332]))                          
                        :type "int")
                        (reparse-symbol classsubparts) [1286 1336])
                    ("APSARA_UNIT_TEST_CASE" function
                       (:prototype-flag t
                        :arguments 
                          ( ("" variable (:type ("TestStartWithData" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1363 1381]))                          
                        :type "int")
                        (reparse-symbol classsubparts) [1341 1385])
                    ("APSARA_UNIT_TEST_CASE" function
                       (:prototype-flag t
                        :arguments 
                          ( ("" variable (:type ("TestStartWithDataWithFailureInjection" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1412 1450]))                          
                        :type "int")
                        (reparse-symbol classsubparts) [1390 1454])
                    ("APSARA_UNIT_TEST_CASE" function
                       (:prototype-flag t
                        :arguments 
                          ( ("" variable (:type ("TestLazyCreateFile" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1481 1500]))                          
                        :type "int")
                        (reparse-symbol classsubparts) [1459 1504])
                    ("APSARA_UNIT_TEST_CASE" function
                       (:prototype-flag t
                        :arguments 
                          ( ("" variable (:type ("TestEmptyFile" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1531 1545]))                          
                        :type "int")
                        (reparse-symbol classsubparts) [1509 1549])
                    ("APSARA_UNIT_TEST_CASE" function
                       (:prototype-flag t
                        :arguments 
                          ( ("" variable (:type ("TestEmptyFileWithFailureInjection" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1576 1610]))                          
                        :type "int")
                        (reparse-symbol classsubparts) [1554 1614])
                    ("APSARA_UNIT_TEST_CASE" function
                       (:prototype-flag t
                        :arguments 
                          ( ("" variable (:type ("TestRoll" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1659 1668]))                          
                        :type "int")
                        (reparse-symbol classsubparts) [1637 1672])
                    ("APSARA_UNIT_TEST_CASE" function
                       (:prototype-flag t
                        :arguments 
                          ( ("" variable (:type ("TestGC" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1715 1722]))                          
                        :type "int")
                        (reparse-symbol classsubparts) [1693 1726])
                    ("APSARA_UNIT_TEST_CASE" function
                       (:prototype-flag t
                        :arguments 
                          ( ("" variable (:type ("TestGCWithFailureInjection" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1753 1780]))                          
                        :type "int")
                        (reparse-symbol classsubparts) [1731 1784])
                    ("APSARA_UNIT_TEST_CASE" function
                       (:prototype-flag t
                        :arguments 
                          ( ("" variable (:type ("TestMultiThreadWrite" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1860 1881]))                          
                        :type "int")
                        (reparse-symbol classsubparts) [1838 1885])
                    ("APSARA_UNIT_TEST_CASE" function
                       (:prototype-flag t
                        :arguments 
                          ( ("" variable (:type ("TestMultiThreadWriteAndSingleRead" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1912 1946]))                          
                        :type "int")
                        (reparse-symbol classsubparts) [1890 1950])
                    ("APSARA_UNIT_TEST_CASE" function
                       (:prototype-flag t
                        :arguments 
                          ( ("" variable (:type ("TestMultiThreadWriteAndSingleReadWithFailureInjection" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1977 2031]))                          
                        :type "int")
                        (reparse-symbol classsubparts) [1955 2035])
                    ("APSARA_UNIT_TEST_CASE" function
                       (:prototype-flag t
                        :arguments 
                          ( ("" variable (:type ("TestMultiThreadWriteMultiReader" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2062 2094]))                          
                        :type "int")
                        (reparse-symbol classsubparts) [2040 2098])
                    ("APSARA_UNIT_TEST_CASE" function
                       (:prototype-flag t
                        :arguments 
                          ( ("" variable (:type ("TestMultiThreadRollAndSingleThreadGC" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2125 2162]))                          
                        :type "int")
                        (reparse-symbol classsubparts) [2103 2166])
                    ("APSARA_UNIT_TEST_CASE" function
                       (:prototype-flag t
                        :arguments 
                          ( ("" variable (:type ("TestMultiThreadRollGCWithFailureInjection" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2193 2235]))                          
                        :type "int")
                        (reparse-symbol classsubparts) [2171 2239])
                    ("APSARA_UNIT_TEST_CASE" function
                       (:prototype-flag t
                        :arguments 
                          ( ("" variable (:type ("TestInvalidConfig" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2288 2306]))                          
                        :type "int")
                        (reparse-symbol classsubparts) [2266 2310])
                    ("APSARA_UNIT_TEST_CASE" function
                       (:prototype-flag t
                        :arguments 
                          ( ("" variable (:type ("TestInvalidRecord" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2337 2355]))                          
                        :type "int")
                        (reparse-symbol classsubparts) [2315 2359])
                    ("APSARA_UNIT_TEST_CASE" function
                       (:prototype-flag t
                        :arguments 
                          ( ("" variable (:type ("TestInvalidConsumePoint" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2386 2410]))                          
                        :type "int")
                        (reparse-symbol classsubparts) [2364 2414])
                    ("APSARA_UNIT_TEST_CASE" function
                       (:prototype-flag t
                        :arguments 
                          ( ("" variable (:type ("TestPanguFailureFileOp" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2441 2464]))                          
                        :type "int")
                        (reparse-symbol classsubparts) [2419 2468])
                    ("APSARA_UNIT_TEST_CASE" function
                       (:prototype-flag t
                        :arguments 
                          ( ("" variable (:type ("TestPanguFailureDirOp" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2495 2517]))                          
                        :type "int")
                        (reparse-symbol classsubparts) [2473 2521])
                    ("APSARA_UNIT_TEST_CASE" function
                       (:prototype-flag t
                        :arguments 
                          ( ("" variable (:type ("TestPanguFailureRead" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2548 2569]))                          
                        :type "int")
                        (reparse-symbol classsubparts) [2526 2573])
                    ("APSARA_UNIT_TEST_CASE" function
                       (:prototype-flag t
                        :arguments 
                          ( ("" variable (:type ("TestPanguFailureWrite" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2600 2622]))                          
                        :type "int")
                        (reparse-symbol classsubparts) [2578 2626])
                    ("APSARA_UNIT_TEST_CASE" function
                       (:prototype-flag t
                        :arguments 
                          ( ("" variable (:type ("TestAllFailureInjection" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2653 2677]))                          
                        :type "int")
                        (reparse-symbol classsubparts) [2631 2681])
                    ("public" label nil (reparse-symbol classsubparts) [2703 2710])
                    ("Setup" function
                       (:prototype-flag t
                        :type "void")
                        (reparse-symbol classsubparts) [2752 2765])
                    ("CleanUp" function
                       (:prototype-flag t
                        :type "void")
                        (reparse-symbol classsubparts) [2770 2785])
                    ("SetupCase" function
                       (:prototype-flag t
                        :type "void")
                        (reparse-symbol classsubparts) [2825 2842])
                    ("CleanUpCase" function
                       (:prototype-flag t
                        :type "void")
                        (reparse-symbol classsubparts) [2847 2866])
                    ("public" label nil (reparse-symbol classsubparts) [2886 2893])
                    ("TestBasicReadWrite" function
                       (:prototype-flag t
                        :type "void")
                        (reparse-symbol classsubparts) [2925 2951])
                    ("TestReadWithoutWrite" function
                       (:prototype-flag t
                        :type "void")
                        (reparse-symbol classsubparts) [2956 2984])
                    ("TestWriteThenRead" function
                       (:prototype-flag t
                        :type "void")
                        (reparse-symbol classsubparts) [2989 3014])
                    ("TestReadAtSpecificPoint" function
                       (:prototype-flag t
                        :type "void")
                        (reparse-symbol classsubparts) [3019 3050])
                    ("TestStartWithData" function
                       (:prototype-flag t
                        :type "void")
                        (reparse-symbol classsubparts) [3055 3080])
                    ("TestStartWithDataWithFailureInjection" function
                       (:prototype-flag t
                        :type "void")
                        (reparse-symbol classsubparts) [3085 3130])
                    ("TestLazyCreateFile" function
                       (:prototype-flag t
                        :type "void")
                        (reparse-symbol classsubparts) [3135 3161])
                    ("TestEmptyFile" function
                       (:prototype-flag t
                        :type "void")
                        (reparse-symbol classsubparts) [3166 3187])
                    ("TestEmptyFileWithFailureInjection" function
                       (:prototype-flag t
                        :type "void")
                        (reparse-symbol classsubparts) [3192 3233])
                    ("TestRoll" function
                       (:prototype-flag t
                        :type "void")
                        (reparse-symbol classsubparts) [3256 3272])
                    ("TestGC" function
                       (:prototype-flag t
                        :type "void")
                        (reparse-symbol classsubparts) [3293 3307])
                    ("TestGCWithFailureInjection" function
                       (:prototype-flag t
                        :type "void")
                        (reparse-symbol classsubparts) [3312 3346])
                    ("TestMultiThreadWrite" function
                       (:prototype-flag t
                        :type "void")
                        (reparse-symbol classsubparts) [3397 3425])
                    ("TestMultiThreadWriteAndSingleRead" function
                       (:prototype-flag t
                        :type "void")
                        (reparse-symbol classsubparts) [3430 3471])
                    ("TestMultiThreadWriteAndSingleReadWithFailureInjection" function
                       (:prototype-flag t
                        :type "void")
                        (reparse-symbol classsubparts) [3476 3537])
                    ("TestMultiThreadWriteMultiReader" function
                       (:prototype-flag t
                        :type "void")
                        (reparse-symbol classsubparts) [3558 3597])
                    ("TestMultiThreadRollAndSingleThreadGC" function
                       (:prototype-flag t
                        :type "void")
                        (reparse-symbol classsubparts) [3602 3646])
                    ("TestMultiThreadRollGCWithFailureInjection" function
                       (:prototype-flag t
                        :type "void")
                        (reparse-symbol classsubparts) [3651 3700])
                    ("TestInvalidConfig" function
                       (:prototype-flag t
                        :type "void")
                        (reparse-symbol classsubparts) [3723 3748])
                    ("TestInvalidRecord" function
                       (:prototype-flag t
                        :type "void")
                        (reparse-symbol classsubparts) [3753 3778])
                    ("TestInvalidConsumePoint" function
                       (:prototype-flag t
                        :type "void")
                        (reparse-symbol classsubparts) [3783 3814])
                    ("TestPanguFailureFileOp" function
                       (:prototype-flag t
                        :type "void")
                        (reparse-symbol classsubparts) [3819 3849])
                    ("TestPanguFailureDirOp" function
                       (:prototype-flag t
                        :type "void")
                        (reparse-symbol classsubparts) [3854 3883])
                    ("TestPanguFailureRead" function
                       (:prototype-flag t
                        :type "void")
                        (reparse-symbol classsubparts) [3888 3916])
                    ("TestPanguFailureWrite" function
                       (:prototype-flag t
                        :type "void")
                        (reparse-symbol classsubparts) [3921 3950])
                    ("TestAllFailureInjection" function
                       (:prototype-flag t
                        :type "void")
                        (reparse-symbol classsubparts) [3955 3986])
                    ("public" label nil (reparse-symbol classsubparts) [3988 3995])
                    ("ThreadWriteGeoLog" function
                       (:prototype-flag t
                        :arguments 
                          ( ("id" variable (:type ("int32_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4051 4062])
                            ("writer" variable
                               (:pointer 1
                                :type ("IGeoLogOutputStream" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [4063 4091])
                            ("numberOfRecords2Write" variable (:type ("int32_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4092 4122])
                            ("data" variable
                               (:pointer 1
                                :constant-flag t
                                :type "char")
                                (reparse-symbol arg-sub-list) [4154 4171]))                          
                        :type ("uint32_t" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [4024 4172])
                    ("ThreadWriteGeoLogWithRetry" function
                       (:prototype-flag t
                        :arguments 
                          ( ("id" variable (:type ("int32_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4213 4224])
                            ("writer" variable
                               (:pointer 1
                                :type ("IGeoLogOutputStream" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [4225 4253])
                            ("numberOfRecords2Write" variable (:type ("int32_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4263 4293])
                            ("data" variable
                               (:pointer 1
                                :constant-flag t
                                :type "char")
                                (reparse-symbol arg-sub-list) [4294 4311]))                          
                        :type ("uint32_t" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [4177 4312])
                    ("ThreadReadGeoLog" function
                       (:prototype-flag t
                        :arguments 
                          ( ("id" variable (:type ("int32_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4343 4354])
                            ("reader" variable
                               (:pointer 1
                                :type ("IGeoLogInputStream" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [4355 4382])
                            ("minNumberOfGeoRecords" variable (:type ("int32_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4383 4413]))                          
                        :type ("uint32_t" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [4317 4414])
                    ("ThreadReadGeoLogWithRetry" function
                       (:prototype-flag t
                        :arguments 
                          ( ("id" variable (:type ("int32_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4454 4465])
                            ("reader" variable
                               (:pointer 1
                                :type ("IGeoLogInputStream" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [4466 4493])
                            ("minNumberOfGeoRecords" variable (:type ("int32_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4494 4524]))                          
                        :type ("uint32_t" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [4419 4525])
                    ("ThreadReadGeoLogAndConsume" function
                       (:prototype-flag t
                        :arguments 
                          ( ("id" variable (:type ("int32_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4566 4577])
                            ("reader" variable
                               (:pointer 1
                                :type ("IGeoLogInputStream" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [4578 4605])
                            ("minNumberOfGeoRecords" variable (:type ("int32_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4606 4636]))                          
                        :type ("uint32_t" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [4530 4637])
                    ("private" label nil (reparse-symbol classsubparts) [4639 4647])
                    ("DoTestStartWithData" function
                       (:prototype-flag t
                        :type "void")
                        (reparse-symbol classsubparts) [4652 4679])
                    ("DoTestEmptyFile" function
                       (:prototype-flag t
                        :type "void")
                        (reparse-symbol classsubparts) [4684 4707])
                    ("private" label nil (reparse-symbol classsubparts) [4709 4717])
                    ("ClearTestData" function
                       (:prototype-flag t
                        :type "void")
                        (reparse-symbol classsubparts) [4722 4743])
                    ("CreateGeoLog" function
                       (:prototype-flag t
                        :type "void")
                        (reparse-symbol classsubparts) [4748 4768])
                    ("CreateGeoLog" function
                       (:prototype-flag t
                        :arguments 
                          ( ("config" variable
                               (:reference 1
                                :type ("GeoLogConfiguration" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [4791 4819]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [4773 4820])
                    ("CreateGeoLogWithRetry" function
                       (:prototype-flag t
                        :arguments 
                          ( ("maxRetry" variable
                               (:default-value "100"
                                :type ("int32_t" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [4852 4874]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [4825 4876])
                    ("CreateGeoLogWithRetry" function
                       (:prototype-flag t
                        :arguments 
                          ( ("config" variable
                               (:reference 1
                                :type ("GeoLogConfiguration" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [4908 4936])
                            ("maxRetry" variable
                               (:default-value "100"
                                :type ("int32_t" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [4937 4959]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [4881 4961])
                    ("DeleteGeoLog" function
                       (:prototype-flag t
                        :type "void")
                        (reparse-symbol classsubparts) [4966 4986])
                    ("CreateGeoLogReaderWithRetry" function
                       (:prototype-flag t
                        :pointer 1
                        :arguments 
                          ( ("startPoint" variable
                               (:reference 1
                                :constant-flag t
                                :type ("LogPoint" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [5040 5067])
                            ("maxRetry" variable
                               (:default-value "100"
                                :type ("int32_t" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [5068 5090]))                          
                        :type ("IGeoLogInputStream" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [4992 5092])
                    ("CreateGeoLogWriterWithRetry" function
                       (:prototype-flag t
                        :pointer 1
                        :arguments 
                          ( ("maxRetry" variable
                               (:default-value "100"
                                :type ("int32_t" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [5146 5168]))                          
                        :type ("IGeoLogOutputStream" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [5097 5170])
                    ("WriteWithRetry" function
                       (:prototype-flag t
                        :arguments 
                          ( ("writer" variable
                               (:pointer 1
                                :type ("IGeoLogOutputStream" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [5208 5236])
                            ("data" variable
                               (:pointer 1
                                :constant-flag t
                                :type "char")
                                (reparse-symbol arg-sub-list) [5237 5254])
                            ("maxRetry" variable
                               (:default-value "100"
                                :type ("int32_t" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [5255 5277]))                          
                        :type ("GeoLogRecordInfo" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [5176 5279])
                    ("ReadWithRetry" function
                       (:prototype-flag t
                        :pointer 1
                        :constant-flag t
                        :arguments 
                          ( ("reader" variable
                               (:pointer 1
                                :type ("IGeoLogInputStream" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [5319 5346])
                            ("maxRetry" variable
                               (:default-value "100"
                                :type ("int32_t" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [5347 5369]))                          
                        :type ("PBGeoLogEntry" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [5284 5371])
                    ("PrintGeoRecord" function
                       (:prototype-flag t
                        :arguments 
                          ( ("info" variable
                               (:reference 1
                                :constant-flag t
                                :type ("GeoLogRecordInfo" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [5397 5426])
                            ("data" variable
                               (:reference 1
                                :constant-flag t
                                :type ("Slice" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [5427 5445])
                            ("title" variable
                               (:reference 1
                                :constant-flag t
                                :type ("string" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [5470 5490])
                            ("printData" variable
                               (:default-value "true"
                                :type "bool")
                                (reparse-symbol arg-sub-list) [5491 5512]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [5377 5514])
                    ("PrintGeoRecord" function
                       (:prototype-flag t
                        :arguments 
                          ( ("entry" variable
                               (:reference 1
                                :constant-flag t
                                :type ("PBGeoLogEntry" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [5539 5566])
                            ("record" variable
                               (:reference 1
                                :constant-flag t
                                :type ("PBGeoLogRecord" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [5567 5596])
                            ("title" variable
                               (:reference 1
                                :constant-flag t
                                :type ("string" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [5621 5641])
                            ("printData" variable
                               (:default-value "true"
                                :type "bool")
                                (reparse-symbol arg-sub-list) [5642 5663]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [5519 5665])
                    ("EnablePanguFailInjection" function
                       (:prototype-flag t
                        :type "void")
                        (reparse-symbol classsubparts) [5671 5703])
                    ("DisablePanguFailInjection" function
                       (:prototype-flag t
                        :type "void")
                        (reparse-symbol classsubparts) [5708 5741])
                    ("PrintCaseStart" function
                       (:prototype-flag t
                        :arguments 
                          ( ("name" variable
                               (:reference 1
                                :constant-flag t
                                :type ("string" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [5824 5843]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [5804 5844])
                    ("PrintCaseEnd" function
                       (:prototype-flag t
                        :arguments 
                          ( ("name" variable
                               (:reference 1
                                :constant-flag t
                                :type ("string" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [5867 5886]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [5849 5887])
                    ("private" label nil (reparse-symbol classsubparts) [5890 5898])
                    ("mConfig" variable (:type ("GeoLogConfiguration" type (:type "class") nil nil)) (reparse-symbol classsubparts) [5903 5931])
                    ("mGeoLog" variable
                       (:pointer 1
                        :type ("IGeoLog" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [5936 5953]))                  
                :type "class")
                nil [1026 5956])
            ("Setup" function
               (:parent "TestGeoLog"
                :type "void")
                nil [5980 6050])
            ("CleanUp" function
               (:parent "TestGeoLog"
                :type "void")
                nil [6052 6121])
            ("SetupCase" function
               (:parent "TestGeoLog"
                :type "void")
                nil [6221 6307])
            ("CleanUpCase" function
               (:parent "TestGeoLog"
                :type "void")
                nil [6309 6376])
            ("VERIFY_RECORD_SEQ_DATA" variable (:constant-flag t) nil [6482 6504])
            ("VERIFY_RECORD_SEQ_DATA_EX" variable (:constant-flag t) nil [6829 6854])
            ("VERIFY_RECORD_DATA" variable (:constant-flag t) nil [7394 7412])
            ("LOG_POINT" variable (:constant-flag t) nil [7666 7675])
            ("TestBasicReadWrite" function
               (:parent "TestGeoLog"
                :type "void")
                nil [8038 9164])
            ("TestReadWithoutWrite" function
               (:parent "TestGeoLog"
                :type "void")
                nil [9306 10210])
            ("TestWriteThenRead" function
               (:parent "TestGeoLog"
                :type "void")
                nil [10295 11288])
            ("TestReadAtSpecificPoint" function
               (:parent "TestGeoLog"
                :type "void")
                nil [11433 12731])
            ("DoTestStartWithData" function
               (:parent "TestGeoLog"
                :type "void")
                nil [12985 14855])
            ("TestStartWithData" function
               (:parent "TestGeoLog"
                :type "void")
                nil [14857 14990])
            ("TestStartWithDataWithFailureInjection" function
               (:parent "TestGeoLog"
                :type "void")
                nil [14992 15268])
            ("TestLazyCreateFile" function
               (:parent "TestGeoLog"
                :type "void")
                nil [15270 19328])
            ("DoTestEmptyFile" function
               (:parent "TestGeoLog"
                :type "void")
                nil [19330 21151])
            ("TestEmptyFile" function
               (:parent "TestGeoLog"
                :type "void")
                nil [21153 21278])
            ("TestEmptyFileWithFailureInjection" function
               (:parent "TestGeoLog"
                :type "void")
                nil [21280 21516])
            ("TestRoll" function
               (:parent "TestGeoLog"
                :type "void")
                nil [21763 22430])
            ("TestGC" function
               (:parent "TestGeoLog"
                :type "void")
                nil [22764 24566])
            ("TestGCWithFailureInjection" function
               (:parent "TestGeoLog"
                :type "void")
                nil [24568 26072])
            ("TestMultiThreadWrite" function
               (:parent "TestGeoLog"
                :type "void")
                nil [26374 27928])
            ("TestMultiThreadWriteAndSingleRead" function
               (:parent "TestGeoLog"
                :type "void")
                nil [27993 29211])
            ("TestMultiThreadWriteAndSingleReadWithFailureInjection" function
               (:parent "TestGeoLog"
                :type "void")
                nil [29276 30745])
            ("TestMultiThreadWriteMultiReader" function
               (:parent "TestGeoLog"
                :type "void")
                nil [30821 32112])
            ("TestMultiThreadRollAndSingleThreadGC" function
               (:parent "TestGeoLog"
                :type "void")
                nil [32114 34029])
            ("TestMultiThreadRollGCWithFailureInjection" function
               (:parent "TestGeoLog"
                :type "void")
                nil [34031 35508])
            ("CREATE_GEOLOG_WITH_EXCEPTION" variable (:constant-flag t) nil [35700 35728])
            ("TestInvalidConfig" function
               (:parent "TestGeoLog"
                :type "void")
                nil [35969 36854])
            ("TestInvalidRecord" function
               (:parent "TestGeoLog"
                :type "void")
                nil [36856 37965])
            ("TestInvalidConsumePoint" function
               (:parent "TestGeoLog"
                :type "void")
                nil [37967 40067])
            ("TestPanguFailureFileOp" function
               (:parent "TestGeoLog"
                :type "void")
                nil [40069 41679])
            ("TestPanguFailureDirOp" function
               (:parent "TestGeoLog"
                :type "void")
                nil [41681 42423])
            ("TestPanguFailureRead" function
               (:parent "TestGeoLog"
                :type "void")
                nil [42425 43940])
            ("TestPanguFailureWrite" function
               (:parent "TestGeoLog"
                :type "void")
                nil [43942 44937])
            ("TestAllFailureInjection" function
               (:parent "TestGeoLog"
                :type "void")
                nil [45159 47944])
            ("ThreadWriteGeoLog" function
               (:parent "TestGeoLog"
                :arguments 
                  ( ("id" variable (:type ("int32_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [48169 48180])
                    ("writer" variable
                       (:pointer 1
                        :type ("IGeoLogOutputStream" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [48181 48209])
                    ("numberOfRecords2Write" variable (:type ("int32_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [48210 48240])
                    ("data" variable
                       (:pointer 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [48280 48297]))                  
                :type ("uint32_t" type (:type "class") nil nil))
                nil [48130 48742])
            ("ThreadWriteGeoLogWithRetry" function
               (:parent "TestGeoLog"
                :arguments 
                  ( ("id" variable (:type ("int32_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [48791 48802])
                    ("writer" variable
                       (:pointer 1
                        :type ("IGeoLogOutputStream" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [48803 48831])
                    ("numberOfRecords2Write" variable (:type ("int32_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [48869 48899])
                    ("data" variable
                       (:pointer 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [48900 48917]))                  
                :type ("uint32_t" type (:type "class") nil nil))
                nil [48743 49368])
            ("ThreadReadGeoLog" function
               (:parent "TestGeoLog"
                :arguments 
                  ( ("id" variable (:type ("int32_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [49408 49419])
                    ("reader" variable
                       (:pointer 1
                        :type ("IGeoLogInputStream" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [49420 49447])
                    ("minNumberOfGeoRecords" variable (:type ("int32_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [49448 49478]))                  
                :type ("uint32_t" type (:type "class") nil nil))
                nil [49370 50410])
            ("ThreadReadGeoLogWithRetry" function
               (:parent "TestGeoLog"
                :arguments 
                  ( ("id" variable (:type ("int32_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [50459 50470])
                    ("reader" variable
                       (:pointer 1
                        :type ("IGeoLogInputStream" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [50471 50498])
                    ("minNumberOfGeoRecords" variable (:type ("int32_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [50499 50529]))                  
                :type ("uint32_t" type (:type "class") nil nil))
                nil [50412 51991])
            ("ThreadReadGeoLogAndConsume" function
               (:parent "TestGeoLog"
                :arguments 
                  ( ("id" variable (:type ("int32_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [52041 52052])
                    ("reader" variable
                       (:pointer 1
                        :type ("IGeoLogInputStream" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [52053 52080])
                    ("minNumberOfGeoRecords" variable (:type ("int32_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [52081 52111]))                  
                :type ("uint32_t" type (:type "class") nil nil))
                nil [51993 53706])
            ("ClearTestData" function
               (:parent "TestGeoLog"
                :type "void")
                nil [53878 54085])
            ("CreateGeoLog" function
               (:parent "TestGeoLog"
                :type "void")
                nil [54087 54282])
            ("CreateGeoLog" function
               (:parent "TestGeoLog"
                :arguments 
                  ( ("config" variable
                       (:reference 1
                        :type ("GeoLogConfiguration" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [54314 54342]))                  
                :type "void")
                nil [54284 54467])
            ("CreateGeoLogWithRetry" function
               (:parent "TestGeoLog"
                :arguments 
                  ( ("maxRetry" variable (:type ("int32_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [54508 54525]))                  
                :type "void")
                nil [54469 54867])
            ("CreateGeoLogWithRetry" function
               (:parent "TestGeoLog"
                :arguments 
                  ( ("config" variable
                       (:reference 1
                        :type ("GeoLogConfiguration" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [54908 54936])
                    ("maxRetry" variable (:type ("int32_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [54937 54954]))                  
                :type "void")
                nil [54869 55302])
            ("DeleteGeoLog" function
               (:parent "TestGeoLog"
                :type "void")
                nil [55304 55359])
            ("CreateGeoLogReaderWithRetry" function
               (:pointer 1
                :parent "TestGeoLog"
                :arguments 
                  ( ("startPoint" variable
                       (:reference 1
                        :constant-flag t
                        :type ("LogPoint" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [55422 55449])
                    ("maxRetry" variable (:type ("int32_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [55450 55467]))                  
                :type ("IGeoLogInputStream" type (:type "class") nil nil))
                nil [55362 55911])
            ("CreateGeoLogWriterWithRetry" function
               (:pointer 1
                :parent "TestGeoLog"
                :arguments 
                  ( ("maxRetry" variable (:type ("int32_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [55974 55991]))                  
                :type ("IGeoLogOutputStream" type (:type "class") nil nil))
                nil [55913 56427])
            ("WriteWithRetry" function
               (:parent "TestGeoLog"
                :arguments 
                  ( ("writer" variable
                       (:pointer 1
                        :type ("IGeoLogOutputStream" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [56473 56501])
                    ("data" variable
                       (:pointer 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [56502 56519])
                    ("maxRetry" variable (:type ("int32_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [56520 56537]))                  
                :type ("GeoLogRecordInfo" type (:type "class") nil nil))
                nil [56429 56980])
            ("ReadWithRetry" function
               (:pointer 1
                :parent "TestGeoLog"
                :constant-flag t
                :arguments 
                  ( ("reader" variable
                       (:pointer 1
                        :type ("IGeoLogInputStream" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [57029 57056])
                    ("maxRetry" variable (:type ("int32_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [57057 57074]))                  
                :type ("PBGeoLogEntry" type (:type "class") nil nil))
                nil [56982 57494])
            ("PrintGeoRecord" function
               (:parent "TestGeoLog"
                :arguments 
                  ( ("info" variable
                       (:reference 1
                        :constant-flag t
                        :type ("GeoLogRecordInfo" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [57565 57594])
                    ("data" variable
                       (:reference 1
                        :constant-flag t
                        :type ("Slice" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [57595 57613])
                    ("title" variable
                       (:reference 1
                        :constant-flag t
                        :type ("string" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [57614 57634])
                    ("printData" variable (:type "bool") (reparse-symbol arg-sub-list) [57635 57650]))                  
                :type "void")
                nil [57533 58058])
            ("PrintGeoRecord" function
               (:parent "TestGeoLog"
                :arguments 
                  ( ("entry" variable
                       (:reference 1
                        :constant-flag t
                        :type ("PBGeoLogEntry" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [58129 58156])
                    ("record" variable
                       (:reference 1
                        :constant-flag t
                        :type ("PBGeoLogRecord" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [58157 58186])
                    ("title" variable
                       (:reference 1
                        :constant-flag t
                        :type ("string" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [58187 58207])
                    ("printData" variable (:type "bool") (reparse-symbol arg-sub-list) [58208 58223]))                  
                :type "void")
                nil [58097 58653])
            ("PrintCaseStart" function
               (:parent "TestGeoLog"
                :arguments 
                  ( ("name" variable
                       (:reference 1
                        :constant-flag t
                        :type ("string" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [58687 58706]))                  
                :type "void")
                nil [58655 58783])
            ("PrintCaseEnd" function
               (:parent "TestGeoLog"
                :arguments 
                  ( ("name" variable
                       (:reference 1
                        :constant-flag t
                        :type ("string" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [58815 58834]))                  
                :type "void")
                nil [58785 58909])
            ("EnablePanguFailInjection" function
               (:parent "TestGeoLog"
                :type "void")
                nil [58911 59594])
            ("DisablePanguFailInjection" function
               (:parent "TestGeoLog"
                :type "void")
                nil [59596 59902])
            ("APSARA_UNIT_TEST_FIXTURE" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("TestGeoLog" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [59930 59941]))                  
                :type "int")
                nil [59905 59942]))          
      :file "geolog_unittest.cpp"
      :pointmax 59943
      :fsize 59958
      :lastmodtime '(21968 27940 735050 17000)
      :unmatched-syntax '((number 2678 . 2679) (number 2623 . 2624) (number 2570 . 2571) (number 2518 . 2519) (number 2465 . 2466) (number 2411 . 2412) (number 2356 . 2357) (number 2307 . 2308) (number 2236 . 2237) (number 2163 . 2164) (number 2095 . 2096) (number 2032 . 2033) (number 1947 . 1948) (number 1882 . 1883) (number 1781 . 1782) (number 1723 . 1724) (number 1669 . 1670) (number 1611 . 1612) (number 1546 . 1547) (number 1501 . 1502) (number 1451 . 1452) (number 1382 . 1383) (number 1333 . 1334) (number 1278 . 1279) (number 1229 . 1230) (number 1177 . 1178))
      :lexical-table 
        '(("VERIFY_RECORD_SEQ_DATA_EX" (spp-arg-list ("_entry" "_expected_seq_start" "_expected_data" "_print_title") 6854 . 6913) . 
              ((DO "do" 6916 . 6918) (semantic-list "{ \\
    uint64_t startSeq = _expected_seq_start; \\
    for (int32_t i = 0; i < entry->records_size(); i++) { \\
        const PBGeoLogRecord& _r = _entry->records(i); \\
        APSARA_TEST_EQUAL(_r.seq(), startSeq++); \\
        APSARA_TEST_EQUAL(strcmp(_r.data().c_str(), (_expected_data)), 0); \\
        PrintGeoRecord(*_entry, _r, (_print_title)); \\
    } \\
}" 6919 . 7279) (WHILE "while" 7280 . 7285) (semantic-list "(0)" 7285 . 7288)))
          ("CREATE_GEOLOG_WITH_EXCEPTION" (spp-arg-list ("_config") 35728 . 35737) . 
              ((DO "do" 35740 . 35742) (semantic-list "{ \\
    try { \\
        CreateGeoLog(_config); \\
        APSARA_TEST_TRUE(false); \\
    } catch (const ParameterInvalidException& e) { \\
        SQL_LOG(DEBUG, sLogger, (\"Excepted exception\", e.what())); \\
    } \\
}" 35743 . 35958) (WHILE "while" 35959 . 35964) (semantic-list "(0)" 35964 . 35967)))
          ("VERIFY_RECORD_SEQ_DATA" (spp-arg-list ("_entry" "_index" "_expected_seq" "_expected_data" "_print_title") 6504 . 6565) . 
              ((DO "do" 6568 . 6570) (semantic-list "{ \\
    const PBGeoLogRecord& _r = _entry->records((_index)); \\
    APSARA_TEST_EQUAL(_r.seq(), _expected_seq); \\
    APSARA_TEST_EQUAL(strcmp(_r.data().c_str(), (_expected_data)), 0); \\
    PrintGeoRecord(*_entry, _r, (_print_title)); \\
}" 6571 . 6810) (WHILE "while" 6811 . 6816) (semantic-list "(0)" 6816 . 6819)))
          ("LOG_POINT" (spp-arg-list ("_pb_log_point") 7675 . 7690) . ((symbol "LogPoint" 7691 . 7699) (semantic-list "(_pb_log_point.file_number(), _pb_log_point.offset())" 7699 . 7752)))
          ("VERIFY_RECORD_DATA" (spp-arg-list ("_entry" "_index" "_expected_data" "_print_title") 7412 . 7458) . 
              ((DO "do" 7461 . 7463) (semantic-list "{ \\
    const PBGeoLogRecord& _r = _entry->records(_index); \\
    APSARA_TEST_EQUAL(strcmp(_r.data().c_str(), _expected_data), 0); \\
    PrintGeoRecord(*_entry, _r, _print_title); \\
}" 7464 . 7647) (WHILE "while" 7648 . 7653) (semantic-list "(0)" 7653 . 7656)))
          )
)
    (semanticdb-table "SConscript"
      :major-mode 'python-mode
      :tags 
        '( ("Import" code nil nil [24 37])
            ("env" variable nil nil [39 54])
            ("ut_objs" variable nil nil [56 103])
            ("ut_libs" variable nil nil [105 559])
            ("env" code nil nil [561 620]))          
      :file "SConscript"
      :pointmax 622
      :fsize 621
      :lastmodtime '(21968 27940 734121 780000)
      :unmatched-syntax nil)
    (semanticdb-table "sqlonline_geoscheduler_unittest.cpp"
      :major-mode 'c++-mode
      :tags nil
      :file "sqlonline_geoscheduler_unittest.cpp"
      :pointmax 11801
      :fsize 11800
      :lastmodtime '(21968 27940 735050 17000)
      :unmatched-syntax nil))
  :file "!apsarapangu!disk6!jingwen.hjw!work!trunk!sqlonline!testing!unittest!geoengine!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
