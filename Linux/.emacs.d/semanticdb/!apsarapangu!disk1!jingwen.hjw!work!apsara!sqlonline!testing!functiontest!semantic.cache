;; Object functiontest/
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "functiontest/"
  :tables
  (list
    (semanticdb-table "SConscript"
      :major-mode 'python-mode
      :tags 
        '( ("os.path" include nil nil [24 38])
            ("Import" code nil nil [39 52])
            ("env" variable nil nil [54 69])
            ("env" code nil nil [70 790])
            ("env" code nil nil [792 811])
            ("libsname" variable nil nil [812 1249])
            ("env" code nil nil [1251 1373])
            ("env" code nil nil [1374 1510])
            ("env" code nil nil [1512 1620])
            ("env" code nil nil [1621 1733])
            ("env" code nil nil [1734 1862])
            ("env" code nil nil [1863 1986])
            ("env" code nil nil [1987 2112])
            ("env" code nil nil [2114 2214])
            ("env" code nil nil [2215 2297])
            ("env" code nil nil [2298 2374])
            ("env" code nil nil [2375 2459])
            ("env" code nil nil [2460 2548])
            ("env" code nil nil [2550 2671])
            ("env" code nil nil [2673 2787])
            ("env" code nil nil [2789 2925])
            ("env" code nil nil [2927 2987])
            ("env" code nil nil [2988 3083])
            ("env" code nil nil [3084 3197])
            ("env" code nil nil [3198 3314])
            ("env" code nil nil [3315 3439])
            ("env" code nil nil [3441 3691])
            ("env" code nil nil [3693 3809])
            ("env" code nil nil [3810 3920])
            ("env" code nil nil [3921 4027])
            ("env" code nil nil [4029 4158])
            ("env" code nil nil [4160 4285])
            ("env" code nil nil [4287 4404])
            ("env" code nil nil [4406 4518])
            ("env" code nil nil [4520 4636])
            ("env" code nil nil [4637 4769])
            ("env" code nil nil [4771 4869])
            ("env" code nil nil [4984 5108])
            ("env" code nil nil [5110 5259])
            ("env" code nil nil [5260 5370])
            ("env" code nil nil [5371 5521])
            ("env" code nil nil [5523 5625])
            ("env" code nil nil [5626 5719])
            ("env" code nil nil [5721 5845])
            ("env" code nil nil [5847 5967])
            ("env" code nil nil [5969 6111])
            ("env" code nil nil [6113 6265])
            ("env" code nil nil [6505 6621])
            ("env" code nil nil [6742 6858])
            ("env" code nil nil [6993 7123])
            ("env" code nil nil [7125 7253])
            ("env" code nil nil [7254 7388])
            ("env" code nil nil [7389 7503])
            ("table_operation_ft_requires" variable nil nil [7506 8270])
            ("for" code nil nil [8272 8451]))          
      :file "SConscript"
      :pointmax 8451
      :fsize 8450
      :lastmodtime '(21798 11676 714036 441000)
      :unmatched-syntax nil)
    (semanticdb-table "bug_fix_functiontest.cpp"
      :major-mode 'c++-mode
      :tags 
        '( ("sqlonline_db_help.h" include nil nil [1 31])
            ("sqlonline/client/client_data_store.h" include nil nil [32 79])
            ("sqlonline/client/stateless_data_store.h" include nil nil [80 130])
            ("apsara/common/unittest.h" include nil nil [131 166])
            ("iostream" include (:system-flag t) nil [167 186])
            ("vector" include (:system-flag t) nil [187 204])
            ("string" include (:system-flag t) nil [205 222])
            ("sys/wait.h" include
               (:typemodifiers ("extern" "\"C\"")
                :system-flag t)
                (reparse-symbol extern-c-contents) [236 257])
            ("std" using (:type ("std" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [261 281])
            ("apsara" using (:type ("apsara" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [282 305])
            ("apsara::kuafu3" using (:type ("apsara::kuafu3" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [306 337])
            ("apsara::sqlonline" using (:type ("apsara::sqlonline" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [338 372])
            ("DECLARE_FLAG_STRING" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("sqlstorage_DefaultDBName" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [394 419]))                  
                :type "int")
                nil [374 420])
            ("DECLARE_FLAG_STRING" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("sqlstorage_DefaultServiceName" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [441 471]))                  
                :type "int")
                nil [421 472])
            ("TestSystemColumn" type
               (:superclasses 
                  ( ("UnitTestFixtureBase" type
                       (:protection "public"
                        :type "class")
                        nil nil))                  
                :members 
                  ( ("public" label nil (reparse-symbol classsubparts) [544 551])
                    ("Setup" function
                       (:prototype-flag t
                        :type "void")
                        (reparse-symbol classsubparts) [556 569])
                    ("CleanUp" function
                       (:prototype-flag t
                        :type "void")
                        (reparse-symbol classsubparts) [574 589])
                    ("CreateTable" function
                       (:prototype-flag t
                        :arguments 
                          ( ("caseName" variable
                               (:reference 1
                                :constant-flag t
                                :type ("string" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [611 634]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [594 635])
                    ("TestDeleteCell" function
                       (:prototype-flag t
                        :type "void")
                        (reparse-symbol classsubparts) [640 662])
                    ("_TestDeleteCell" function
                       (:prototype-flag t
                        :arguments 
                          ( ("notifier" variable
                               (:reference 1
                                :type ("Notifier" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [688 707]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [667 708])
                    ("TestDeleteCellFunc" function
                       (:prototype-flag t
                        :type "void")
                        (reparse-symbol classsubparts) [713 739])
                    ("TestNullAttr" function
                       (:prototype-flag t
                        :type "void")
                        (reparse-symbol classsubparts) [745 765])
                    ("_TestNullAttr" function
                       (:prototype-flag t
                        :arguments 
                          ( ("notifier" variable
                               (:reference 1
                                :type ("Notifier" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [789 808]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [770 809])
                    ("TestNullAttrFunc" function
                       (:prototype-flag t
                        :type "void")
                        (reparse-symbol classsubparts) [814 838])
                    ("TestInsertNullAttr" function
                       (:prototype-flag t
                        :type "void")
                        (reparse-symbol classsubparts) [844 870])
                    ("_TestInsertNullAttr" function
                       (:prototype-flag t
                        :arguments 
                          ( ("notifier" variable
                               (:reference 1
                                :type ("Notifier" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [900 919]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [875 920])
                    ("TestInsertNullAttrFunc" function
                       (:prototype-flag t
                        :type "void")
                        (reparse-symbol classsubparts) [925 955])
                    ("TestColumnName" function
                       (:prototype-flag t
                        :type "void")
                        (reparse-symbol classsubparts) [961 983])
                    ("_TestColumnName" function
                       (:prototype-flag t
                        :arguments 
                          ( ("notifier" variable
                               (:reference 1
                                :type ("Notifier" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [1009 1028]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [988 1029])
                    ("TestColumnNameFunc" function
                       (:prototype-flag t
                        :type "void")
                        (reparse-symbol classsubparts) [1034 1060])
                    ("TestReadExpression" function
                       (:prototype-flag t
                        :type "void")
                        (reparse-symbol classsubparts) [1066 1092])
                    ("_TestReadExpression" function
                       (:prototype-flag t
                        :arguments 
                          ( ("notifier" variable
                               (:reference 1
                                :type ("Notifier" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [1122 1141]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [1097 1142])
                    ("TestReadExpressionFunc" function
                       (:prototype-flag t
                        :type "void")
                        (reparse-symbol classsubparts) [1147 1177])
                    ("TestBug126020" function
                       (:prototype-flag t
                        :type "void")
                        (reparse-symbol classsubparts) [1183 1204])
                    ("_TestBug126020" function
                       (:prototype-flag t
                        :arguments 
                          ( ("notifier" variable
                               (:reference 1
                                :type ("Notifier" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [1229 1248]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [1209 1249])
                    ("TestBug126020Func" function
                       (:prototype-flag t
                        :type "void")
                        (reparse-symbol classsubparts) [1254 1279])
                    ("TestClientMeta" function
                       (:prototype-flag t
                        :type "void")
                        (reparse-symbol classsubparts) [1285 1307])
                    ("_TestClientMeta" function
                       (:prototype-flag t
                        :arguments 
                          ( ("notifier" variable
                               (:reference 1
                                :type ("Notifier" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [1333 1352]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [1312 1353])
                    ("TestClientMetaFunc" function
                       (:prototype-flag t
                        :type "void")
                        (reparse-symbol classsubparts) [1358 1384])
                    ("TestTxnMutual" function
                       (:prototype-flag t
                        :type "void")
                        (reparse-symbol classsubparts) [1390 1411])
                    ("_TestTxnMutual" function
                       (:prototype-flag t
                        :arguments 
                          ( ("notifier" variable
                               (:reference 1
                                :type ("Notifier" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [1436 1455]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [1416 1456])
                    ("TestTxnMutualFunc" function
                       (:prototype-flag t
                        :type "void")
                        (reparse-symbol classsubparts) [1461 1486])
                    ("TestStatelessTxnConstraint" function
                       (:prototype-flag t
                        :type "void")
                        (reparse-symbol classsubparts) [1492 1526])
                    ("_TestStatelessTxnConstraint" function
                       (:prototype-flag t
                        :arguments 
                          ( ("notifier" variable
                               (:reference 1
                                :type ("Notifier" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [1564 1583]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [1531 1584])
                    ("TestStatelessTxnConstraintFunc" function
                       (:prototype-flag t
                        :type "void")
                        (reparse-symbol classsubparts) [1589 1627])
                    ("TestTxnLockMutual" function
                       (:prototype-flag t
                        :type "void")
                        (reparse-symbol classsubparts) [1633 1658])
                    ("_TestTxnLockMutual" function
                       (:prototype-flag t
                        :arguments 
                          ( ("notifier" variable
                               (:reference 1
                                :type ("Notifier" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [1687 1706]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [1663 1707])
                    ("TestTxnLockMutualFunc" function
                       (:prototype-flag t
                        :type "void")
                        (reparse-symbol classsubparts) [1712 1741])
                    ("TestProcessTxnLockMutual" function
                       (:prototype-flag t
                        :type "void")
                        (reparse-symbol classsubparts) [1747 1779])
                    ("_TestProcessTxnLockMutual" function
                       (:prototype-flag t
                        :arguments 
                          ( ("notifier" variable
                               (:reference 1
                                :type ("Notifier" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [1815 1834]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [1784 1835])
                    ("TestProcessTxnLockMutualFunc" function
                       (:prototype-flag t
                        :type "void")
                        (reparse-symbol classsubparts) [1840 1876])
                    ("APSARA_UNIT_TEST_CASE" function
                       (:prototype-flag t
                        :arguments 
                          ( ("" variable (:type ("TestDeleteCell" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1905 1920]))                          
                        :type "int")
                        (reparse-symbol classsubparts) [1883 1928])
                    ("APSARA_UNIT_TEST_CASE" function
                       (:prototype-flag t
                        :arguments 
                          ( ("" variable (:type ("TestInsertNullAttr" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1955 1974]))                          
                        :type "int")
                        (reparse-symbol classsubparts) [1933 1982])
                    ("APSARA_UNIT_TEST_CASE" function
                       (:prototype-flag t
                        :arguments 
                          ( ("" variable (:type ("TestColumnName" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2009 2024]))                          
                        :type "int")
                        (reparse-symbol classsubparts) [1987 2032])
                    ("APSARA_UNIT_TEST_CASE" function
                       (:prototype-flag t
                        :arguments 
                          ( ("" variable (:type ("TestBug126020" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2059 2073]))                          
                        :type "int")
                        (reparse-symbol classsubparts) [2037 2081])
                    ("APSARA_UNIT_TEST_CASE" function
                       (:prototype-flag t
                        :arguments 
                          ( ("" variable (:type ("TestClientMeta" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2108 2123]))                          
                        :type "int")
                        (reparse-symbol classsubparts) [2086 2131])
                    ("APSARA_UNIT_TEST_CASE" function
                       (:prototype-flag t
                        :arguments 
                          ( ("" variable (:type ("TestTxnMutual" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2158 2172]))                          
                        :type "int")
                        (reparse-symbol classsubparts) [2136 2180])
                    ("APSARA_UNIT_TEST_CASE" function
                       (:prototype-flag t
                        :arguments 
                          ( ("" variable (:type ("TestReadExpression" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2207 2226]))                          
                        :type "int")
                        (reparse-symbol classsubparts) [2185 2234])
                    ("APSARA_UNIT_TEST_CASE" function
                       (:prototype-flag t
                        :arguments 
                          ( ("" variable (:type ("TestStatelessTxnConstraint" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2261 2288]))                          
                        :type "int")
                        (reparse-symbol classsubparts) [2239 2296])
                    ("APSARA_UNIT_TEST_CASE" function
                       (:prototype-flag t
                        :arguments 
                          ( ("" variable (:type ("TestNullAttr" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2323 2336]))                          
                        :type "int")
                        (reparse-symbol classsubparts) [2301 2344])
                    ("APSARA_UNIT_TEST_CASE" function
                       (:prototype-flag t
                        :arguments 
                          ( ("" variable (:type ("TestTxnLockMutual" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2371 2389]))                          
                        :type "int")
                        (reparse-symbol classsubparts) [2349 2397])
                    ("APSARA_UNIT_TEST_CASE" function
                       (:prototype-flag t
                        :arguments 
                          ( ("" variable (:type ("TestProcessTxnLockMutual" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2424 2449]))                          
                        :type "int")
                        (reparse-symbol classsubparts) [2402 2457])
                    ("private" label nil (reparse-symbol classsubparts) [2459 2467])
                    ("mDB" variable (:type ("DataBasePtr" type (:type "class") nil nil)) (reparse-symbol classsubparts) [2472 2488])
                    ("mTableName" variable (:type ("string" type (:type "class") nil nil)) (reparse-symbol classsubparts) [2493 2511])
                    ("mViewName" variable (:type ("string" type (:type "class") nil nil)) (reparse-symbol classsubparts) [2516 2533])
                    ("mHelp" variable (:type ("tr1::shared_ptr" type
                         (:template-specifier 
                            ( ("DataBaseHelp" type nil nil nil))                            
                          :type "class")
                          nil nil)) (reparse-symbol classsubparts) [2538 2574]))                  
                :type "class")
                nil [474 2577])
            ("APSARA_UNIT_TEST_FIXTURE" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("TestSystemColumn" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2604 2621]))                  
                :type "int")
                nil [2579 2622])
            ("CreateTable" function
               (:parent "TestSystemColumn"
                :arguments 
                  ( ("caseName" variable
                       (:reference 1
                        :constant-flag t
                        :type ("string" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [2659 2682]))                  
                :type "void")
                nil [2624 5590])
            ("Setup" function
               (:parent "TestSystemColumn"
                :type "void")
                nil [5592 5695])
            ("CleanUp" function
               (:parent "TestSystemColumn"
                :type "void")
                nil [5697 5767])
            ("_TestProcessTxnLockMutual" function
               (:parent "TestSystemColumn"
                :arguments 
                  ( ("notifier" variable
                       (:reference 1
                        :type ("Notifier" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [5818 5837]))                  
                :type "void")
                nil [5769 5900])
            ("TestProcessTxnLockMutual" function
               (:parent "TestSystemColumn"
                :type "void")
                nil [5902 6326])
            ("TestProcessTxnLockMutualFunc" function
               (:parent "TestSystemColumn"
                :type "void")
                nil [6328 7536])
            ("_TestTxnLockMutual" function
               (:parent "TestSystemColumn"
                :arguments 
                  ( ("notifier" variable
                       (:reference 1
                        :type ("Notifier" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [7579 7598]))                  
                :type "void")
                nil [7537 7654])
            ("TestTxnLockMutual" function
               (:parent "TestSystemColumn"
                :type "void")
                nil [7656 8066])
            ("TestTxnLockMutualFunc" function
               (:parent "TestSystemColumn"
                :type "void")
                nil [8068 8749])
            ("_TestStatelessTxnConstraint" function
               (:parent "TestSystemColumn"
                :arguments 
                  ( ("notifier" variable
                       (:reference 1
                        :type ("Notifier" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [8801 8820]))                  
                :type "void")
                nil [8750 8885])
            ("TestStatelessTxnConstraint" function
               (:parent "TestSystemColumn"
                :type "void")
                nil [8887 9315])
            ("TestStatelessTxnConstraintFunc" function
               (:parent "TestSystemColumn"
                :type "void")
                nil [9317 12306])
            ("_TestReadExpression" function
               (:parent "TestSystemColumn"
                :arguments 
                  ( ("notifier" variable
                       (:reference 1
                        :type ("Notifier" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [12351 12370]))                  
                :type "void")
                nil [12308 12427])
            ("TestReadExpression" function
               (:parent "TestSystemColumn"
                :type "void")
                nil [12429 12841])
            ("TestReadExpressionFunc" function
               (:parent "TestSystemColumn"
                :type "void")
                nil [12843 15868])
            ("_TestInsertNullAttr" function
               (:parent "TestSystemColumn"
                :arguments 
                  ( ("notifier" variable
                       (:reference 1
                        :type ("Notifier" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [15913 15932]))                  
                :type "void")
                nil [15870 15989])
            ("TestInsertNullAttr" function
               (:parent "TestSystemColumn"
                :type "void")
                nil [15991 16403])
            ("TestInsertNullAttrFunc" function
               (:parent "TestSystemColumn"
                :type "void")
                nil [16405 18671])
            ("_TestDeleteCell" function
               (:parent "TestSystemColumn"
                :arguments 
                  ( ("notifier" variable
                       (:reference 1
                        :type ("Notifier" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [18712 18731]))                  
                :type "void")
                nil [18673 18784])
            ("TestDeleteCell" function
               (:parent "TestSystemColumn"
                :type "void")
                nil [18786 19190])
            ("TestDeleteCellFunc" function
               (:parent "TestSystemColumn"
                :type "void")
                nil [19192 20913])
            ("_TestNullAttr" function
               (:parent "TestSystemColumn"
                :arguments 
                  ( ("notifier" variable
                       (:reference 1
                        :type ("Notifier" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [20951 20970]))                  
                :type "void")
                nil [20914 21021])
            ("TestNullAttr" function
               (:parent "TestSystemColumn"
                :type "void")
                nil [21023 21423])
            ("TestNullAttrFunc" function
               (:parent "TestSystemColumn"
                :type "void")
                nil [21425 24154])
            ("_TestColumnName" function
               (:parent "TestSystemColumn"
                :arguments 
                  ( ("notifier" variable
                       (:reference 1
                        :type ("Notifier" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [24194 24213]))                  
                :type "void")
                nil [24155 24266])
            ("TestColumnName" function
               (:parent "TestSystemColumn"
                :type "void")
                nil [24268 24672])
            ("TestColumnNameFunc" function
               (:parent "TestSystemColumn"
                :type "void")
                nil [24674 26824])
            ("_TestBug126020" function
               (:parent "TestSystemColumn"
                :arguments 
                  ( ("notifier" variable
                       (:reference 1
                        :type ("Notifier" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [26863 26882]))                  
                :type "void")
                nil [26825 26934])
            ("TestBug126020" function
               (:parent "TestSystemColumn"
                :type "void")
                nil [26936 27338])
            ("TestBug126020Func" function
               (:parent "TestSystemColumn"
                :type "void")
                nil [27340 31815])
            ("_TestClientMeta" function
               (:parent "TestSystemColumn"
                :arguments 
                  ( ("notifier" variable
                       (:reference 1
                        :type ("Notifier" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [31855 31874]))                  
                :type "void")
                nil [31816 31927])
            ("TestClientMeta" function
               (:parent "TestSystemColumn"
                :type "void")
                nil [31929 32333])
            ("TestClientMetaFunc" function
               (:parent "TestSystemColumn"
                :type "void")
                nil [32335 37421])
            ("PthreadArg" type
               (:members 
                  ( ("dbPtr" variable (:type ("DataBasePtr" type (:type "class") nil nil)) (reparse-symbol classsubparts) [37446 37464])
                    ("tableName" variable (:type ("string" type (:type "class") nil nil)) (reparse-symbol classsubparts) [37469 37486])
                    ("iterator" variable (:type ("int32_t" type (:type "class") nil nil)) (reparse-symbol classsubparts) [37491 37508])
                    ("PthreadArg" function
                       (:constructor-flag t
                        :arguments 
                          ( ("dataBasePtr" variable (:type ("DataBasePtr" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [37524 37548])
                            ("dataStoreName" variable (:type ("string" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [37549 37570])
                            ("iter" variable (:type ("int32_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [37571 37584]))                          
                        :type ("PthreadArg" type (:type "struct") nil nil))
                        (reparse-symbol classsubparts) [37513 37685]))                  
                :type "struct")
                nil [37422 37688])
            ("TxnBatchModifyThread" function
               (:pointer 1
                :arguments 
                  ( ("arg" variable
                       (:pointer 1
                        :type "void")
                        (reparse-symbol arg-sub-list) [37716 37726]))                  
                :type "void")
                nil [37689 39063])
            ("ModifyThread" function
               (:pointer 1
                :arguments 
                  ( ("arg" variable
                       (:pointer 1
                        :type "void")
                        (reparse-symbol arg-sub-list) [39083 39093]))                  
                :type "void")
                nil [39064 40256])
            ("_TestTxnMutual" function
               (:parent "TestSystemColumn"
                :arguments 
                  ( ("notifier" variable
                       (:reference 1
                        :type ("Notifier" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [40296 40315]))                  
                :type "void")
                nil [40258 40367])
            ("TestTxnMutual" function
               (:parent "TestSystemColumn"
                :type "void")
                nil [40369 40771])
            ("TestTxnMutualFunc" function
               (:parent "TestSystemColumn"
                :type "void")
                nil [40773 42925]))          
      :file "bug_fix_functiontest.cpp"
      :pointmax 42926
      :fsize 42925
      :lastmodtime '(21834 33 489037 355000)
      :unmatched-syntax '((number 2450 . 2455) (number 2390 . 2395) (number 2337 . 2342) (number 2289 . 2294) (number 2227 . 2232) (number 2173 . 2178) (number 2124 . 2129) (number 2074 . 2079) (number 2025 . 2030) (number 1975 . 1980) (number 1921 . 1926)))
    (semanticdb-table "sqlonline_partition_load_unload_functiontest.cpp"
      :major-mode 'c++-mode
      :tags 
        '( ("sqlonline/client/client_data_store.h" include nil nil [1 48])
            ("sqlonline/common/common.h" include nil nil [49 85])
            ("sqlonline_db_help.h" include nil nil [86 116])
            ("apsara/apsara.h" include nil nil [117 143])
            ("apsara/pangu.h" include nil nil [144 169])
            ("apsara/nuwa.h" include nil nil [170 194])
            ("apsara/common/time_stamp.h" include nil nil [195 232])
            ("apsara/common/safeguard.h" include nil nil [233 269])
            ("apsara/common/unittest.h" include nil nil [270 305])
            ("apsara/common/cluster_info.h" include nil nil [306 345])
            ("boost/atomic.hpp" include (:system-flag t) nil [346 373])
            ("std" using (:type ("std" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [375 395])
            ("std::tr1" using (:type ("std::tr1" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [396 421])
            ("apsara" using (:type ("apsara" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [422 445])
            ("apsara::kuafu3" using (:type ("apsara::kuafu3" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [446 477])
            ("apsara::security" using (:type ("apsara::security" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [478 511])
            ("apsara::sqlonline" using (:type ("apsara::sqlonline" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [512 546])
            ("apsara::common::timing" using (:type ("apsara::common::timing" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [547 586])
            ("sLogger" variable
               (:pointer 1
                :default-value "logging::GetLogger(
    \"/apsara/sqlonline/testing/functiontest/sqlonline_abnormal_functiontest\")"
                :type ("logging::Logger" type (:type "class") nil nil))
                nil [588 713])
            ("DECLARE_FLAG_STRING" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("sqlstorage_DefaultDBName" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [735 760]))                  
                :type "int")
                nil [715 761])
            ("DECLARE_FLAG_STRING" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("sqlstorage_DefaultServiceName" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [782 812]))                  
                :type "int")
                nil [762 813])
            ("unnamed" type
               (:members 
                  ( ("SimpleRow" type
                       (:typedef ("map" type
                             (:template-specifier 
                                ( ("string" type nil nil nil)
                                  ("string" type nil nil nil))                                
                              :type "class")
                              nil nil)
                        :type "typedef")
                        (reparse-symbol namespacesubparts) [828 866])
                    ("Gold" type
                       (:typedef ("map" type
                             (:template-specifier 
                                ( ("int" type nil nil nil)
                                  ("pair" type (:template-specifier 
                                    ( ("bool" type nil nil nil)
                                      ("SimpleRow" type nil nil nil))                                    ) nil nil))                                
                              :type "class")
                              nil nil)
                        :type "typedef")
                        (reparse-symbol namespacesubparts) [867 913]))                  
                :type "namespace")
                nil [815 986])
            ("PartitionLoadUnloadFT" type
               (:superclasses 
                  ( ("UnitTestFixtureBase" type
                       (:protection "public"
                        :type "class")
                        nil nil))                  
                :members 
                  ( ("public" label nil (reparse-symbol classsubparts) [1083 1090])
                    ("TestModifyWithUnload" function
                       (:prototype-flag t
                        :type "void")
                        (reparse-symbol classsubparts) [1095 1123])
                    ("_TestModifyWithUnload" function
                       (:prototype-flag t
                        :arguments 
                          ( ("notifier" variable
                               (:reference 1
                                :type ("Notifier" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [1155 1174]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [1128 1175])
                    ("APSARA_UNIT_TEST_CASE" function
                       (:prototype-flag t
                        :arguments 
                          ( ("" variable (:type ("TestModifyWithUnload" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1202 1223]))                          
                        :type "int")
                        (reparse-symbol classsubparts) [1180 1227])
                    ("TestUnloadWithFailover" function
                       (:prototype-flag t
                        :type "void")
                        (reparse-symbol classsubparts) [1233 1263])
                    ("_TestUnloadWithFailover" function
                       (:prototype-flag t
                        :arguments 
                          ( ("notifier" variable
                               (:reference 1
                                :type ("Notifier" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [1297 1316]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [1268 1317])
                    ("APSARA_UNIT_TEST_CASE" function
                       (:prototype-flag t
                        :arguments 
                          ( ("" variable (:type ("TestUnloadWithFailover" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1344 1367]))                          
                        :type "int")
                        (reparse-symbol classsubparts) [1322 1371])
                    ("TestUnloadLoadTime" function
                       (:prototype-flag t
                        :type "void")
                        (reparse-symbol classsubparts) [1377 1403])
                    ("_TestUnloadLoadTime" function
                       (:prototype-flag t
                        :arguments 
                          ( ("notifier" variable
                               (:reference 1
                                :type ("Notifier" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [1433 1452]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [1408 1453])
                    ("APSARA_UNIT_TEST_CASE" function
                       (:prototype-flag t
                        :arguments 
                          ( ("" variable (:type ("TestUnloadLoadTime" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1480 1499]))                          
                        :type "int")
                        (reparse-symbol classsubparts) [1458 1503])
                    ("TestUnloadMassPartitions" function
                       (:prototype-flag t
                        :type "void")
                        (reparse-symbol classsubparts) [1509 1541])
                    ("_TestUnloadMassPartitions" function
                       (:prototype-flag t
                        :arguments 
                          ( ("notifier" variable
                               (:reference 1
                                :type ("Notifier" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [1577 1596]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [1546 1597])
                    ("APSARA_UNIT_TEST_CASE" function
                       (:prototype-flag t
                        :arguments 
                          ( ("" variable (:type ("TestUnloadMassPartitions" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1624 1649]))                          
                        :type "int")
                        (reparse-symbol classsubparts) [1602 1653])
                    ("Setup" function
                       (:prototype-flag t
                        :type "void")
                        (reparse-symbol classsubparts) [1659 1672])
                    ("CleanUp" function
                       (:prototype-flag t
                        :type "void")
                        (reparse-symbol classsubparts) [1677 1692])
                    ("private" label nil (reparse-symbol classsubparts) [1695 1703])
                    ("CreateTable" function
                       (:prototype-flag t
                        :arguments 
                          ( ("tableName" variable
                               (:reference 1
                                :constant-flag t
                                :type ("string" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [1725 1749])
                            ("partCount" variable (:type "int") (reparse-symbol arg-sub-list) [1750 1764]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [1708 1765])
                    ("VerifyTable" function
                       (:prototype-flag t
                        :arguments 
                          ( ("tableName" variable
                               (:reference 1
                                :constant-flag t
                                :type ("string" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [1797 1821])
                            ("gold" variable
                               (:reference 1
                                :constant-flag t
                                :type ("Gold" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [1830 1847])
                            ("cause" variable
                               (:reference 1
                                :constant-flag t
                                :type ("string" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [1856 1876]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [1771 1877])
                    ("WriteData" function
                       (:prototype-flag t
                        :arguments 
                          ( ("tableName" variable
                               (:reference 1
                                :constant-flag t
                                :type ("string" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [1907 1931])
                            ("numRow" variable (:type "int") (reparse-symbol arg-sub-list) [1932 1943])
                            ("valueSize" variable (:type "int") (reparse-symbol arg-sub-list) [1944 1958]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [1883 1959])
                    ("WriteThreadFunc" function
                       (:prototype-flag t
                        :arguments 
                          ( ("tableName" variable
                               (:reference 1
                                :constant-flag t
                                :type ("string" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [1994 2018])
                            ("gold" variable
                               (:pointer 1
                                :type ("Gold" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [2019 2030])
                            ("acceptedErrors" variable
                               (:pointer 1
                                :type ("map" type
                                     (:template-specifier 
                                        ( ("SQLErrorType" type nil nil nil)
                                          ("string" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [2039 2081])
                            ("stop" variable
                               (:pointer 1
                                :type ("boost::atomic" type
                                     (:template-specifier 
                                        ( ("bool" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [2090 2116]))                          
                        :type "int")
                        (reparse-symbol classsubparts) [1965 2117])
                    ("UnloadLoadThreadFunc" function
                       (:prototype-flag t
                        :arguments 
                          ( ("tableName" variable
                               (:reference 1
                                :constant-flag t
                                :type ("string" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [2157 2181])
                            ("stop" variable
                               (:pointer 1
                                :type ("boost::atomic" type
                                     (:template-specifier 
                                        ( ("bool" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [2182 2208]))                          
                        :type "int")
                        (reparse-symbol classsubparts) [2123 2209])
                    ("private" label nil (reparse-symbol classsubparts) [2211 2219])
                    ("mDB" variable (:type ("DataBasePtr" type (:type "class") nil nil)) (reparse-symbol classsubparts) [2224 2240])
                    ("mHelp" variable (:type ("tr1::shared_ptr" type
                         (:template-specifier 
                            ( ("DataBaseHelp" type nil nil nil))                            
                          :type "class")
                          nil nil)) (reparse-symbol classsubparts) [2245 2281]))                  
                :type "class")
                nil [1001 2284])
            ("APSARA_UNIT_TEST_FIXTURE" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PartitionLoadUnloadFT" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2310 2332]))                  
                :type "int")
                nil [2285 2333])
            ("unnamed" type
               (:members 
                  ( ("GetRandomString" function
                       (:arguments 
                          ( ("n" variable (:type ("size_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2371 2380]))                          
                        :type ("string" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [2348 2690])
                    ("FinalNotifier" type
                       (:members 
                          ( ("public" label nil (reparse-symbol classsubparts) [2714 2721])
                            ("FinalNotifier" function
                               (:constructor-flag t
                                :arguments 
                                  ( ("notifier" variable
                                       (:pointer 1
                                        :type ("Notifier" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [2740 2759]))                                  
                                :type ("FinalNotifier" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [2726 2796])
                            ("FinalNotifier" function
                               (:destructor-flag t
                                :type "void")
                                (reparse-symbol classsubparts) [2801 2858])
                            ("private" label nil (reparse-symbol classsubparts) [2860 2868])
                            ("mNotifier" variable
                               (:pointer 1
                                :type ("Notifier" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [2873 2893]))                          
                        :type "class")
                        (reparse-symbol namespacesubparts) [2692 2896])
                    ("kDBName" variable
                       (:default-value "\"\""
                        :type ("string" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [2898 2918])
                    ("kMasterAddr" variable
                       (:default-value "\"\""
                        :type ("string" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [2919 2943])
                    ("kMaxPK" variable
                       (:constant-flag t
                        :default-value "1000000"
                        :type "int")
                        (reparse-symbol namespacesubparts) [2944 2971]))                  
                :type "namespace")
                nil [2335 2974])
            ("Setup" function
               (:parent "PartitionLoadUnloadFT"
                :type "void")
                nil [2989 3322])
            ("CleanUp" function
               (:parent "PartitionLoadUnloadFT"
                :type "void")
                nil [3324 3413])
            ("TestModifyWithUnload" function
               (:parent "PartitionLoadUnloadFT"
                :type "void")
                nil [3415 3720])
            ("_TestModifyWithUnload" function
               (:parent "PartitionLoadUnloadFT"
                :arguments 
                  ( ("notifier" variable
                       (:reference 1
                        :type ("Notifier" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [3772 3791]))                  
                :type "void")
                nil [3722 5136])
            ("TestUnloadWithFailover" function
               (:parent "PartitionLoadUnloadFT"
                :type "void")
                nil [5138 5447])
            ("_TestUnloadWithFailover" function
               (:parent "PartitionLoadUnloadFT"
                :arguments 
                  ( ("notifier" variable
                       (:reference 1
                        :type ("Notifier" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [5501 5520]))                  
                :type "void")
                nil [5449 7088])
            ("TestUnloadLoadTime" function
               (:parent "PartitionLoadUnloadFT"
                :type "void")
                nil [7090 7391])
            ("_TestUnloadLoadTime" function
               (:parent "PartitionLoadUnloadFT"
                :arguments 
                  ( ("notifier" variable
                       (:reference 1
                        :type ("Notifier" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [7441 7460]))                  
                :type "void")
                nil [7393 8346])
            ("TestUnloadMassPartitions" function
               (:parent "PartitionLoadUnloadFT"
                :type "void")
                nil [8348 8661])
            ("_TestUnloadMassPartitions" function
               (:parent "PartitionLoadUnloadFT"
                :arguments 
                  ( ("notifier" variable
                       (:reference 1
                        :type ("Notifier" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [8717 8736]))                  
                :type "void")
                nil [8663 9891])
            ("CreateTable" function
               (:parent "PartitionLoadUnloadFT"
                :arguments 
                  ( ("tableName" variable
                       (:reference 1
                        :constant-flag t
                        :type ("string" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [9933 9957])
                    ("partCount" variable (:type "int") (reparse-symbol arg-sub-list) [9958 9972]))                  
                :type "void")
                nil [9893 11196])
            ("VerifyTable" function
               (:parent "PartitionLoadUnloadFT"
                :arguments 
                  ( ("tableName" variable
                       (:reference 1
                        :constant-flag t
                        :type ("string" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [11243 11267])
                    ("gold" variable
                       (:reference 1
                        :constant-flag t
                        :type ("Gold" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [11268 11285])
                    ("cause" variable
                       (:reference 1
                        :constant-flag t
                        :type ("string" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [11286 11306]))                  
                :type "void")
                nil [11198 12904])
            ("unnamed" type
               (:members 
                  ( ("PKGenerator" variable (:type "int") (reparse-symbol namespacesubparts) [12944 12956])
                    ("RandomPKGen" function (:type "int") (reparse-symbol namespacesubparts) [12958 13035])
                    ("PartitionPKGen" function
                       (:arguments 
                          ( ("partCount" variable (:type "int") (reparse-symbol arg-sub-list) [13056 13070])
                            ("i" variable (:type "int") (reparse-symbol arg-sub-list) [13071 13077]))                          
                        :type "int")
                        (reparse-symbol namespacesubparts) [13037 13165])
                    ("WriteDataFunc" function
                       (:arguments 
                          ( ("ds" variable
                               (:reference 1
                                :constant-flag t
                                :type ("IDataStorePtr" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [13190 13214])
                            ("tableName" variable
                               (:reference 1
                                :constant-flag t
                                :type ("string" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [13215 13239])
                            ("pkGen" variable
                               (:reference 1
                                :constant-flag t
                                :type ("PKGenerator" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [13244 13269])
                            ("numRow" variable (:type "int") (reparse-symbol arg-sub-list) [13270 13281])
                            ("valueSize" variable (:type "int") (reparse-symbol arg-sub-list) [13282 13296]))                          
                        :type "int")
                        (reparse-symbol namespacesubparts) [13167 13792]))                  
                :type "namespace")
                nil [12906 13795])
            ("WriteData" function
               (:parent "PartitionLoadUnloadFT"
                :arguments 
                  ( ("tableName" variable
                       (:reference 1
                        :constant-flag t
                        :type ("string" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [13853 13877])
                    ("numRow" variable (:type "int") (reparse-symbol arg-sub-list) [13878 13889])
                    ("valueSize" variable (:type "int") (reparse-symbol arg-sub-list) [13890 13904]))                  
                :type "void")
                nil [13810 14333])
            ("WriteThreadFunc" function
               (:parent "PartitionLoadUnloadFT"
                :arguments 
                  ( ("tableName" variable
                       (:reference 1
                        :constant-flag t
                        :type ("string" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [14383 14407])
                    ("gold" variable
                       (:pointer 1
                        :type ("Gold" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [14408 14419])
                    ("acceptedErrors" variable
                       (:pointer 1
                        :type ("map" type
                             (:template-specifier 
                                ( ("SQLErrorType" type nil nil nil)
                                  ("string" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol arg-sub-list) [14424 14466])
                    ("stop" variable
                       (:pointer 1
                        :type ("boost::atomic" type
                             (:template-specifier 
                                ( ("bool" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol arg-sub-list) [14471 14497]))                  
                :type "int")
                nil [14335 16281])
            ("UnloadLoadThreadFunc" function
               (:parent "PartitionLoadUnloadFT"
                :arguments 
                  ( ("tableName" variable
                       (:reference 1
                        :constant-flag t
                        :type ("string" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [16336 16360])
                    ("stop" variable
                       (:pointer 1
                        :type ("boost::atomic" type
                             (:template-specifier 
                                ( ("bool" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol arg-sub-list) [16361 16387]))                  
                :type "int")
                nil [16283 16858]))          
      :file "sqlonline_partition_load_unload_functiontest.cpp"
      :pointmax 16859
      :fsize 16858
      :lastmodtime '(21836 18219 768127 661000)
      :unmatched-syntax '((punctuation 12942 . 12943) (semantic-list 12940 . 12942) (INT 12936 . 12939) (punctuation 12935 . 12936) (symbol 12927 . 12935) (TYPEDEF 12919 . 12926) (number 1650 . 1651) (number 1500 . 1501) (number 1368 . 1369) (number 1224 . 1225)))
    (semanticdb-table "sqlonline_partition_split_merge_functiontest.cpp"
      :major-mode 'c++-mode
      :tags 
        '( ("sqlonline_db_help.h" include nil nil [1 31])
            ("sqlonline/client/multiput_executor.h" include nil nil [32 79])
            ("sqlonline/client/client_data_store.h" include nil nil [80 127])
            ("sqlonline/core/range_splitter.h" include nil nil [128 170])
            ("sqlonline/testing/common/utility.h" include nil nil [171 216])
            ("sqlonline/testing/common/systest_util.h" include nil nil [217 267])
            ("sqlonline/common/sqlonline_row_formatter.h" include nil nil [268 321])
            ("sqlonline/common/sqlonline_zero_copy_stream.h" include nil nil [322 378])
            ("apsara/common/flag.h" include nil nil [379 410])
            ("apsara/common/unittest.h" include nil nil [411 446])
            ("apsara/common/time_stamp.h" include nil nil [447 484])
            ("sqlonline_console_lib.h" include nil nil [485 519])
            ("tr1/functional" include (:system-flag t) nil [520 545])
            ("std" using (:type ("std" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [547 567])
            ("std::tr1" using (:type ("std::tr1" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [568 593])
            ("apsara" using (:type ("apsara" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [594 617])
            ("apsara::sqlonline" using (:type ("apsara::sqlonline" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [618 652])
            ("apsara::sqlonline::test" using (:type ("apsara::sqlonline::test" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [653 693])
            ("apsara::sqlonline::plainbuffer" using (:type ("apsara::sqlonline::plainbuffer" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [694 741])
            ("apsara::common::timing" using (:type ("apsara::common::timing" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [742 781])
            ("apsara::kuafu3" using (:type ("apsara::kuafu3" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [782 813])
            ("DEFINE_FLAG_INT32" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("sqlonline_SplitMergeTest_FileCount" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [833 868]))                  
                :type "int")
                nil [815 933])
            ("DEFINE_FLAG_INT32" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("sqlonline_SplitMergeTest_RowCount" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [952 986]))                  
                :type "int")
                nil [934 1027])
            ("DEFINE_FLAG_INT32" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("sqlonline_SplitMergeTest_PartNum" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1046 1079]))                  
                :type "int")
                nil [1028 1117])
            ("DEFINE_FLAG_INT32" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("sqlonline_SplitMergeTest_MaxVersion" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1136 1172]))                  
                :type "int")
                nil [1118 1210])
            ("DEFINE_FLAG_BOOL" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("sqlonline_SplitMergeTest_CellWithSpecVersion" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1228 1273])
                    ("" variable (:type ("true" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1278 1283]))                  
                :type "int")
                nil [1211 1284])
            ("DEFINE_FLAG_STRING" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("single_table_name" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1304 1322]))                  
                :type "int")
                nil [1285 1364])
            ("DEFINE_FLAG_STRING" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("table_group_name" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1384 1401]))                  
                :type "int")
                nil [1365 1442])
            ("DEFINE_FLAG_STRING" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("lg_name" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1462 1470]))                  
                :type "int")
                nil [1443 1488])
            ("DECLARE_FLAG_STRING" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("sqlstorage_DefaultDBName" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1509 1534]))                  
                :type "int")
                nil [1489 1535])
            ("DECLARE_FLAG_STRING" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("sqlstorage_DefaultServiceName" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1556 1586]))                  
                :type "int")
                nil [1536 1587])
            ("unnamed" type
               (:members 
                  ( ("sLogger" variable
                       (:pointer 1
                        :default-value "logging::GetLogger(\"/apsara/sqlonline/testing/functiontest/sqlonline_partition_split_functiontest\")"
                        :type ("logging::Logger" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [1601 1728])
                    ("standardDBName" variable
                       (:constant-flag t
                        :default-value "\"test_partition_split_database_1\""
                        :type ("string" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [1730 1794])
                    ("testDBName" variable
                       (:constant-flag t
                        :default-value "\"test_partition_split_database_2\""
                        :type ("string" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [1795 1855])
                    ("serviceAddress" variable
                       (:default-value "\"\""
                        :type ("string" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [1856 1883])
                    ("Mode" type
                       (:members 
                          ( ("SPLIT" variable
                               (:constant-flag t
                                :type "int")
                                (reparse-symbol enumsubparts) [1901 1907])
                            ("MERGE" variable
                               (:constant-flag t
                                :type "int")
                                (reparse-symbol enumsubparts) [1912 1918])
                            ("SPLIT_MERGE" variable
                               (:constant-flag t
                                :type "int")
                                (reparse-symbol enumsubparts) [1923 1935])
                            ("FailInjection_SPLIT" variable
                               (:constant-flag t
                                :type "int")
                                (reparse-symbol enumsubparts) [1940 1960])
                            ("FailInjection_MERGE" variable
                               (:constant-flag t
                                :type "int")
                                (reparse-symbol enumsubparts) [1965 1986]))                          
                        :type "enum")
                        (reparse-symbol namespacesubparts) [1885 1987])
                    ("InternalTableVersion" type
                       (:members 
                          ( ("TABLE_2_0" variable
                               (:constant-flag t
                                :type "int")
                                (reparse-symbol enumsubparts) [2021 2031])
                            ("TABLE_3_0" variable
                               (:constant-flag t
                                :type "int")
                                (reparse-symbol enumsubparts) [2036 2047]))                          
                        :type "enum")
                        (reparse-symbol namespacesubparts) [1989 2048])
                    ("InterCapacityUnit" type
                       (:members 
                          ( ("InterCapacityUnit" function
                               (:constructor-flag t
                                :arguments 
                                  ( ("read" variable (:type ("int64_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2099 2112])
                                    ("write" variable (:type ("int64_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2113 2127]))                                  
                                :type ("InterCapacityUnit" type (:type "struct") nil nil))
                                (reparse-symbol classsubparts) [2081 2167])
                            ("InterCapacityUnit" function
                               (:constructor-flag t
                                :type ("InterCapacityUnit" type (:type "struct") nil nil))
                                (reparse-symbol classsubparts) [2173 2195])
                            ("mRead" variable (:type ("int64_t" type (:type "class") nil nil)) (reparse-symbol classsubparts) [2201 2215])
                            ("mWrite" variable (:type ("int64_t" type (:type "class") nil nil)) (reparse-symbol classsubparts) [2220 2235]))                          
                        :type "struct")
                        (reparse-symbol namespacesubparts) [2050 2238])
                    ("NamedSQLVariant" type
                       (:members 
                          ( ("mName" variable (:type ("string" type (:type "class") nil nil)) (reparse-symbol classsubparts) [2269 2282])
                            ("mValue" variable (:type ("SQLVariant" type (:type "class") nil nil)) (reparse-symbol classsubparts) [2287 2305]))                          
                        :type "struct")
                        (reparse-symbol namespacesubparts) [2240 2308])
                    ("PK" type
                       (:typedef ("vector" type
                             (:template-specifier 
                                ( ("NamedSQLVariant" type nil nil nil))                                
                              :type "class")
                              nil nil)
                        :type "typedef")
                        (reparse-symbol namespacesubparts) [2310 2345]))                  
                :type "namespace")
                nil [1589 2348])
            ("PartitionSplitMergeFuncTest" type
               (:superclasses 
                  ( ("UnitTestFixtureBase" type
                       (:protection "public"
                        :type "class")
                        nil nil))                  
                :members 
                  ( ("public" label nil (reparse-symbol classsubparts) [2463 2470])
                    ("Setup" function
                       (:prototype-flag t
                        :type "void")
                        (reparse-symbol classsubparts) [2475 2488])
                    ("CleanUp" function
                       (:prototype-flag t
                        :type "void")
                        (reparse-symbol classsubparts) [2493 2508])
                    ("TestSplitPartitionWithSplitPoint" function
                       (:prototype-flag t
                        :type "void")
                        (reparse-symbol classsubparts) [2750 2790])
                    ("_TestSplitPartitionWithSplitPoint" function
                       (:prototype-flag t
                        :arguments 
                          ( ("notifier" variable
                               (:pointer 1
                                :type ("Notifier" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [2834 2853]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [2795 2854])
                    ("APSARA_UNIT_TEST_CASE" function
                       (:prototype-flag t
                        :arguments 
                          ( ("" variable (:type ("TestSplitPartitionWithSplitPoint" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2881 2914]))                          
                        :type "int")
                        (reparse-symbol classsubparts) [2859 2918])
                    ("TestSplitPartitionWithoutSplitPoint" function
                       (:prototype-flag t
                        :type "void")
                        (reparse-symbol classsubparts) [3137 3180])
                    ("_TestSplitPartitionWithoutSplitPoint" function
                       (:prototype-flag t
                        :arguments 
                          ( ("notifier" variable
                               (:pointer 1
                                :type ("Notifier" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [3227 3246]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [3185 3247])
                    ("APSARA_UNIT_TEST_CASE" function
                       (:prototype-flag t
                        :arguments 
                          ( ("" variable (:type ("TestSplitPartitionWithoutSplitPoint" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3274 3310]))                          
                        :type "int")
                        (reparse-symbol classsubparts) [3252 3314])
                    ("TestSplitMultiPartitionsSameTime" function
                       (:prototype-flag t
                        :type "void")
                        (reparse-symbol classsubparts) [3405 3445])
                    ("_TestSplitMultiPartitionsSameTime" function
                       (:prototype-flag t
                        :arguments 
                          ( ("notifier" variable
                               (:pointer 1
                                :type ("Notifier" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [3489 3508]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [3450 3509])
                    ("APSARA_UNIT_TEST_CASE" function
                       (:prototype-flag t
                        :arguments 
                          ( ("" variable (:type ("TestSplitMultiPartitionsSameTime" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3536 3569]))                          
                        :type "int")
                        (reparse-symbol classsubparts) [3514 3573])
                    ("TestSplitOrMergePartitionWhileSpliting" function
                       (:prototype-flag t
                        :type "void")
                        (reparse-symbol classsubparts) [3672 3718])
                    ("_TestSplitOrMergePartitionWhileSpliting" function
                       (:prototype-flag t
                        :arguments 
                          ( ("notifier" variable
                               (:pointer 1
                                :type ("Notifier" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [3768 3787]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [3723 3788])
                    ("APSARA_UNIT_TEST_CASE" function
                       (:prototype-flag t
                        :arguments 
                          ( ("" variable (:type ("TestSplitOrMergePartitionWhileSpliting" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3815 3854]))                          
                        :type "int")
                        (reparse-symbol classsubparts) [3793 3858])
                    ("TestBatchModifyWhenPartitionSplit" function
                       (:prototype-flag t
                        :type "void")
                        (reparse-symbol classsubparts) [3939 3980])
                    ("_TestBatchModifyWhenPartitionSplit" function
                       (:prototype-flag t
                        :arguments 
                          ( ("notifier" variable
                               (:pointer 1
                                :type ("Notifier" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [4025 4044]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [3985 4045])
                    ("APSARA_UNIT_TEST_CASE" function
                       (:prototype-flag t
                        :arguments 
                          ( ("" variable (:type ("TestBatchModifyWhenPartitionSplit" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4072 4106]))                          
                        :type "int")
                        (reparse-symbol classsubparts) [4050 4110])
                    ("TestMergePartition" function
                       (:prototype-flag t
                        :type "void")
                        (reparse-symbol classsubparts) [4379 4405])
                    ("_TestMergePartition" function
                       (:prototype-flag t
                        :arguments 
                          ( ("notifier" variable
                               (:pointer 1
                                :type ("Notifier" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [4435 4454]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [4410 4455])
                    ("APSARA_UNIT_TEST_CASE" function
                       (:prototype-flag t
                        :arguments 
                          ( ("" variable (:type ("TestMergePartition" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4482 4501]))                          
                        :type "int")
                        (reparse-symbol classsubparts) [4460 4505])
                    ("TestMergePartition_MultiThread" function
                       (:prototype-flag t
                        :type "void")
                        (reparse-symbol classsubparts) [4511 4549])
                    ("_TestMergePartition_MultiThread" function
                       (:prototype-flag t
                        :arguments 
                          ( ("notifier" variable
                               (:pointer 1
                                :type ("Notifier" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [4591 4610]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [4554 4611])
                    ("APSARA_UNIT_TEST_CASE" function
                       (:prototype-flag t
                        :arguments 
                          ( ("" variable (:type ("TestMergePartition_MultiThread" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4638 4669]))                          
                        :type "int")
                        (reparse-symbol classsubparts) [4616 4673])
                    ("TestSplitOrMergePartitionWhileMerging" function
                       (:prototype-flag t
                        :type "void")
                        (reparse-symbol classsubparts) [4679 4724])
                    ("_TestSplitOrMergePartitionWhileMerging" function
                       (:prototype-flag t
                        :arguments 
                          ( ("notifier" variable
                               (:pointer 1
                                :type ("Notifier" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [4773 4792]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [4729 4793])
                    ("APSARA_UNIT_TEST_CASE" function
                       (:prototype-flag t
                        :arguments 
                          ( ("" variable (:type ("TestSplitOrMergePartitionWhileMerging" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4820 4858]))                          
                        :type "int")
                        (reparse-symbol classsubparts) [4798 4862])
                    ("TestBatchModifyWhenPartitionMerge" function
                       (:prototype-flag t
                        :type "void")
                        (reparse-symbol classsubparts) [4868 4909])
                    ("_TestBatchModifyWhenPartitionMerge" function
                       (:prototype-flag t
                        :arguments 
                          ( ("notifier" variable
                               (:pointer 1
                                :type ("Notifier" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [4954 4973]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [4914 4974])
                    ("APSARA_UNIT_TEST_CASE" function
                       (:prototype-flag t
                        :arguments 
                          ( ("" variable (:type ("TestBatchModifyWhenPartitionMerge" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5001 5035]))                          
                        :type "int")
                        (reparse-symbol classsubparts) [4979 5039])
                    ("TestMultiThreadRandomMergeSplit" function
                       (:prototype-flag t
                        :type "void")
                        (reparse-symbol classsubparts) [5045 5084])
                    ("_TestMultiThreadRandomMergeSplit" function
                       (:prototype-flag t
                        :arguments 
                          ( ("notifier" variable
                               (:pointer 1
                                :type ("Notifier" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [5127 5146]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [5089 5147])
                    ("APSARA_UNIT_TEST_CASE" function
                       (:prototype-flag t
                        :arguments 
                          ( ("" variable (:type ("TestMultiThreadRandomMergeSplit" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5174 5206]))                          
                        :type "int")
                        (reparse-symbol classsubparts) [5152 5210])
                    ("TestRandomMergeSplitPartitionWithVerifyStorageSize" function
                       (:prototype-flag t
                        :type "void")
                        (reparse-symbol classsubparts) [5281 5339])
                    ("_TestRandomMergeSplitPartitionWithVerifyStorageSize" function
                       (:prototype-flag t
                        :arguments 
                          ( ("notifier" variable
                               (:pointer 1
                                :type ("Notifier" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [5401 5420]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [5344 5421])
                    ("APSARA_UNIT_TEST_CASE" function
                       (:prototype-flag t
                        :arguments 
                          ( ("" variable (:type ("TestRandomMergeSplitPartitionWithVerifyStorageSize" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5448 5499]))                          
                        :type "int")
                        (reparse-symbol classsubparts) [5426 5503])
                    ("TestRandomMergeSplitPartitionWithVerifyCU" function
                       (:prototype-flag t
                        :type "void")
                        (reparse-symbol classsubparts) [5608 5657])
                    ("_TestRandomMergeSplitPartitionWithVerifyCU" function
                       (:prototype-flag t
                        :arguments 
                          ( ("notifier" variable
                               (:pointer 1
                                :type ("Notifier" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [5710 5729]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [5662 5730])
                    ("APSARA_UNIT_TEST_CASE" function
                       (:prototype-flag t
                        :arguments 
                          ( ("" variable (:type ("TestRandomMergeSplitPartitionWithVerifyCU" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5757 5799]))                          
                        :type "int")
                        (reparse-symbol classsubparts) [5735 5803])
                    ("TestRandomMergeSplitPartitionWith3_0_Table" function
                       (:prototype-flag t
                        :type "void")
                        (reparse-symbol classsubparts) [5809 5859])
                    ("_TestRandomMergeSplitPartitionWith3_0_Table" function
                       (:prototype-flag t
                        :arguments 
                          ( ("notifier" variable
                               (:pointer 1
                                :type ("Notifier" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [5913 5932]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [5864 5933])
                    ("APSARA_UNIT_TEST_CASE" function
                       (:prototype-flag t
                        :arguments 
                          ( ("" variable (:type ("TestRandomMergeSplitPartitionWith3_0_Table" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5960 6003]))                          
                        :type "int")
                        (reparse-symbol classsubparts) [5938 6007])
                    ("TestFailOverWhileSplitAndBatchModify" function
                       (:prototype-flag t
                        :type "void")
                        (reparse-symbol classsubparts) [6113 6157])
                    ("_TestFailOverWhileSplitAndBatchModify" function
                       (:prototype-flag t
                        :arguments 
                          ( ("notifier" variable
                               (:pointer 1
                                :type ("Notifier" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [6205 6224]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [6162 6225])
                    ("APSARA_UNIT_TEST_CASE" function
                       (:prototype-flag t
                        :arguments 
                          ( ("" variable (:type ("TestFailOverWhileSplitAndBatchModify" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6252 6289]))                          
                        :type "int")
                        (reparse-symbol classsubparts) [6230 6293])
                    ("TestFailOverWhileMergeAndBatchModify" function
                       (:prototype-flag t
                        :type "void")
                        (reparse-symbol classsubparts) [6399 6443])
                    ("_TestFailOverWhileMergeAndBatchModify" function
                       (:prototype-flag t
                        :arguments 
                          ( ("notifier" variable
                               (:pointer 1
                                :type ("Notifier" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [6491 6510]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [6448 6511])
                    ("APSARA_UNIT_TEST_CASE" function
                       (:prototype-flag t
                        :arguments 
                          ( ("" variable (:type ("TestFailOverWhileMergeAndBatchModify" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6538 6575]))                          
                        :type "int")
                        (reparse-symbol classsubparts) [6516 6579])
                    ("TestAddTableWhileSplitingAndMerging" function
                       (:prototype-flag t
                        :type "void")
                        (reparse-symbol classsubparts) [6585 6628])
                    ("_TestAddTableWhileSplitingAndMerging" function
                       (:prototype-flag t
                        :arguments 
                          ( ("notifier" variable
                               (:pointer 1
                                :type ("Notifier" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [6675 6694]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [6633 6695])
                    ("APSARA_UNIT_TEST_CASE" function
                       (:prototype-flag t
                        :arguments 
                          ( ("" variable (:type ("TestAddTableWhileSplitingAndMerging" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6722 6758]))                          
                        :type "int")
                        (reparse-symbol classsubparts) [6700 6762])
                    ("TestSplitAndMergeWhileAutoSplit" function
                       (:prototype-flag t
                        :type "void")
                        (reparse-symbol classsubparts) [6768 6807])
                    ("_TestSplitAndMergeWhileAutoSplit" function
                       (:prototype-flag t
                        :arguments 
                          ( ("notifier" variable
                               (:pointer 1
                                :type ("Notifier" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [6850 6869]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [6812 6870])
                    ("APSARA_UNIT_TEST_CASE" function
                       (:prototype-flag t
                        :arguments 
                          ( ("" variable (:type ("TestSplitAndMergeWhileAutoSplit" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6897 6929]))                          
                        :type "int")
                        (reparse-symbol classsubparts) [6875 6933])
                    ("private" label nil (reparse-symbol classsubparts) [6935 6943])
                    ("ConstructSingleTables" function
                       (:prototype-flag t
                        :arguments 
                          ( ("ranges" variable
                               (:reference 1
                                :constant-flag t
                                :type ("vector" type
                                     (:template-specifier 
                                        ( ("Range" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [6975 7003]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [6948 7004])
                    ("ConstructTableGroups" function
                       (:prototype-flag t
                        :arguments 
                          ( ("ranges" variable
                               (:reference 1
                                :constant-flag t
                                :type ("vector" type
                                     (:template-specifier 
                                        ( ("Range" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [7035 7063]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [7009 7064])
                    ("ConstructSubTableInTableGroup" function
                       (:prototype-flag t
                        :arguments 
                          ( ("subTableName" variable
                               (:reference 1
                                :constant-flag t
                                :type ("string" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [7104 7131]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [7069 7132])
                    ("GetPartitionIDOfTestSingleTable" function
                       (:prototype-flag t
                        :arguments 
                          ( ("partRangeBegin" variable
                               (:reference 1
                                :constant-flag t
                                :type ("SQLVariant" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [7176 7209]))                          
                        :type ("string" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [7137 7210])
                    ("GetPartitionIDOfTestTableGroup" function
                       (:prototype-flag t
                        :arguments 
                          ( ("partRangeBegin" variable
                               (:reference 1
                                :constant-flag t
                                :type ("SQLVariant" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [7253 7286]))                          
                        :type ("string" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [7215 7287])
                    ("SplitPartitionOfTestDB" function
                       (:prototype-flag t
                        :arguments 
                          ( ("partID" variable
                               (:reference 1
                                :constant-flag t
                                :type ("string" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [7334 7355])
                            ("splitPoint" variable
                               (:reference 1
                                :constant-flag t
                                :type ("SQLVariant" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [7369 7398])
                            ("newLeftPartID" variable
                               (:pointer 1
                                :type ("string" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [7412 7434])
                            ("newRightPartID" variable
                               (:pointer 1
                                :type ("string" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [7447 7470]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [7293 7471])
                    ("SplitPartitionOfTestDB" function
                       (:prototype-flag t
                        :arguments 
                          ( ("partID" variable
                               (:reference 1
                                :constant-flag t
                                :type ("string" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [7518 7539])
                            ("newLeftPartID" variable
                               (:pointer 1
                                :type ("string" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [7553 7575])
                            ("newRightPartID" variable
                               (:pointer 1
                                :type ("string" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [7588 7611]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [7477 7612])
                    ("SplitPartitionFunc" function
                       (:prototype-flag t
                        :arguments 
                          ( ("partID" variable
                               (:reference 1
                                :constant-flag t
                                :type ("string" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [7658 7679])
                            ("range" variable
                               (:reference 1
                                :constant-flag t
                                :type ("Range" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [7692 7711])
                            ("isOKToFail" variable (:type "bool") (reparse-symbol arg-sub-list) [7724 7740])
                            ("checkNewPartition" variable (:type "bool") (reparse-symbol arg-sub-list) [7753 7776]))                          
                        :type ("int32_t" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [7618 7777])
                    ("MergePartitionOfTestDB" function
                       (:prototype-flag t
                        :arguments 
                          ( ("leftPartID" variable
                               (:reference 1
                                :constant-flag t
                                :type ("string" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [7824 7849])
                            ("rightPartID" variable
                               (:reference 1
                                :constant-flag t
                                :type ("string" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [7862 7888])
                            ("newPartID" variable
                               (:pointer 1
                                :type ("string" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [7901 7919]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [7783 7920])
                    ("MergePartitionFunc" function
                       (:prototype-flag t
                        :arguments 
                          ( ("leftPartID" variable
                               (:reference 1
                                :constant-flag t
                                :type ("string" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [7966 7991])
                            ("rightPartID" variable
                               (:reference 1
                                :constant-flag t
                                :type ("string" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [8004 8030])
                            ("leftRange" variable
                               (:reference 1
                                :constant-flag t
                                :type ("Range" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [8043 8066])
                            ("rightRange" variable
                               (:reference 1
                                :constant-flag t
                                :type ("Range" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [8079 8103])
                            ("isOKToFail" variable (:type "bool") (reparse-symbol arg-sub-list) [8116 8132])
                            ("checkNewPartition" variable (:type "bool") (reparse-symbol arg-sub-list) [8145 8168]))                          
                        :type ("int32_t" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [7926 8169])
                    ("WaitPartitionSplitOrMergeDone" function
                       (:prototype-flag t
                        :arguments 
                          ( ("dbName" variable
                               (:reference 1
                                :constant-flag t
                                :type ("string" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [8223 8244])
                            ("partID" variable
                               (:reference 1
                                :constant-flag t
                                :type ("string" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [8258 8279]))                          
                        :type "bool")
                        (reparse-symbol classsubparts) [8175 8280])
                    ("CheckTable" function
                       (:prototype-flag t
                        :arguments 
                          ( ("tableName" variable
                               (:reference 1
                                :constant-flag t
                                :type ("string" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [8302 8326])
                            ("ranges" variable
                               (:reference 1
                                :constant-flag t
                                :type ("vector" type
                                     (:template-specifier 
                                        ( ("Range" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [8327 8355]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [8286 8356])
                    ("CheckTableGroup" function
                       (:prototype-flag t
                        :arguments 
                          ( ("tableGroupName" variable
                               (:reference 1
                                :constant-flag t
                                :type ("string" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [8396 8425])
                            ("ranges" variable
                               (:reference 1
                                :constant-flag t
                                :type ("vector" type
                                     (:template-specifier 
                                        ( ("Range" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [8439 8467]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [8362 8468])
                    ("VerifyPartitionSchemeOfTestDB" function
                       (:prototype-flag t
                        :arguments 
                          ( ("storeName" variable
                               (:reference 1
                                :constant-flag t
                                :type ("string" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [8522 8546])
                            ("ranges" variable
                               (:reference 1
                                :constant-flag t
                                :type ("vector" type
                                     (:template-specifier 
                                        ( ("Range" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [8560 8588]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [8474 8589])
                    ("WriteAndSyncTable" function
                       (:prototype-flag t
                        :arguments 
                          ( ("tableName" variable
                               (:reference 1
                                :constant-flag t
                                :type ("string" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [8618 8642])
                            ("sync" variable
                               (:default-value "true"
                                :type "bool")
                                (reparse-symbol arg-sub-list) [8643 8659])
                            ("" variable (:type ("Mode" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8661 8673]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [8595 8675])
                    ("WriteAndSyncTableThread" function
                       (:prototype-flag t
                        :arguments 
                          ( ("tableName" variable
                               (:reference 1
                                :constant-flag t
                                :type ("string" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [8722 8746])
                            ("sync" variable (:type "bool") (reparse-symbol arg-sub-list) [8759 8769])
                            ("mode" variable (:type ("Mode" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8782 8792])
                            ("stop" variable
                               (:pointer 1
                                :typemodifiers ("volatile")
                                :type "bool")
                                (reparse-symbol arg-sub-list) [8805 8825]))                          
                        :type "int")
                        (reparse-symbol classsubparts) [8681 8826])
                    ("WriteAndSyncTableGroup" function
                       (:prototype-flag t
                        :arguments 
                          ( ("tableGroupName" variable
                               (:reference 1
                                :constant-flag t
                                :type ("string" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [8860 8889])
                            ("sync" variable
                               (:default-value "true"
                                :type "bool")
                                (reparse-symbol arg-sub-list) [8890 8906])
                            ("" variable (:type ("Mode" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8908 8920]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [8832 8922])
                    ("WriteAndSyncTableGroupThread" function
                       (:prototype-flag t
                        :arguments 
                          ( ("tableGroupName" variable
                               (:reference 1
                                :constant-flag t
                                :type ("string" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [8974 9003])
                            ("sync" variable (:type "bool") (reparse-symbol arg-sub-list) [9013 9023])
                            ("mode" variable (:type ("Mode" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9036 9046])
                            ("stop" variable
                               (:pointer 1
                                :typemodifiers ("volatile")
                                :type "bool")
                                (reparse-symbol arg-sub-list) [9059 9079]))                          
                        :type "int")
                        (reparse-symbol classsubparts) [8928 9080])
                    ("ReadAndVerifyTable" function
                       (:prototype-flag t
                        :arguments 
                          ( ("tableName" variable
                               (:reference 1
                                :constant-flag t
                                :type ("string" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [9110 9134]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [9086 9135])
                    ("ReadAndVerifyTableGroup" function
                       (:prototype-flag t
                        :arguments 
                          ( ("tableGroupName" variable
                               (:reference 1
                                :constant-flag t
                                :type ("string" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [9170 9199]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [9141 9200])
                    ("ReadAndVerifyDataStore" function
                       (:prototype-flag t
                        :arguments 
                          ( ("standardDataStorePtr" variable
                               (:reference 1
                                :constant-flag t
                                :type ("IDataStorePtr" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [9247 9289])
                            ("testDataStorePtr" variable
                               (:reference 1
                                :constant-flag t
                                :type ("IDataStorePtr" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [9303 9341])
                            ("storeName" variable
                               (:reference 1
                                :constant-flag t
                                :type ("string" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [9354 9378])
                            ("pagingKeyCount" variable (:type ("size_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9392 9414]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [9206 9415])
                    ("VerifyKeyQuery" function
                       (:prototype-flag t
                        :arguments 
                          ( ("standardDataStorePtr" variable
                               (:reference 1
                                :constant-flag t
                                :type ("IDataStorePtr" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [9454 9496])
                            ("testDataStorePtr" variable
                               (:reference 1
                                :constant-flag t
                                :type ("IDataStorePtr" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [9510 9548])
                            ("storeName" variable
                               (:reference 1
                                :constant-flag t
                                :type ("string" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [9562 9586]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [9421 9587])
                    ("VerifyRangeQuery" function
                       (:prototype-flag t
                        :arguments 
                          ( ("standardDataStorePtr" variable
                               (:reference 1
                                :constant-flag t
                                :type ("IDataStorePtr" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [9628 9670])
                            ("testDataStorePtr" variable
                               (:reference 1
                                :constant-flag t
                                :type ("IDataStorePtr" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [9684 9722])
                            ("storeName" variable
                               (:reference 1
                                :constant-flag t
                                :type ("string" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [9736 9760]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [9593 9761])
                    ("VerifyRangeQueryWithoutRetry" function
                       (:prototype-flag t
                        :arguments 
                          ( ("standardDataStorePtr" variable
                               (:reference 1
                                :constant-flag t
                                :type ("IDataStorePtr" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [9814 9856])
                            ("testDataStorePtr" variable
                               (:reference 1
                                :constant-flag t
                                :type ("IDataStorePtr" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [9870 9908])
                            ("storeName" variable
                               (:reference 1
                                :constant-flag t
                                :type ("string" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [9922 9946]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [9767 9947])
                    ("ReadAndVerifyTableV2" function
                       (:prototype-flag t
                        :arguments 
                          ( ("tableName" variable
                               (:reference 1
                                :constant-flag t
                                :type ("string" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [9979 10003]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [9953 10004])
                    ("VerifyReadRange" function
                       (:prototype-flag t
                        :arguments 
                          ( ("standardDataStorePtr" variable
                               (:reference 1
                                :constant-flag t
                                :type ("IDataStorePtr" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [10045 10087])
                            ("testDataStorePtr" variable
                               (:reference 1
                                :constant-flag t
                                :type ("IDataStorePtr" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [10100 10138])
                            ("storeName" variable
                               (:reference 1
                                :constant-flag t
                                :type ("string" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [10151 10175]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [10011 10176])
                    ("GenerateRandomSQLVariant" function
                       (:prototype-flag t
                        :arguments 
                          ( ("type" variable (:type ("VariantType" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [10231 10248])
                            ("totalCount" variable (:type ("size_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [10262 10280]))                          
                        :type ("SQLVariant" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [10182 10281])
                    ("GenerateRandomSQLVariant" function
                       (:prototype-flag t
                        :arguments 
                          ( ("ranges" variable
                               (:reference 1
                                :constant-flag t
                                :type ("vector" type
                                     (:template-specifier 
                                        ( ("Range" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [10336 10364])
                            ("totalCount" variable (:type ("size_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [10378 10396]))                          
                        :type ("SQLVariant" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [10287 10397])
                    ("GenerateSplitPoint" function
                       (:prototype-flag t
                        :arguments 
                          ( ("range" variable
                               (:reference 1
                                :constant-flag t
                                :type ("Range" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [10427 10446])
                            ("splitPoint" variable
                               (:pointer 1
                                :type ("SQLVariant" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [10447 10470]))                          
                        :type "bool")
                        (reparse-symbol classsubparts) [10403 10471])
                    ("CreateTable" function
                       (:prototype-flag t
                        :arguments 
                          ( ("tableName" variable
                               (:reference 1
                                :constant-flag t
                                :type ("string" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [10494 10518])
                            ("cu" variable (:type "int") (reparse-symbol arg-sub-list) [10519 10526])
                            ("partCount" variable (:type "int") (reparse-symbol arg-sub-list) [10527 10541])
                            ("version" variable (:type ("InternalTableVersion" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [10542 10571]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [10477 10572])
                    ("DeleteTableIfExist" function
                       (:prototype-flag t
                        :arguments 
                          ( ("tableName" variable
                               (:reference 1
                                :constant-flag t
                                :type ("string" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [10606 10630]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [10582 10631])
                    ("BatchModifyFuncV3" function
                       (:prototype-flag t
                        :arguments 
                          ( ("tableName" variable
                               (:reference 1
                                :constant-flag t
                                :type ("string" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [10672 10696])
                            ("mode" variable (:type ("Mode" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [10709 10719])
                            ("stop" variable
                               (:pointer 1
                                :typemodifiers ("volatile")
                                :type "bool")
                                (reparse-symbol arg-sub-list) [10732 10752]))                          
                        :type "int")
                        (reparse-symbol classsubparts) [10637 10753])
                    ("_BatchModifyFuncV3" function
                       (:prototype-flag t
                        :arguments 
                          ( ("tableName" variable
                               (:reference 1
                                :constant-flag t
                                :type ("string" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [10796 10820])
                            ("existRows" variable
                               (:pointer 1
                                :type ("vector" type
                                     (:template-specifier 
                                        ( ("PK" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [10834 10856])
                            ("mode" variable (:type ("Mode" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [10869 10879])
                            ("notifier" variable
                               (:pointer 1
                                :type ("Notifier" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [10892 10911])
                            ("pool" variable
                               (:pointer 1
                                :type ("arpc::EasyThreadPool" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [10925 10952]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [10759 10953])
                    ("ReadAndVerifyTableV3" function
                       (:prototype-flag t
                        :arguments 
                          ( ("tableName" variable
                               (:reference 1
                                :constant-flag t
                                :type ("string" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [10985 11009]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [10959 11010])
                    ("RangeReadData" function
                       (:prototype-flag t
                        :arguments 
                          ( ("dbPtr" variable
                               (:reference 1
                                :constant-flag t
                                :type ("DataBasePtr" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [11049 11074])
                            ("tableName" variable
                               (:reference 1
                                :constant-flag t
                                :type ("string" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [11087 11111])
                            ("rowsDataVec" variable
                               (:pointer 1
                                :type ("vector" type
                                     (:template-specifier 
                                        ( ("string" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [11124 11152]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [11017 11153])
                    ("BatchModifyFuncV2" function
                       (:prototype-flag t
                        :arguments 
                          ( ("tableName" variable
                               (:reference 1
                                :constant-flag t
                                :type ("string" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [11194 11218])
                            ("mode" variable (:type ("Mode" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [11232 11242])
                            ("stop" variable
                               (:pointer 1
                                :typemodifiers ("volatile")
                                :type "bool")
                                (reparse-symbol arg-sub-list) [11256 11276]))                          
                        :type "int")
                        (reparse-symbol classsubparts) [11159 11277])
                    ("_BatchModifyFuncV2" function
                       (:prototype-flag t
                        :arguments 
                          ( ("tableName" variable
                               (:reference 1
                                :constant-flag t
                                :type ("string" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [11320 11344])
                            ("existRows" variable
                               (:pointer 1
                                :type ("vector" type
                                     (:template-specifier 
                                        ( ("PK" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [11358 11380])
                            ("mode" variable (:type ("Mode" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [11393 11403])
                            ("notifier" variable
                               (:pointer 1
                                :type ("Notifier" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [11416 11435])
                            ("pool" variable
                               (:pointer 1
                                :type ("arpc::EasyThreadPool" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [11449 11476]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [11283 11477])
                    ("GetRawSize" function
                       (:prototype-flag t
                        :arguments 
                          ( ("dbName" variable
                               (:reference 1
                                :constant-flag t
                                :type ("string" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [11502 11523])
                            ("tableName" variable
                               (:reference 1
                                :constant-flag t
                                :type ("string" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [11524 11548]))                          
                        :type ("int64_t" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [11483 11549])
                    ("LoopRandomSplitOrMerge" function
                       (:prototype-flag t
                        :arguments 
                          ( ("tableName" variable
                               (:reference 1
                                :constant-flag t
                                :type ("string" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [11599 11623])
                            ("loopTime" variable (:type ("int32_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [11637 11654])
                            ("isOKToFail" variable (:type "bool") (reparse-symbol arg-sub-list) [11667 11683])
                            ("checkNewPartition" variable (:type "bool") (reparse-symbol arg-sub-list) [11696 11719]))                          
                        :type ("int32_t" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [11555 11720])
                    ("GetSequenceTestPartID" function
                       (:prototype-flag t
                        :arguments 
                          ( ("tableName" variable
                               (:reference 1
                                :constant-flag t
                                :type ("string" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [11766 11790])
                            ("partIDs" variable
                               (:pointer 1
                                :type ("vector" type
                                     (:template-specifier 
                                        ( ("string" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [11804 11828]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [11726 11829])
                    ("GetPartitionRange" function
                       (:prototype-flag t
                        :arguments 
                          ( ("dbName" variable
                               (:reference 1
                                :constant-flag t
                                :type ("string" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [11872 11893])
                            ("partID" variable
                               (:reference 1
                                :constant-flag t
                                :type ("string" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [11907 11928]))                          
                        :type ("Range" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [11835 11929])
                    ("CheckPartitionExist" function
                       (:prototype-flag t
                        :arguments 
                          ( ("dbName" variable
                               (:reference 1
                                :constant-flag t
                                :type ("string" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [11973 11994])
                            ("partID" variable
                               (:reference 1
                                :constant-flag t
                                :type ("string" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [12007 12028])
                            ("expectExist" variable (:type "bool") (reparse-symbol arg-sub-list) [12041 12058]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [11935 12059])
                    ("GetPartitionCu" function
                       (:prototype-flag t
                        :arguments 
                          ( ("dbName" variable
                               (:reference 1
                                :constant-flag t
                                :type ("string" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [12098 12119])
                            ("partID" variable
                               (:reference 1
                                :constant-flag t
                                :type ("string" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [12133 12154])
                            ("partCU" variable
                               (:pointer 1
                                :type ("InterCapacityUnit" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [12168 12194]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [12065 12195])
                    ("CompareCU" function
                       (:prototype-flag t
                        :arguments 
                          ( ("expect" variable
                               (:reference 1
                                :constant-flag t
                                :type ("InterCapacityUnit" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [12229 12261])
                            ("real" variable
                               (:reference 1
                                :constant-flag t
                                :type ("InterCapacityUnit" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [12275 12305]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [12201 12306])
                    ("ManualCompact" function
                       (:prototype-flag t
                        :arguments 
                          ( ("partID" variable
                               (:reference 1
                                :constant-flag t
                                :type ("string" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [12331 12352])
                            ("tableName" variable
                               (:reference 1
                                :constant-flag t
                                :type ("string" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [12353 12377]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [12312 12378])
                    ("GetWorkerFromPartitionID" function
                       (:prototype-flag t
                        :arguments 
                          ( ("dbName" variable
                               (:reference 1
                                :constant-flag t
                                :type ("string" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [12416 12437])
                            ("partID" variable
                               (:reference 1
                                :constant-flag t
                                :type ("string" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [12438 12459]))                          
                        :type ("string" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [12384 12460])
                    ("HandleException" function
                       (:prototype-flag t
                        :arguments 
                          ( ("errorCode" variable (:type ("SQLErrorType" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [12487 12510])
                            ("mode" variable (:type ("Mode" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [12511 12521]))                          
                        :type "bool")
                        (reparse-symbol classsubparts) [12466 12522])
                    ("ChangeCanAutoSplit" function
                       (:prototype-flag t
                        :arguments 
                          ( ("dbName" variable
                               (:reference 1
                                :constant-flag t
                                :type ("string" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [12565 12586])
                            ("tableName" variable
                               (:reference 1
                                :constant-flag t
                                :type ("string" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [12600 12624])
                            ("canAutoSplit" variable (:type "bool") (reparse-symbol arg-sub-list) [12638 12656]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [12528 12657])
                    ("private" label nil (reparse-symbol classsubparts) [12659 12667])
                    ("mStandardDB" variable (:type ("DataBasePtr" type (:type "class") nil nil)) (reparse-symbol classsubparts) [12672 12696])
                    ("mTestDB" variable (:type ("DataBasePtr" type (:type "class") nil nil)) (reparse-symbol classsubparts) [12701 12721])
                    ("mStandardHelp" variable (:type ("tr1::shared_ptr" type
                         (:template-specifier 
                            ( ("DataBaseHelp" type nil nil nil))                            
                          :type "class")
                          nil nil)) (reparse-symbol classsubparts) [12726 12770])
                    ("mTestHelp" variable (:type ("tr1::shared_ptr" type
                         (:template-specifier 
                            ( ("DataBaseHelp" type nil nil nil))                            
                          :type "class")
                          nil nil)) (reparse-symbol classsubparts) [12775 12815])
                    ("mSingleTableName" variable (:type ("string" type (:type "class") nil nil)) (reparse-symbol classsubparts) [12820 12844])
                    ("mTableGroupName" variable (:type ("string" type (:type "class") nil nil)) (reparse-symbol classsubparts) [12849 12872])
                    ("mSeed" variable (:type ("uint32_t" type (:type "class") nil nil)) (reparse-symbol classsubparts) [12877 12892]))                  
                :type "class")
                nil [2369 12895])
            ("APSARA_UNIT_TEST_FIXTURE" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PartitionSplitMergeFuncTest" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [12921 12949]))                  
                :type "int")
                nil [12896 12950])
            ("unnamed" type
               (:members 
                  ( ("FinalNotifier" type
                       (:members 
                          ( ("public" label nil (reparse-symbol classsubparts) [12987 12994])
                            ("FinalNotifier" function
                               (:constructor-flag t
                                :arguments 
                                  ( ("notifier" variable
                                       (:pointer 1
                                        :type ("Notifier" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [13013 13032]))                                  
                                :type ("FinalNotifier" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [12999 13067])
                            ("FinalNotifier" function
                               (:destructor-flag t
                                :type "void")
                                (reparse-symbol classsubparts) [13072 13129])
                            ("private" label nil (reparse-symbol classsubparts) [13131 13139])
                            ("mNotifier" variable
                               (:pointer 1
                                :type ("Notifier" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [13144 13164]))                          
                        :type "class")
                        (reparse-symbol namespacesubparts) [12965 13167])
                    ("kPartitionRangeSize" variable
                       (:constant-flag t
                        :default-value "1000"
                        :type "int")
                        (reparse-symbol namespacesubparts) [13169 13206])
                    ("KeyValue" type
                       (:typedef ("map" type
                             (:template-specifier 
                                ( ("string" type nil nil nil)
                                  ("string" type nil nil nil))                                
                              :type "class")
                              nil nil)
                        :type "typedef")
                        (reparse-symbol namespacesubparts) [13208 13245])
                    ("IOVec2String" function
                       (:arguments 
                          ( ("iovecs" variable
                               (:reference 1
                                :constant-flag t
                                :type ("vector" type
                                     (:template-specifier 
                                        ( ("IOVec" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [13267 13295]))                          
                        :type ("string" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [13247 13501])
                    ("Stream2Slice" function
                       (:arguments 
                          ( ("s" variable
                               (:reference 1
                                :constant-flag t
                                :type ("SqlZeroCopyOutputStream" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [13521 13554]))                          
                        :type ("Slice" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [13502 13746])
                    ("PrimaryKeyToString" function
                       (:arguments 
                          ( ("keys" variable
                               (:reference 1
                                :constant-flag t
                                :type ("PK" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [13774 13789]))                          
                        :type ("string" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [13748 14332])
                    ("GetRandomString" function
                       (:arguments 
                          ( ("n" variable (:type ("size_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [14357 14366]))                          
                        :type ("string" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [14334 14670])
                    ("GetPK" function
                       (:arguments 
                          ( ("part" variable (:type "int") (reparse-symbol arg-sub-list) [14734 14743]))                          
                        :type ("PK" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [14725 15187])
                    ("GetValue" function (:type ("string" type (:type "class") nil nil)) (reparse-symbol namespacesubparts) [15189 15243])
                    ("SetPK" function
                       (:arguments 
                          ( ("pk" variable
                               (:pointer 1
                                :type ("PrimaryKey" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [15256 15271])
                            ("keys" variable
                               (:reference 1
                                :constant-flag t
                                :type ("PK" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [15272 15287]))                          
                        :type "void")
                        (reparse-symbol namespacesubparts) [15245 15562])
                    ("SetGlobalFlag" function
                       (:arguments 
                          ( ("addr" variable
                               (:reference 1
                                :constant-flag t
                                :type ("string" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [15583 15602])
                            ("flag" variable
                               (:reference 1
                                :constant-flag t
                                :type ("string" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [15603 15622])
                            ("value" variable
                               (:reference 1
                                :constant-flag t
                                :type ("string" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [15623 15643]))                          
                        :type "void")
                        (reparse-symbol namespacesubparts) [15564 15921])
                    ("GetGlobalFlag" function
                       (:arguments 
                          ( ("addr" variable
                               (:reference 1
                                :constant-flag t
                                :type ("string" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [15944 15963])
                            ("flag" variable
                               (:reference 1
                                :constant-flag t
                                :type ("string" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [15964 15983]))                          
                        :type ("string" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [15923 16578])
                    ("GlobalFlagSetter" type
                       (:members 
                          ( ("public" label nil (reparse-symbol classsubparts) [16605 16612])
                            ("GlobalFlagSetter" function
                               (:constructor-flag t
                                :arguments 
                                  ( ("addr" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("string" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [16634 16653])
                                    ("flagName" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("string" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [16654 16677])
                                    ("newVal" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("string" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [16678 16699]))                                  
                                :type ("GlobalFlagSetter" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [16617 16852])
                            ("GlobalFlagSetter" function
                               (:destructor-flag t
                                :type "void")
                                (reparse-symbol classsubparts) [16857 16938])
                            ("private" label nil (reparse-symbol classsubparts) [16940 16948])
                            ("mAddr" variable (:type ("string" type (:type "class") nil nil)) (reparse-symbol classsubparts) [16953 16966])
                            ("mFlagName" variable (:type ("string" type (:type "class") nil nil)) (reparse-symbol classsubparts) [16971 16988])
                            ("mOldVal" variable (:type ("string" type (:type "class") nil nil)) (reparse-symbol classsubparts) [16993 17008]))                          
                        :type "class")
                        (reparse-symbol namespacesubparts) [16580 17011]))                  
                :type "namespace")
                nil [12952 17013])
            ("Setup" function
               (:parent "PartitionSplitMergeFuncTest"
                :type "void")
                nil [17015 17997])
            ("CleanUp" function
               (:parent "PartitionSplitMergeFuncTest"
                :type "void")
                nil [17999 19012])
            ("TestSplitPartitionWithSplitPoint" function
               (:parent "PartitionSplitMergeFuncTest"
                :type "void")
                nil [19014 19384])
            ("_TestSplitPartitionWithSplitPoint" function
               (:parent "PartitionSplitMergeFuncTest"
                :arguments 
                  ( ("notifier" variable
                       (:pointer 1
                        :type ("Notifier" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [19454 19473]))                  
                :type "void")
                nil [19386 25389])
            ("TestSplitPartitionWithoutSplitPoint" function
               (:parent "PartitionSplitMergeFuncTest"
                :type "void")
                nil [25391 25767])
            ("_TestSplitPartitionWithoutSplitPoint" function
               (:parent "PartitionSplitMergeFuncTest"
                :arguments 
                  ( ("notifier" variable
                       (:pointer 1
                        :type ("Notifier" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [25840 25859]))                  
                :type "void")
                nil [25769 29449])
            ("_BatchModifyFuncV2" function
               (:parent "PartitionSplitMergeFuncTest"
                :arguments 
                  ( ("tableName" variable
                       (:reference 1
                        :constant-flag t
                        :type ("string" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [29513 29537])
                    ("existRows" variable
                       (:pointer 1
                        :type ("vector" type
                             (:template-specifier 
                                ( ("PK" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol arg-sub-list) [29546 29568])
                    ("mode" variable (:type ("Mode" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [29577 29587])
                    ("notifier" variable
                       (:pointer 1
                        :type ("Notifier" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [29596 29615])
                    ("pool" variable
                       (:pointer 1
                        :type ("arpc::EasyThreadPool" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [29625 29652]))                  
                :type "void")
                nil [29451 33296])
            ("BatchModifyFuncV2" function
               (:parent "PartitionSplitMergeFuncTest"
                :arguments 
                  ( ("tableName" variable
                       (:reference 1
                        :constant-flag t
                        :type ("string" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [33349 33373])
                    ("mode" variable (:type ("Mode" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [33374 33384])
                    ("stop" variable
                       (:pointer 1
                        :typemodifiers ("volatile")
                        :type "bool")
                        (reparse-symbol arg-sub-list) [33385 33405]))                  
                :type "int")
                nil [33298 33861])
            ("_TestBatchModifyWhenPartitionSplit" function
               (:parent "PartitionSplitMergeFuncTest"
                :arguments 
                  ( ("notifier" variable
                       (:pointer 1
                        :type ("Notifier" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [33932 33951]))                  
                :type "void")
                nil [33863 35119])
            ("TestBatchModifyWhenPartitionSplit" function
               (:parent "PartitionSplitMergeFuncTest"
                :type "void")
                nil [35121 35446])
            ("TestSplitMultiPartitionsSameTime" function
               (:parent "PartitionSplitMergeFuncTest"
                :type "void")
                nil [35448 35818])
            ("_TestSplitMultiPartitionsSameTime" function
               (:parent "PartitionSplitMergeFuncTest"
                :arguments 
                  ( ("notifier" variable
                       (:pointer 1
                        :type ("Notifier" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [35888 35907]))                  
                :type "void")
                nil [35820 38525])
            ("_TestSplitOrMergePartitionWhileSpliting" function
               (:parent "PartitionSplitMergeFuncTest"
                :arguments 
                  ( ("notifier" variable
                       (:pointer 1
                        :type ("Notifier" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [38601 38620]))                  
                :type "void")
                nil [38527 40220])
            ("TestSplitOrMergePartitionWhileSpliting" function
               (:parent "PartitionSplitMergeFuncTest"
                :type "void")
                nil [40222 40604])
            ("_TestMergePartition" function
               (:parent "PartitionSplitMergeFuncTest"
                :arguments 
                  ( ("notifier" variable
                       (:pointer 1
                        :type ("Notifier" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [40660 40679]))                  
                :type "void")
                nil [40606 47641])
            ("TestMergePartition" function
               (:parent "PartitionSplitMergeFuncTest"
                :type "void")
                nil [47643 47985])
            ("_TestMergePartition_MultiThread" function
               (:parent "PartitionSplitMergeFuncTest"
                :arguments 
                  ( ("notifier" variable
                       (:pointer 1
                        :type ("Notifier" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [48053 48072]))                  
                :type "void")
                nil [47987 51724])
            ("TestMergePartition_MultiThread" function
               (:parent "PartitionSplitMergeFuncTest"
                :type "void")
                nil [51726 52092])
            ("_TestSplitOrMergePartitionWhileMerging" function
               (:parent "PartitionSplitMergeFuncTest"
                :arguments 
                  ( ("notifier" variable
                       (:pointer 1
                        :type ("Notifier" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [52167 52186]))                  
                :type "void")
                nil [52094 54068])
            ("TestSplitOrMergePartitionWhileMerging" function
               (:parent "PartitionSplitMergeFuncTest"
                :type "void")
                nil [54070 54450])
            ("_TestBatchModifyWhenPartitionMerge" function
               (:parent "PartitionSplitMergeFuncTest"
                :arguments 
                  ( ("notifier" variable
                       (:pointer 1
                        :type ("Notifier" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [54521 54540]))                  
                :type "void")
                nil [54452 55984])
            ("TestBatchModifyWhenPartitionMerge" function
               (:parent "PartitionSplitMergeFuncTest"
                :type "void")
                nil [55986 56358])
            ("LoopRandomSplitOrMerge" function
               (:parent "PartitionSplitMergeFuncTest"
                :arguments 
                  ( ("tableName" variable
                       (:reference 1
                        :constant-flag t
                        :type ("string" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [56429 56453])
                    ("loopTime" variable (:type ("int32_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [56454 56471])
                    ("isOKToFail" variable (:type "bool") (reparse-symbol arg-sub-list) [56480 56496])
                    ("checkNewPartition" variable (:type "bool") (reparse-symbol arg-sub-list) [56497 56520]))                  
                :type ("int32_t" type (:type "class") nil nil))
                nil [56360 59354])
            ("_TestMultiThreadRandomMergeSplit" function
               (:parent "PartitionSplitMergeFuncTest"
                :arguments 
                  ( ("notifier" variable
                       (:pointer 1
                        :type ("Notifier" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [59423 59442]))                  
                :type "void")
                nil [59356 60741])
            ("TestMultiThreadRandomMergeSplit" function
               (:parent "PartitionSplitMergeFuncTest"
                :type "void")
                nil [60743 61111])
            ("_TestRandomMergeSplitPartitionWithVerifyStorageSize" function
               (:parent "PartitionSplitMergeFuncTest"
                :arguments 
                  ( ("notifier" variable
                       (:pointer 1
                        :type ("Notifier" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [61199 61218]))                  
                :type "void")
                nil [61113 62786])
            ("TestRandomMergeSplitPartitionWithVerifyStorageSize" function
               (:parent "PartitionSplitMergeFuncTest"
                :type "void")
                nil [62788 63194])
            ("_TestRandomMergeSplitPartitionWithVerifyCU" function
               (:parent "PartitionSplitMergeFuncTest"
                :arguments 
                  ( ("notifier" variable
                       (:pointer 1
                        :type ("Notifier" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [63273 63292]))                  
                :type "void")
                nil [63196 66924])
            ("TestRandomMergeSplitPartitionWithVerifyCU" function
               (:parent "PartitionSplitMergeFuncTest"
                :type "void")
                nil [66926 67314])
            ("TestRandomMergeSplitPartitionWith3_0_Table" function
               (:parent "PartitionSplitMergeFuncTest"
                :type "void")
                nil [67316 67706])
            ("_TestRandomMergeSplitPartitionWith3_0_Table" function
               (:parent "PartitionSplitMergeFuncTest"
                :arguments 
                  ( ("notifier" variable
                       (:pointer 1
                        :type ("Notifier" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [67786 67805]))                  
                :type "void")
                nil [67708 69890])
            ("_TestFailOverWhileSplitAndBatchModify" function
               (:parent "PartitionSplitMergeFuncTest"
                :arguments 
                  ( ("notifier" variable
                       (:pointer 1
                        :type ("Notifier" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [69964 69983]))                  
                :type "void")
                nil [69892 72845])
            ("TestFailOverWhileSplitAndBatchModify" function
               (:parent "PartitionSplitMergeFuncTest"
                :type "void")
                nil [72847 73225])
            ("_TestFailOverWhileMergeAndBatchModify" function
               (:parent "PartitionSplitMergeFuncTest"
                :arguments 
                  ( ("notifier" variable
                       (:pointer 1
                        :type ("Notifier" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [73299 73318]))                  
                :type "void")
                nil [73227 76762])
            ("TestFailOverWhileMergeAndBatchModify" function
               (:parent "PartitionSplitMergeFuncTest"
                :type "void")
                nil [76764 77142])
            ("_TestAddTableWhileSplitingAndMerging" function
               (:parent "PartitionSplitMergeFuncTest"
                :arguments 
                  ( ("notifier" variable
                       (:pointer 1
                        :type ("Notifier" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [77215 77234]))                  
                :type "void")
                nil [77144 78904])
            ("TestAddTableWhileSplitingAndMerging" function
               (:parent "PartitionSplitMergeFuncTest"
                :type "void")
                nil [78906 79282])
            ("TestSplitAndMergeWhileAutoSplit" function
               (:parent "PartitionSplitMergeFuncTest"
                :type "void")
                nil [79284 79652])
            ("_TestSplitAndMergeWhileAutoSplit" function
               (:parent "PartitionSplitMergeFuncTest"
                :arguments 
                  ( ("notifier" variable
                       (:pointer 1
                        :type ("Notifier" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [79721 79740]))                  
                :type "void")
                nil [79654 83905])
            ("DeleteTableIfExist" function
               (:parent "PartitionSplitMergeFuncTest"
                :arguments 
                  ( ("tableName" variable
                       (:reference 1
                        :constant-flag t
                        :type ("string" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [83960 83984]))                  
                :type "void")
                nil [83907 84292])
            ("CreateTable" function
               (:parent "PartitionSplitMergeFuncTest"
                :arguments 
                  ( ("tableName" variable
                       (:reference 1
                        :constant-flag t
                        :type ("string" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [84340 84364])
                    ("cu" variable (:type "int") (reparse-symbol arg-sub-list) [84365 84372])
                    ("partCount" variable (:type "int") (reparse-symbol arg-sub-list) [84373 84387])
                    ("version" variable (:type ("InternalTableVersion" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [84388 84417]))                  
                :type "void")
                nil [84294 87017])
            ("ConstructSingleTables" function
               (:parent "PartitionSplitMergeFuncTest"
                :arguments 
                  ( ("ranges" variable
                       (:reference 1
                        :constant-flag t
                        :type ("vector" type
                             (:template-specifier 
                                ( ("Range" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol arg-sub-list) [87075 87103]))                  
                :type "void")
                nil [87019 89535])
            ("ConstructTableGroups" function
               (:parent "PartitionSplitMergeFuncTest"
                :arguments 
                  ( ("ranges" variable
                       (:reference 1
                        :constant-flag t
                        :type ("vector" type
                             (:template-specifier 
                                ( ("Range" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol arg-sub-list) [89592 89620]))                  
                :type "void")
                nil [89537 95622])
            ("ConstructSubTableInTableGroup" function
               (:parent "PartitionSplitMergeFuncTest"
                :arguments 
                  ( ("subTableName" variable
                       (:reference 1
                        :constant-flag t
                        :type ("string" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [95688 95715]))                  
                :type "void")
                nil [95624 97808])
            ("GetPartitionIDOfTestSingleTable" function
               (:parent "PartitionSplitMergeFuncTest"
                :arguments 
                  ( ("partRangeBegin" variable
                       (:reference 1
                        :constant-flag t
                        :type ("SQLVariant" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [97878 97911]))                  
                :type ("string" type (:type "class") nil nil))
                nil [97810 98370])
            ("GetPartitionIDOfTestTableGroup" function
               (:parent "PartitionSplitMergeFuncTest"
                :arguments 
                  ( ("partRangeBegin" variable
                       (:reference 1
                        :constant-flag t
                        :type ("SQLVariant" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [98439 98472]))                  
                :type ("string" type (:type "class") nil nil))
                nil [98372 98953])
            ("SplitPartitionOfTestDB" function
               (:parent "PartitionSplitMergeFuncTest"
                :arguments 
                  ( ("partID" variable
                       (:reference 1
                        :constant-flag t
                        :type ("string" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [99021 99042])
                    ("newLeftPartID" variable
                       (:pointer 1
                        :type ("string" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [99043 99065])
                    ("newRightPartID" variable
                       (:pointer 1
                        :type ("string" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [99066 99089]))                  
                :type "void")
                nil [98955 99468])
            ("SplitPartitionOfTestDB" function
               (:parent "PartitionSplitMergeFuncTest"
                :arguments 
                  ( ("partID" variable
                       (:reference 1
                        :constant-flag t
                        :type ("string" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [99536 99557])
                    ("splitPoint" variable
                       (:reference 1
                        :constant-flag t
                        :type ("SQLVariant" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [99558 99587])
                    ("newLeftPartID" variable
                       (:pointer 1
                        :type ("string" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [99597 99619])
                    ("newRightPartID" variable
                       (:pointer 1
                        :type ("string" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [99620 99643]))                  
                :type "void")
                nil [99470 100147])
            ("MergePartitionOfTestDB" function
               (:parent "PartitionSplitMergeFuncTest"
                :arguments 
                  ( ("leftPartID" variable
                       (:reference 1
                        :constant-flag t
                        :type ("string" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [100215 100240])
                    ("rightPartID" variable
                       (:reference 1
                        :constant-flag t
                        :type ("string" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [100249 100275])
                    ("newPartID" variable
                       (:pointer 1
                        :type ("string" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [100284 100302]))                  
                :type "void")
                nil [100149 100745])
            ("SplitPartitionFunc" function
               (:parent "PartitionSplitMergeFuncTest"
                :arguments 
                  ( ("partID" variable
                       (:reference 1
                        :constant-flag t
                        :type ("string" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [100812 100833])
                    ("range" variable
                       (:reference 1
                        :constant-flag t
                        :type ("Range" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [100842 100861])
                    ("isOKToFail" variable (:type "bool") (reparse-symbol arg-sub-list) [100870 100886])
                    ("checkNewPartition" variable (:type "bool") (reparse-symbol arg-sub-list) [100895 100918]))                  
                :type ("int32_t" type (:type "class") nil nil))
                nil [100747 103478])
            ("MergePartitionFunc" function
               (:parent "PartitionSplitMergeFuncTest"
                :arguments 
                  ( ("leftPartID" variable
                       (:reference 1
                        :constant-flag t
                        :type ("string" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [103545 103570])
                    ("rightPartID" variable
                       (:reference 1
                        :constant-flag t
                        :type ("string" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [103579 103605])
                    ("leftRange" variable
                       (:reference 1
                        :constant-flag t
                        :type ("Range" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [103614 103637])
                    ("rightRange" variable
                       (:reference 1
                        :constant-flag t
                        :type ("Range" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [103646 103670])
                    ("isOKToFail" variable (:type "bool") (reparse-symbol arg-sub-list) [103679 103695])
                    ("checkNewPartition" variable (:type "bool") (reparse-symbol arg-sub-list) [103704 103727]))                  
                :type ("int32_t" type (:type "class") nil nil))
                nil [103480 105919])
            ("WaitPartitionSplitOrMergeDone" function
               (:parent "PartitionSplitMergeFuncTest"
                :arguments 
                  ( ("dbName" variable
                       (:reference 1
                        :constant-flag t
                        :type ("string" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [105994 106015])
                    ("partID" variable
                       (:reference 1
                        :constant-flag t
                        :type ("string" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [106025 106046]))                  
                :type "bool")
                nil [105921 106822])
            ("CheckTable" function
               (:parent "PartitionSplitMergeFuncTest"
                :arguments 
                  ( ("tableName" variable
                       (:reference 1
                        :constant-flag t
                        :type ("string" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [106878 106902])
                    ("ranges" variable
                       (:reference 1
                        :constant-flag t
                        :type ("vector" type
                             (:template-specifier 
                                ( ("Range" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol arg-sub-list) [106912 106940]))                  
                :type "void")
                nil [106824 107679])
            ("CheckTableGroup" function
               (:parent "PartitionSplitMergeFuncTest"
                :arguments 
                  ( ("tableGroupName" variable
                       (:reference 1
                        :constant-flag t
                        :type ("string" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [107731 107760])
                    ("ranges" variable
                       (:reference 1
                        :constant-flag t
                        :type ("vector" type
                             (:template-specifier 
                                ( ("Range" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol arg-sub-list) [107761 107789]))                  
                :type "void")
                nil [107681 108613])
            ("VerifyPartitionSchemeOfTestDB" function
               (:parent "PartitionSplitMergeFuncTest"
                :arguments 
                  ( ("storeName" variable
                       (:reference 1
                        :constant-flag t
                        :type ("string" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [108679 108703])
                    ("ranges" variable
                       (:reference 1
                        :constant-flag t
                        :type ("vector" type
                             (:template-specifier 
                                ( ("Range" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol arg-sub-list) [108704 108732]))                  
                :type "void")
                nil [108615 110001])
            ("WriteAndSyncTable" function
               (:parent "PartitionSplitMergeFuncTest"
                :arguments 
                  ( ("tableName" variable
                       (:reference 1
                        :constant-flag t
                        :type ("string" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [110055 110079])
                    ("sync" variable (:type "bool") (reparse-symbol arg-sub-list) [110080 110090])
                    ("mode" variable (:type ("Mode" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [110091 110101]))                  
                :type "void")
                nil [110003 113681])
            ("WriteAndSyncTableThread" function
               (:parent "PartitionSplitMergeFuncTest"
                :arguments 
                  ( ("tableName" variable
                       (:reference 1
                        :constant-flag t
                        :type ("string" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [113740 113764])
                    ("sync" variable (:type "bool") (reparse-symbol arg-sub-list) [113765 113775])
                    ("mode" variable (:type ("Mode" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [113776 113786])
                    ("stop" variable
                       (:pointer 1
                        :typemodifiers ("volatile")
                        :type "bool")
                        (reparse-symbol arg-sub-list) [113787 113807]))                  
                :type "int")
                nil [113683 113920])
            ("WriteAndSyncTableGroup" function
               (:parent "PartitionSplitMergeFuncTest"
                :arguments 
                  ( ("tableGroupName" variable
                       (:reference 1
                        :constant-flag t
                        :type ("string" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [113979 114008])
                    ("sync" variable (:type "bool") (reparse-symbol arg-sub-list) [114009 114019])
                    ("mode" variable (:type ("Mode" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [114020 114030]))                  
                :type "void")
                nil [113922 114224])
            ("WriteAndSyncTableGroupThread" function
               (:parent "PartitionSplitMergeFuncTest"
                :arguments 
                  ( ("tableGroupName" variable
                       (:reference 1
                        :constant-flag t
                        :type ("string" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [114288 114317])
                    ("sync" variable (:type "bool") (reparse-symbol arg-sub-list) [114318 114328])
                    ("mode" variable (:type ("Mode" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [114329 114339])
                    ("stop" variable
                       (:pointer 1
                        :typemodifiers ("volatile")
                        :type "bool")
                        (reparse-symbol arg-sub-list) [114340 114360]))                  
                :type "int")
                nil [114226 114483])
            ("GenerateRandomSQLVariant" function
               (:parent "PartitionSplitMergeFuncTest"
                :arguments 
                  ( ("type" variable (:type ("VariantType" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [114550 114567])
                    ("totalCount" variable (:type ("size_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [114568 114586]))                  
                :type ("SQLVariant" type (:type "class") nil nil))
                nil [114485 115241])
            ("GenerateRandomSQLVariant" function
               (:parent "PartitionSplitMergeFuncTest"
                :arguments 
                  ( ("ranges" variable
                       (:reference 1
                        :constant-flag t
                        :type ("vector" type
                             (:template-specifier 
                                ( ("Range" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol arg-sub-list) [115308 115336])
                    ("totalCount" variable (:type ("size_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [115337 115355]))                  
                :type ("SQLVariant" type (:type "class") nil nil))
                nil [115243 116045])
            ("GenerateSplitPoint" function
               (:parent "PartitionSplitMergeFuncTest"
                :arguments 
                  ( ("range" variable
                       (:reference 1
                        :constant-flag t
                        :type ("Range" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [116100 116119])
                    ("splitPoint" variable
                       (:pointer 1
                        :type ("SQLVariant" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [116120 116143]))                  
                :type "bool")
                nil [116047 118213])
            ("ReadAndVerifyTableV2" function
               (:parent "PartitionSplitMergeFuncTest"
                :arguments 
                  ( ("tableName" variable
                       (:reference 1
                        :constant-flag t
                        :type ("string" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [118270 118294]))                  
                :type "void")
                nil [118215 120102])
            ("VerifyReadRange" function
               (:parent "PartitionSplitMergeFuncTest"
                :arguments 
                  ( ("standardDataStorePtr" variable
                       (:reference 1
                        :constant-flag t
                        :type ("IDataStorePtr" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [120163 120205])
                    ("testDataStorePtr" variable
                       (:reference 1
                        :constant-flag t
                        :type ("IDataStorePtr" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [120214 120252])
                    ("storeName" variable
                       (:reference 1
                        :constant-flag t
                        :type ("string" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [120261 120285]))                  
                :type "void")
                nil [120104 123579])
            ("RangeReadData" function
               (:parent "PartitionSplitMergeFuncTest"
                :arguments 
                  ( ("dbPtr" variable
                       (:reference 1
                        :constant-flag t
                        :type ("DataBasePtr" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [123638 123663])
                    ("tableName" variable
                       (:reference 1
                        :constant-flag t
                        :type ("string" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [123672 123696])
                    ("rowsDataVec" variable
                       (:pointer 1
                        :type ("vector" type
                             (:template-specifier 
                                ( ("string" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol arg-sub-list) [123705 123733]))                  
                :type "void")
                nil [123581 125544])
            ("ReadAndVerifyTableV3" function
               (:parent "PartitionSplitMergeFuncTest"
                :arguments 
                  ( ("tableName" variable
                       (:reference 1
                        :constant-flag t
                        :type ("string" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [125601 125625]))                  
                :type "void")
                nil [125546 128950])
            ("_BatchModifyFuncV3" function
               (:parent "PartitionSplitMergeFuncTest"
                :arguments 
                  ( ("tableName" variable
                       (:reference 1
                        :constant-flag t
                        :type ("string" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [129014 129038])
                    ("existRows" variable
                       (:pointer 1
                        :type ("vector" type
                             (:template-specifier 
                                ( ("PK" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol arg-sub-list) [129048 129070])
                    ("mode" variable (:type ("Mode" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [129079 129089])
                    ("notifier" variable
                       (:pointer 1
                        :type ("Notifier" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [129098 129117])
                    ("pool" variable
                       (:pointer 1
                        :type ("arpc::EasyThreadPool" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [129127 129154]))                  
                :type "void")
                nil [128952 134373])
            ("BatchModifyFuncV3" function
               (:parent "PartitionSplitMergeFuncTest"
                :arguments 
                  ( ("tableName" variable
                       (:reference 1
                        :constant-flag t
                        :type ("string" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [134435 134459])
                    ("mode" variable (:type ("Mode" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [134468 134478])
                    ("stop" variable
                       (:pointer 1
                        :typemodifiers ("volatile")
                        :type "bool")
                        (reparse-symbol arg-sub-list) [134487 134507]))                  
                :type "int")
                nil [134375 134964])
            ("ReadAndVerifyTable" function
               (:parent "PartitionSplitMergeFuncTest"
                :arguments 
                  ( ("tableName" variable
                       (:reference 1
                        :constant-flag t
                        :type ("string" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [135019 135043]))                  
                :type "void")
                nil [134966 135863])
            ("ReadAndVerifyTableGroup" function
               (:parent "PartitionSplitMergeFuncTest"
                :arguments 
                  ( ("tableGroupName" variable
                       (:reference 1
                        :constant-flag t
                        :type ("string" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [135923 135952]))                  
                :type "void")
                nil [135865 136135])
            ("ReadAndVerifyDataStore" function
               (:parent "PartitionSplitMergeFuncTest"
                :arguments 
                  ( ("standardDataStorePtr" variable
                       (:reference 1
                        :constant-flag t
                        :type ("IDataStorePtr" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [136194 136236])
                    ("testDataStorePtr" variable
                       (:reference 1
                        :constant-flag t
                        :type ("IDataStorePtr" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [136285 136323])
                    ("storeName" variable
                       (:reference 1
                        :constant-flag t
                        :type ("string" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [136372 136396])
                    ("pagingKeyCount" variable (:type ("size_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [136397 136419]))                  
                :type "void")
                nil [136137 136788])
            ("VerifyKeyQuery" function
               (:parent "PartitionSplitMergeFuncTest"
                :arguments 
                  ( ("standardDataStorePtr" variable
                       (:reference 1
                        :constant-flag t
                        :type ("IDataStorePtr" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [136839 136881])
                    ("testDataStorePtr" variable
                       (:reference 1
                        :constant-flag t
                        :type ("IDataStorePtr" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [136922 136960])
                    ("storeName" variable
                       (:reference 1
                        :constant-flag t
                        :type ("string" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [137001 137025]))                  
                :type "void")
                nil [136790 138125])
            ("VerifyRangeQuery" function
               (:parent "PartitionSplitMergeFuncTest"
                :arguments 
                  ( ("standardDataStorePtr" variable
                       (:reference 1
                        :constant-flag t
                        :type ("IDataStorePtr" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [138178 138220])
                    ("testDataStorePtr" variable
                       (:reference 1
                        :constant-flag t
                        :type ("IDataStorePtr" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [138263 138301])
                    ("storeName" variable
                       (:reference 1
                        :constant-flag t
                        :type ("string" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [138344 138368]))                  
                :type "void")
                nil [138127 138859])
            ("VerifyRangeQueryWithoutRetry" function
               (:parent "PartitionSplitMergeFuncTest"
                :arguments 
                  ( ("standardDataStorePtr" variable
                       (:reference 1
                        :constant-flag t
                        :type ("IDataStorePtr" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [138924 138966])
                    ("testDataStorePtr" variable
                       (:reference 1
                        :constant-flag t
                        :type ("IDataStorePtr" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [139021 139059])
                    ("storeName" variable
                       (:reference 1
                        :constant-flag t
                        :type ("string" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [139114 139138]))                  
                :type "void")
                nil [138861 140879])
            ("GetRawSize" function
               (:parent "PartitionSplitMergeFuncTest"
                :arguments 
                  ( ("dbName" variable
                       (:reference 1
                        :constant-flag t
                        :type ("string" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [140938 140959])
                    ("tableName" variable
                       (:reference 1
                        :constant-flag t
                        :type ("string" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [140969 140993]))                  
                :type ("int64_t" type (:type "class") nil nil))
                nil [140881 141098])
            ("GetSequenceTestPartID" function
               (:parent "PartitionSplitMergeFuncTest"
                :arguments 
                  ( ("tableName" variable
                       (:reference 1
                        :constant-flag t
                        :type ("string" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [141165 141189])
                    ("partIDs" variable
                       (:pointer 1
                        :type ("vector" type
                             (:template-specifier 
                                ( ("string" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol arg-sub-list) [141198 141222]))                  
                :type "void")
                nil [141100 142637])
            ("GetPartitionRange" function
               (:parent "PartitionSplitMergeFuncTest"
                :arguments 
                  ( ("dbName" variable
                       (:reference 1
                        :constant-flag t
                        :type ("string" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [142701 142722])
                    ("partID" variable
                       (:reference 1
                        :constant-flag t
                        :type ("string" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [142731 142752]))                  
                :type ("Range" type (:type "class") nil nil))
                nil [142639 142892])
            ("CheckPartitionExist" function
               (:parent "PartitionSplitMergeFuncTest"
                :arguments 
                  ( ("dbName" variable
                       (:reference 1
                        :constant-flag t
                        :type ("string" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [142957 142978])
                    ("partID" variable
                       (:reference 1
                        :constant-flag t
                        :type ("string" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [142987 143008])
                    ("expectExist" variable (:type "bool") (reparse-symbol arg-sub-list) [143017 143034]))                  
                :type "void")
                nil [142894 143761])
            ("GetPartitionCu" function
               (:parent "PartitionSplitMergeFuncTest"
                :arguments 
                  ( ("dbName" variable
                       (:reference 1
                        :constant-flag t
                        :type ("string" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [143821 143842])
                    ("partID" variable
                       (:reference 1
                        :constant-flag t
                        :type ("string" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [143852 143873])
                    ("partCU" variable
                       (:pointer 1
                        :type ("InterCapacityUnit" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [143883 143909]))                  
                :type "void")
                nil [143763 144313])
            ("CompareCU" function
               (:parent "PartitionSplitMergeFuncTest"
                :arguments 
                  ( ("expect" variable
                       (:reference 1
                        :constant-flag t
                        :type ("InterCapacityUnit" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [144359 144391])
                    ("real" variable
                       (:reference 1
                        :constant-flag t
                        :type ("InterCapacityUnit" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [144392 144422]))                  
                :type "void")
                nil [144315 144754])
            ("ManualCompact" function
               (:parent "PartitionSplitMergeFuncTest"
                :arguments 
                  ( ("partID" variable
                       (:reference 1
                        :constant-flag t
                        :type ("string" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [144813 144834])
                    ("tableName" variable
                       (:reference 1
                        :constant-flag t
                        :type ("string" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [144844 144868]))                  
                :type "void")
                nil [144756 145854])
            ("GetWorkerFromPartitionID" function
               (:parent "PartitionSplitMergeFuncTest"
                :arguments 
                  ( ("dbName" variable
                       (:reference 1
                        :constant-flag t
                        :type ("string" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [145926 145947])
                    ("partID" variable
                       (:reference 1
                        :constant-flag t
                        :type ("string" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [145957 145978]))                  
                :type ("string" type (:type "class") nil nil))
                nil [145856 146285])
            ("ChangeCanAutoSplit" function
               (:parent "PartitionSplitMergeFuncTest"
                :arguments 
                  ( ("dbName" variable
                       (:reference 1
                        :constant-flag t
                        :type ("string" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [146349 146370])
                    ("tableName" variable
                       (:reference 1
                        :constant-flag t
                        :type ("string" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [146371 146395])
                    ("canAutoSplit" variable (:type "bool") (reparse-symbol arg-sub-list) [146396 146414]))                  
                :type "void")
                nil [146287 146539])
            ("HandleException" function
               (:parent "PartitionSplitMergeFuncTest"
                :arguments 
                  ( ("errorCode" variable (:type ("SQLErrorType" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [146591 146614])
                    ("mode" variable (:type ("Mode" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [146615 146625]))                  
                :type "bool")
                nil [146541 147878]))          
      :file "sqlonline_partition_split_merge_functiontest.cpp"
      :pointmax 147879
      :fsize 147878
      :lastmodtime '(21836 42592 238069 412000)
      :unmatched-syntax '((number 6930 . 6931) (number 6759 . 6760) (number 6576 . 6577) (number 6290 . 6291) (number 6004 . 6005) (number 5800 . 5801) (number 5500 . 5501) (number 5207 . 5208) (number 5036 . 5037) (number 4859 . 4860) (number 4670 . 4671) (number 4502 . 4503) (number 4107 . 4108) (number 3855 . 3856) (number 3570 . 3571) (number 3311 . 3312) (number 2915 . 2916) (punctuation 2348 . 2349) (string 1475 . 1486) (string 1471 . 1473) (string 1406 . 1440) (string 1402 . 1404) (string 1327 . 1362) (string 1323 . 1325) (string 1274 . 1276) (number 1201 . 1208) (string 1173 . 1199) (number 1114 . 1115) (string 1080 . 1112) (number 1022 . 1025) (string 987 . 1020) (number 929 . 931) (string 869 . 927)))
    (semanticdb-table "sqlconsistency_functiontest.cpp"
      :major-mode 'c++-mode
      :tags 
        '( ("sqlconsistency.h" include nil nil [1 28])
            ("error_info.h" include nil nil [29 52])
            ("client_remote_master.h" include nil nil [53 86])
            ("client_remote_worker.h" include nil nil [87 120])
            ("sqlonline_db_help.h" include nil nil [121 151])
            ("sqlonline/client/client_data_store.h" include nil nil [152 199])
            ("sqlonline/common/common.h" include nil nil [200 236])
            ("apsara/common/exception.h" include nil nil [237 273])
            ("apsara/common/unittest.h" include nil nil [274 309])
            ("apsara/common/logging.h" include nil nil [310 344])
            ("iostream" include (:system-flag t) nil [345 364])
            ("std" using (:type ("std" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [366 386])
            ("std::tr1" using (:type ("std::tr1" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [387 412])
            ("apsara" using (:type ("apsara" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [413 436])
            ("apsara::sqlonline" using (:type ("apsara::sqlonline" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [437 471])
            ("apsara::kuafu3" using (:type ("apsara::kuafu3" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [472 503])
            ("DECLARE_FLAG_STRING" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("sqlstorage_DefaultDBName" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [525 550]))                  
                :type "int")
                nil [505 551])
            ("DECLARE_FLAG_STRING" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("sqlstorage_DefaultServiceName" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [572 602]))                  
                :type "int")
                nil [552 603])
            ("gSqlConsistencyDB" variable
               (:default-value "\"\""
                :type ("string" type (:type "class") nil nil))
                nil [605 635])
            ("gSqlConsistencyNuwa" variable
               (:default-value "\"\""
                :type ("string" type (:type "class") nil nil))
                nil [636 668])
            ("gSqlConsistencyTableName" variable
               (:constant-flag t
                :default-value "\"consistency_table\""
                :type ("string" type (:type "class") nil nil))
                nil [669 729])
            ("gSqlConsistencyView1" variable
               (:constant-flag t
                :default-value "\"consistency_view_1\""
                :type ("string" type (:type "class") nil nil))
                nil [730 787])
            ("SqlConsistencyFunctiontest" type
               (:superclasses 
                  ( ("UnitTestFixtureBase" type
                       (:protection "public"
                        :type "class")
                        nil nil))                  
                :members 
                  ( ("public" label nil (reparse-symbol classsubparts) [881 888])
                    ("APSARA_UNIT_TEST_CASE" function
                       (:prototype-flag t
                        :arguments 
                          ( ("" variable (:type ("TestCheckView" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [915 929]))                          
                        :type "int")
                        (reparse-symbol classsubparts) [893 937])
                    ("public" label nil (reparse-symbol classsubparts) [938 945])
                    ("Setup" function (:type "void") (reparse-symbol classsubparts) [950 1275])
                    ("CleanUp" function (:type "void") (reparse-symbol classsubparts) [1280 1344])
                    ("TestCheckView" function
                       (:prototype-flag t
                        :type "void")
                        (reparse-symbol classsubparts) [1350 1371])
                    ("_TestCheckView" function
                       (:prototype-flag t
                        :arguments 
                          ( ("notifier" variable
                               (:reference 1
                                :type ("Notifier" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [1396 1415]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [1376 1416])
                    ("TestCheckViewFunc" function
                       (:prototype-flag t
                        :type "void")
                        (reparse-symbol classsubparts) [1421 1446])
                    ("private" label nil (reparse-symbol classsubparts) [1449 1457])
                    ("Prepare" function
                       (:prototype-flag t
                        :type "void")
                        (reparse-symbol classsubparts) [1463 1478])
                    ("Clean" function
                       (:prototype-flag t
                        :type "void")
                        (reparse-symbol classsubparts) [1483 1496])
                    ("mHelp" variable (:type ("tr1::shared_ptr" type
                         (:template-specifier 
                            ( ("DataBaseHelp" type nil nil nil))                            
                          :type "class")
                          nil nil)) (reparse-symbol classsubparts) [1501 1537]))                  
                :type "class")
                nil [789 1540])
            ("Prepare" function
               (:parent "SqlConsistencyFunctiontest"
                :type "void")
                nil [1542 4783])
            ("Clean" function
               (:parent "SqlConsistencyFunctiontest"
                :type "void")
                nil [4785 5730])
            ("_TestCheckView" function
               (:parent "SqlConsistencyFunctiontest"
                :arguments 
                  ( ("notifier" variable
                       (:reference 1
                        :type ("Notifier" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [5780 5799]))                  
                :type "void")
                nil [5732 5851])
            ("TestCheckView" function
               (:parent "SqlConsistencyFunctiontest"
                :type "void")
                nil [5853 6211])
            ("TestCheckViewFunc" function
               (:parent "SqlConsistencyFunctiontest"
                :type "void")
                nil [6213 6531])
            ("APSARA_UNIT_TEST_FIXTURE" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("SqlConsistencyFunctiontest" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6558 6585]))                  
                :type "int")
                nil [6533 6586]))          
      :file "sqlconsistency_functiontest.cpp"
      :pointmax 6587
      :fsize 6586
      :lastmodtime '(21821 60683 383041 297000)
      :unmatched-syntax '((number 930 . 935)))
    (semanticdb-table "schemaless_database_operation.cpp"
      :major-mode 'c++-mode
      :tags 
        '( ("sqlonline_db_help.h" include nil nil [1 31])
            ("apsara/common/unittest.h" include nil nil [32 67])
            ("iostream" include (:system-flag t) nil [68 87])
            ("std" using (:type ("std" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [89 109])
            ("apsara" using (:type ("apsara" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [110 133])
            ("apsara::sqlonline" using (:type ("apsara::sqlonline" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [134 168])
            ("apsara::kuafu3" using (:type ("apsara::kuafu3" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [169 200])
            ("DECLARE_FLAG_STRING" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("sqlstorage_DefaultDBName" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [222 247]))                  
                :type "int")
                nil [202 248])
            ("DECLARE_FLAG_STRING" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("sqlstorage_DefaultServiceName" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [269 299]))                  
                :type "int")
                nil [249 300])
            ("SchemalessDataBaseOperation" type
               (:superclasses 
                  ( ("UnitTestFixtureBase" type
                       (:protection "public"
                        :type "class")
                        nil nil))                  
                :members 
                  ( ("public" label nil (reparse-symbol classsubparts) [395 402])
                    ("Setup" function
                       (:prototype-flag t
                        :type "void")
                        (reparse-symbol classsubparts) [407 420])
                    ("CleanUp" function
                       (:prototype-flag t
                        :type "void")
                        (reparse-symbol classsubparts) [425 440])
                    ("TestCreateTable" function
                       (:prototype-flag t
                        :type "void")
                        (reparse-symbol classsubparts) [446 469])
                    ("TestAddExplicitColumn" function
                       (:prototype-flag t
                        :type "void")
                        (reparse-symbol classsubparts) [474 503])
                    ("TestCreateView" function
                       (:prototype-flag t
                        :type "void")
                        (reparse-symbol classsubparts) [508 530])
                    ("TestChangeLg" function
                       (:prototype-flag t
                        :type "void")
                        (reparse-symbol classsubparts) [535 555])
                    ("TestTablePagingKeySize" function
                       (:prototype-flag t
                        :type "void")
                        (reparse-symbol classsubparts) [560 590])
                    ("TestViewPagingKeySize" function
                       (:prototype-flag t
                        :type "void")
                        (reparse-symbol classsubparts) [595 624])
                    ("TestColumnMustInLg" function
                       (:prototype-flag t
                        :type "void")
                        (reparse-symbol classsubparts) [629 655])
                    ("TestViewPrimaryKey" function
                       (:prototype-flag t
                        :type "void")
                        (reparse-symbol classsubparts) [660 686])
                    ("APSARA_UNIT_TEST_CASE" function
                       (:prototype-flag t
                        :arguments 
                          ( ("" variable (:type ("TestCreateTable" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [714 730]))                          
                        :type "int")
                        (reparse-symbol classsubparts) [692 738])
                    ("APSARA_UNIT_TEST_CASE" function
                       (:prototype-flag t
                        :arguments 
                          ( ("" variable (:type ("TestAddExplicitColumn" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [765 787]))                          
                        :type "int")
                        (reparse-symbol classsubparts) [743 795])
                    ("APSARA_UNIT_TEST_CASE" function
                       (:prototype-flag t
                        :arguments 
                          ( ("" variable (:type ("TestCreateView" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [822 837]))                          
                        :type "int")
                        (reparse-symbol classsubparts) [800 845])
                    ("APSARA_UNIT_TEST_CASE" function
                       (:prototype-flag t
                        :arguments 
                          ( ("" variable (:type ("TestChangeLg" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [872 885]))                          
                        :type "int")
                        (reparse-symbol classsubparts) [850 893])
                    ("APSARA_UNIT_TEST_CASE" function
                       (:prototype-flag t
                        :arguments 
                          ( ("" variable (:type ("TestTablePagingKeySize" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [920 943]))                          
                        :type "int")
                        (reparse-symbol classsubparts) [898 951])
                    ("APSARA_UNIT_TEST_CASE" function
                       (:prototype-flag t
                        :arguments 
                          ( ("" variable (:type ("TestViewPagingKeySize" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [978 1000]))                          
                        :type "int")
                        (reparse-symbol classsubparts) [956 1008])
                    ("APSARA_UNIT_TEST_CASE" function
                       (:prototype-flag t
                        :arguments 
                          ( ("" variable (:type ("TestColumnMustInLg" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1035 1054]))                          
                        :type "int")
                        (reparse-symbol classsubparts) [1013 1062])
                    ("APSARA_UNIT_TEST_CASE" function
                       (:prototype-flag t
                        :arguments 
                          ( ("" variable (:type ("TestViewPrimaryKey" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1089 1108]))                          
                        :type "int")
                        (reparse-symbol classsubparts) [1067 1116])
                    ("private" label nil (reparse-symbol classsubparts) [1118 1126])
                    ("mDB" variable (:type ("DataBasePtr" type (:type "class") nil nil)) (reparse-symbol classsubparts) [1131 1147])
                    ("mTableGroupName" variable (:type ("string" type (:type "class") nil nil)) (reparse-symbol classsubparts) [1152 1175])
                    ("mHelp" variable (:type ("tr1::shared_ptr" type
                         (:template-specifier 
                            ( ("DataBaseHelp" type nil nil nil))                            
                          :type "class")
                          nil nil)) (reparse-symbol classsubparts) [1180 1216]))                  
                :type "class")
                nil [302 1219])
            ("APSARA_UNIT_TEST_FIXTURE" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("SchemalessDataBaseOperation" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1245 1273]))                  
                :type "int")
                nil [1220 1274])
            ("Setup" function
               (:parent "SchemalessDataBaseOperation"
                :type "void")
                nil [1276 1390])
            ("CleanUp" function
               (:parent "SchemalessDataBaseOperation"
                :type "void")
                nil [1392 1473])
            ("TestAddExplicitColumn" function
               (:parent "SchemalessDataBaseOperation"
                :type "void")
                nil [1475 4271])
            ("TestCreateTable" function
               (:parent "SchemalessDataBaseOperation"
                :type "void")
                nil [4273 6815])
            ("TestCreateView" function
               (:parent "SchemalessDataBaseOperation"
                :type "void")
                nil [6816 10712])
            ("TestChangeLg" function
               (:parent "SchemalessDataBaseOperation"
                :type "void")
                nil [10713 14033])
            ("TestTablePagingKeySize" function
               (:parent "SchemalessDataBaseOperation"
                :type "void")
                nil [14034 18771])
            ("TestViewPagingKeySize" function
               (:parent "SchemalessDataBaseOperation"
                :type "void")
                nil [18772 23616])
            ("TestColumnMustInLg" function
               (:parent "SchemalessDataBaseOperation"
                :type "void")
                nil [23617 25722])
            ("TestViewPrimaryKey" function
               (:parent "SchemalessDataBaseOperation"
                :type "void")
                nil [25723 28975]))          
      :file "schemaless_database_operation.cpp"
      :pointmax 28976
      :fsize 28975
      :lastmodtime '(21825 55936 978098 909000)
      :unmatched-syntax '((number 1109 . 1114) (number 1055 . 1060) (number 1001 . 1006) (number 944 . 949) (number 886 . 891) (number 838 . 843) (number 788 . 793) (number 731 . 736)))
    (semanticdb-table "sqlonline_border_functiontest.cpp"
      :major-mode 'c++-mode
      :tags 
        '( ("client_util.h" include nil nil [1 25])
            ("sqlonline_db_help.h" include nil nil [26 56])
            ("sqlonline/client/client_data_store.h" include nil nil [57 104])
            ("apsara/common/unittest.h" include nil nil [105 140])
            ("apsara/common/double_helper.h" include nil nil [141 181])
            ("iostream" include (:system-flag t) nil [182 201])
            ("vector" include (:system-flag t) nil [202 219])
            ("string" include (:system-flag t) nil [220 237])
            ("std" using (:type ("std" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [239 259])
            ("apsara" using (:type ("apsara" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [260 283])
            ("apsara::sqlonline" using (:type ("apsara::sqlonline" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [284 318])
            ("apsara::kuafu3" using (:type ("apsara::kuafu3" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [319 350])
            ("DECLARE_FLAG_STRING" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("sqlstorage_DefaultDBName" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [372 397]))                  
                :type "int")
                nil [352 398])
            ("DECLARE_FLAG_STRING" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("sqlstorage_DefaultServiceName" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [419 449]))                  
                :type "int")
                nil [399 450])
            ("BorderValueTest" type
               (:superclasses 
                  ( ("UnitTestFixtureBase" type
                       (:protection "public"
                        :type "class")
                        nil nil))                  
                :members 
                  ( ("public" label nil (reparse-symbol classsubparts) [520 527])
                    ("Setup" function
                       (:prototype-flag t
                        :type "void")
                        (reparse-symbol classsubparts) [532 545])
                    ("CleanUp" function
                       (:prototype-flag t
                        :type "void")
                        (reparse-symbol classsubparts) [550 565])
                    ("TestPartitionRange" function
                       (:prototype-flag t
                        :type "void")
                        (reparse-symbol classsubparts) [570 596])
                    ("_TestPartitionRange" function
                       (:prototype-flag t
                        :arguments 
                          ( ("notifier" variable
                               (:reference 1
                                :type ("Notifier" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [626 645]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [601 646])
                    ("TestPartitionRangeFunc" function
                       (:prototype-flag t
                        :type "void")
                        (reparse-symbol classsubparts) [651 681])
                    ("TestPKType" function
                       (:prototype-flag t
                        :type "void")
                        (reparse-symbol classsubparts) [687 705])
                    ("_TestPKType" function
                       (:prototype-flag t
                        :arguments 
                          ( ("notifier" variable
                               (:reference 1
                                :type ("Notifier" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [727 746]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [710 747])
                    ("TestPKTypeFunc" function
                       (:prototype-flag t
                        :type "void")
                        (reparse-symbol classsubparts) [752 774])
                    ("TestIntBorder" function
                       (:prototype-flag t
                        :type "void")
                        (reparse-symbol classsubparts) [780 801])
                    ("_TestIntBorder" function
                       (:prototype-flag t
                        :arguments 
                          ( ("notifier" variable
                               (:reference 1
                                :type ("Notifier" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [826 845]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [806 846])
                    ("TestIntBorderFunc" function
                       (:prototype-flag t
                        :type "void")
                        (reparse-symbol classsubparts) [851 876])
                    ("TestDoubleBorder" function
                       (:prototype-flag t
                        :type "void")
                        (reparse-symbol classsubparts) [882 906])
                    ("_TestDoubleBorder" function
                       (:prototype-flag t
                        :arguments 
                          ( ("notifier" variable
                               (:reference 1
                                :type ("Notifier" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [934 953]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [911 954])
                    ("TestDoubleBorderFunc" function
                       (:prototype-flag t
                        :type "void")
                        (reparse-symbol classsubparts) [959 987])
                    ("TestStringBorder" function
                       (:prototype-flag t
                        :type "void")
                        (reparse-symbol classsubparts) [993 1017])
                    ("_TestStringBorder" function
                       (:prototype-flag t
                        :arguments 
                          ( ("notifier" variable
                               (:reference 1
                                :type ("Notifier" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [1045 1064]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [1022 1065])
                    ("TestStringBorderFunc" function
                       (:prototype-flag t
                        :type "void")
                        (reparse-symbol classsubparts) [1070 1098])
                    ("APSARA_UNIT_TEST_CASE" function
                       (:prototype-flag t
                        :arguments 
                          ( ("" variable (:type ("TestPartitionRange" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1126 1145]))                          
                        :type "int")
                        (reparse-symbol classsubparts) [1104 1153])
                    ("APSARA_UNIT_TEST_CASE" function
                       (:prototype-flag t
                        :arguments 
                          ( ("" variable (:type ("TestPKType" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1179 1190]))                          
                        :type "int")
                        (reparse-symbol classsubparts) [1157 1198])
                    ("APSARA_UNIT_TEST_CASE" function
                       (:prototype-flag t
                        :arguments 
                          ( ("" variable (:type ("TestIntBorder" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1224 1238]))                          
                        :type "int")
                        (reparse-symbol classsubparts) [1202 1246])
                    ("APSARA_UNIT_TEST_CASE" function
                       (:prototype-flag t
                        :arguments 
                          ( ("" variable (:type ("TestDoubleBorder" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1272 1289]))                          
                        :type "int")
                        (reparse-symbol classsubparts) [1250 1297])
                    ("APSARA_UNIT_TEST_CASE" function
                       (:prototype-flag t
                        :arguments 
                          ( ("" variable (:type ("TestStringBorder" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1323 1340]))                          
                        :type "int")
                        (reparse-symbol classsubparts) [1301 1348])
                    ("private" label nil (reparse-symbol classsubparts) [1349 1357])
                    ("mDB" variable (:type ("DataBasePtr" type (:type "class") nil nil)) (reparse-symbol classsubparts) [1362 1378])
                    ("mHelp" variable (:type ("tr1::shared_ptr" type
                         (:template-specifier 
                            ( ("DataBaseHelp" type nil nil nil))                            
                          :type "class")
                          nil nil)) (reparse-symbol classsubparts) [1383 1419]))                  
                :type "class")
                nil [452 1422])
            ("APSARA_UNIT_TEST_FIXTURE" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("BorderValueTest" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1449 1465]))                  
                :type "int")
                nil [1424 1466])
            ("Setup" function
               (:parent "BorderValueTest"
                :type "void")
                nil [1468 1787])
            ("CleanUp" function
               (:parent "BorderValueTest"
                :type "void")
                nil [1789 1858])
            ("_TestStringBorder" function
               (:parent "BorderValueTest"
                :arguments 
                  ( ("notifier" variable
                       (:reference 1
                        :type ("Notifier" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [1900 1919]))                  
                :type "void")
                nil [1860 1974])
            ("TestStringBorder" function
               (:parent "BorderValueTest"
                :type "void")
                nil [1976 2318])
            ("TestStringBorderFunc" function
               (:parent "BorderValueTest"
                :type "void")
                nil [2320 7099])
            ("_TestDoubleBorder" function
               (:parent "BorderValueTest"
                :arguments 
                  ( ("notifier" variable
                       (:reference 1
                        :type ("Notifier" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [7140 7159]))                  
                :type "void")
                nil [7100 7214])
            ("TestDoubleBorder" function
               (:parent "BorderValueTest"
                :type "void")
                nil [7216 7558])
            ("TestDoubleBorderFunc" function
               (:parent "BorderValueTest"
                :type "void")
                nil [7560 12218])
            ("_TestIntBorder" function
               (:parent "BorderValueTest"
                :arguments 
                  ( ("notifier" variable
                       (:reference 1
                        :type ("Notifier" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [12257 12276]))                  
                :type "void")
                nil [12220 12328])
            ("TestIntBorder" function
               (:parent "BorderValueTest"
                :type "void")
                nil [12330 12666])
            ("TestIntBorderFunc" function
               (:parent "BorderValueTest"
                :type "void")
                nil [12668 23997])
            ("_TestPKType" function
               (:parent "BorderValueTest"
                :arguments 
                  ( ("notifier" variable
                       (:reference 1
                        :type ("Notifier" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [24033 24052]))                  
                :type "void")
                nil [23999 24101])
            ("TestPKType" function
               (:parent "BorderValueTest"
                :type "void")
                nil [24103 24433])
            ("TestPKTypeFunc" function
               (:parent "BorderValueTest"
                :type "void")
                nil [24435 25498])
            ("_TestPartitionRange" function
               (:parent "BorderValueTest"
                :arguments 
                  ( ("notifier" variable
                       (:reference 1
                        :type ("Notifier" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [25542 25561]))                  
                :type "void")
                nil [25500 25618])
            ("TestPartitionRange" function
               (:parent "BorderValueTest"
                :type "void")
                nil [25620 25966])
            ("TestPartitionRangeFunc" function
               (:parent "BorderValueTest"
                :type "void")
                nil [25968 29364]))          
      :file "sqlonline_border_functiontest.cpp"
      :pointmax 29365
      :fsize 29400
      :lastmodtime '(21816 54981 776096 493000)
      :unmatched-syntax '((number 1341 . 1346) (number 1290 . 1295) (number 1239 . 1244) (number 1191 . 1196) (number 1146 . 1151))))
  :file "!apsarapangu!disk1!jingwen.hjw!work!apsara!sqlonline!testing!functiontest!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
