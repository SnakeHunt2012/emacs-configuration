;; Object leveldb/
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "leveldb/"
  :tables
  (list
    (semanticdb-table "Makefile"
      :major-mode 'makefile-gmake-mode
      :tags 
        '( ("build_config.mk" include nil nil [852 876])
            ("CFLAGS" variable (:default-value ("-I." "-I./include" "$(PLATFORM_CCFLAGS)" "$(OPT)")) nil [877 930])
            ("CXXFLAGS" variable (:default-value ("-I." "-I./include" "$(PLATFORM_CXXFLAGS)" "$(OPT)")) nil [930 986])
            ("LDFLAGS" variable (:default-value ("$(PLATFORM_LDFLAGS)")) nil [987 1018])
            ("LIBS" variable (:default-value ("$(PLATFORM_LIBS)")) nil [1018 1043])
            ("LIBOBJECTS" variable (:default-value ("$(SOURCES:.cc=.o)")) nil [1044 1075])
            ("MEMENVOBJECTS" variable (:default-value ("$(MEMENV_SOURCES:.cc=.o)")) nil [1075 1116])
            ("TESTUTIL" variable (:default-value ("./util/testutil.o")) nil [1117 1146])
            ("TESTHARNESS" variable (:default-value ("./util/testharness.o" "$(TESTUTIL)")) nil [1146 1193])
            ("AR" variable (:default-value ("xcrun" "ar")) nil [1272 1284])
            ("TESTS" variable (:default-value ("arena_test" "autocompact_test" "bloom_test" "c_test" "cache_test" "coding_test" "corruption_test" "crc32c_test" "db_test" "dbformat_test" "env_test" "fault_injection_test" "filename_test" "filter_block_test" "hash_test" "issue178_test" "issue200_test" "log_test" "memenv_test" "skiplist_test" "table_test" "version_edit_test" "version_set_test" "write_batch_test")) nil [1291 1688])
            ("PROGRAMS" variable (:default-value ("db_bench" "leveldbutil" "$(TESTS)")) nil [1689 1730])
            ("BENCHMARKS" variable (:default-value ("db_bench_sqlite3" "db_bench_tree_db")) nil [1730 1777])
            ("LIBRARY" variable (:default-value ("libleveldb.a")) nil [1778 1801])
            ("MEMENVLIBRARY" variable (:default-value ("libmemenv.a")) nil [1801 1829])
            ("default" function (:arguments ("all")) nil [1830 1843])
            ("SHARED1" variable (:default-value ("libleveldb.$(PLATFORM_SHARED_EXT)")) nil [1955 1999])
            ("SHARED2" variable (:default-value ("$(SHARED1)")) nil [1999 2020])
            ("SHARED3" variable (:default-value ("$(SHARED1)")) nil [2020 2041])
            ("SHARED" variable (:default-value ("$(SHARED1)")) nil [2041 2061])
            ("SHARED_MAJOR" variable (:default-value ("1")) nil [2101 2118])
            ("SHARED_MINOR" variable (:default-value ("18")) nil [2118 2136])
            ("SHARED1" variable (:default-value ("libleveldb.$(PLATFORM_SHARED_EXT)")) nil [2136 2180])
            ("SHARED2" variable (:default-value ("$(SHARED1).$(SHARED_MAJOR)")) nil [2180 2217])
            ("SHARED3" variable (:default-value ("$(SHARED1).$(SHARED_MAJOR).$(SHARED_MINOR)")) nil [2217 2270])
            ("SHARED" variable (:default-value ("$(SHARED1)" "$(SHARED2)" "$(SHARED3)")) nil [2270 2312])
            ("$(SHARED1)" function (:arguments ("$(SHARED3)")) nil [2312 2365])
            ("$(SHARED2)" function (:arguments ("$(SHARED3)")) nil [2365 2418])
            ("$(SHARED3)" function nil nil [2425 2564])
            ("all" function (:arguments ("$(SHARED)" "$(LIBRARY)")) nil [2595 2621])
            ("check" function (:arguments ("all" "$(PROGRAMS)" "$(TESTS)")) nil [2622 2725])
            ("clean" function nil nil [2726 2892])
            ("$(LIBRARY)" function (:arguments ("$(LIBOBJECTS)")) nil [2893 2957])
            ("db_bench" function (:arguments ("db/db_bench.o" "$(LIBOBJECTS)" "$(TESTUTIL)")) nil [2958 3081])
            ("db_bench_sqlite3" function (:arguments ("doc/bench/db_bench_sqlite3.o" "$(LIBOBJECTS)" "$(TESTUTIL)")) nil [3082 3253])
            ("db_bench_tree_db" function (:arguments ("doc/bench/db_bench_tree_db.o" "$(LIBOBJECTS)" "$(TESTUTIL)")) nil [3254 3430])
            ("leveldbutil" function (:arguments ("db/leveldb_main.o" "$(LIBOBJECTS)")) nil [3431 3541])
            ("arena_test" function (:arguments ("util/arena_test.o" "$(LIBOBJECTS)" "$(TESTHARNESS)")) nil [3542 3681])
            ("autocompact_test" function (:arguments ("db/autocompact_test.o" "$(LIBOBJECTS)" "$(TESTHARNESS)")) nil [3682 3835])
            ("bloom_test" function (:arguments ("util/bloom_test.o" "$(LIBOBJECTS)" "$(TESTHARNESS)")) nil [3836 3975])
            ("c_test" function (:arguments ("db/c_test.o" "$(LIBOBJECTS)" "$(TESTHARNESS)")) nil [3976 4099])
            ("cache_test" function (:arguments ("util/cache_test.o" "$(LIBOBJECTS)" "$(TESTHARNESS)")) nil [4100 4239])
            ("coding_test" function (:arguments ("util/coding_test.o" "$(LIBOBJECTS)" "$(TESTHARNESS)")) nil [4240 4382])
            ("corruption_test" function (:arguments ("db/corruption_test.o" "$(LIBOBJECTS)" "$(TESTHARNESS)")) nil [4383 4533])
            ("crc32c_test" function (:arguments ("util/crc32c_test.o" "$(LIBOBJECTS)" "$(TESTHARNESS)")) nil [4534 4676])
            ("db_test" function (:arguments ("db/db_test.o" "$(LIBOBJECTS)" "$(TESTHARNESS)")) nil [4677 4803])
            ("dbformat_test" function (:arguments ("db/dbformat_test.o" "$(LIBOBJECTS)" "$(TESTHARNESS)")) nil [4804 4948])
            ("env_test" function (:arguments ("util/env_test.o" "$(LIBOBJECTS)" "$(TESTHARNESS)")) nil [4949 5082])
            ("fault_injection_test" function (:arguments ("db/fault_injection_test.o" "$(LIBOBJECTS)" "$(TESTHARNESS)")) nil [5083 5248])
            ("filename_test" function (:arguments ("db/filename_test.o" "$(LIBOBJECTS)" "$(TESTHARNESS)")) nil [5249 5393])
            ("filter_block_test" function (:arguments ("table/filter_block_test.o" "$(LIBOBJECTS)" "$(TESTHARNESS)")) nil [5394 5556])
            ("hash_test" function (:arguments ("util/hash_test.o" "$(LIBOBJECTS)" "$(TESTHARNESS)")) nil [5557 5693])
            ("issue178_test" function (:arguments ("issues/issue178_test.o" "$(LIBOBJECTS)" "$(TESTHARNESS)")) nil [5694 5846])
            ("issue200_test" function (:arguments ("issues/issue200_test.o" "$(LIBOBJECTS)" "$(TESTHARNESS)")) nil [5847 5999])
            ("log_test" function (:arguments ("db/log_test.o" "$(LIBOBJECTS)" "$(TESTHARNESS)")) nil [6000 6129])
            ("table_test" function (:arguments ("table/table_test.o" "$(LIBOBJECTS)" "$(TESTHARNESS)")) nil [6130 6271])
            ("skiplist_test" function (:arguments ("db/skiplist_test.o" "$(LIBOBJECTS)" "$(TESTHARNESS)")) nil [6272 6416])
            ("version_edit_test" function (:arguments ("db/version_edit_test.o" "$(LIBOBJECTS)" "$(TESTHARNESS)")) nil [6417 6573])
            ("version_set_test" function (:arguments ("db/version_set_test.o" "$(LIBOBJECTS)" "$(TESTHARNESS)")) nil [6574 6727])
            ("write_batch_test" function (:arguments ("db/write_batch_test.o" "$(LIBOBJECTS)" "$(TESTHARNESS)")) nil [6728 6881])
            ("$(MEMENVLIBRARY)" function (:arguments ("$(MEMENVOBJECTS)")) nil [6882 6959])
            ("memenv_test" function (:arguments ("helpers/memenv/memenv_test.o" "$(MEMENVLIBRARY)" "$(LIBRARY)" "$(TESTHARNESS)")) nil [6960 7151])
            ("PLATFORMSROOT" variable (:default-value ("/Applications/Xcode.app/Contents/Developer/Platforms")) nil [7266 7333])
            ("SIMULATORROOT" variable (:default-value ("$(PLATFORMSROOT)/iPhoneSimulator.platform/Developer")) nil [7333 7399])
            ("DEVICEROOT" variable (:default-value ("$(PLATFORMSROOT)/iPhoneOS.platform/Developer")) nil [7399 7455])
            ("IOSVERSION" variable (:default-value ("$(shell defaults read $(PLATFORMSROOT)/iPhoneOS.platform/version CFBundleShortVersionString)")) nil [7455 7559])
            ("IOSARCH" variable (:default-value ("-arch" "armv6" "-arch" "armv7" "-arch" "armv7s" "-arch" "arm64")) nil [7559 7616])
            (".cc.o" function nil nil [7617 8015])
            (".c.o" function nil nil [8016 8407])
            (".cc.o" function nil nil [8413 8452])
            (".c.o" function nil nil [8453 8488]))          
      :file "Makefile"
      :pointmax 8494
      :fsize 8493
      :lastmodtime '(21934 3108 599035 986000)
      :unmatched-syntax '((ENDIF 2565 . 2570) (bol 2565 . 2565) (semantic-list 669 . 774) (punctuation 668 . 669) (bol 668 . 668) (symbol 423 . 431) (symbol 419 . 422) (punctuation 417 . 418) (punctuation 416 . 417) (symbol 412 . 415) (bol 412 . 412))))
  :file "!apsarapangu!disk5!jingwen.hjw!learn!leveldb!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
