;; Object unittest/
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "unittest/"
  :tables
  (list
    (semanticdb-table "sqlonline_commitlog_test_utils.cpp"
      :major-mode 'c++-mode
      :tags 
        '( ("sqlonline_commitlog_test_utils.h" include nil nil [1 44])
            ("sqlonline/coreimpl/commit_log/format_v4.h" include nil nil [45 97])
            ("sqlonline/common/sqlonline_types.h" include nil nil [98 143])
            ("sqlonline/common/sqlonline_macro.h" include nil nil [144 189])
            ("apsara/common/foreach.h" include nil nil [190 224])
            ("sqlonline/common/sqlonline_logging.h" include nil nil [225 272])
            ("DEFINE_FLAG_BOOL" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("sqlonline_MockStoreFailInjection" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [300 333])
                    ("" variable (:type ("false" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [391 397]))                  
                :type "int")
                nil [274 398])
            ("apsara" type
               (:members 
                  ( ("sqlonline" type
                       (:members 
                          ( ("sLogger" variable
                               (:pointer 1
                                :default-value "logging::GetLogger(\"/apsara/sqlonline/store_mock\")"
                                :type ("logging::Logger" type (:type "class") nil nil))
                                (reparse-symbol namespacesubparts) [442 520])
                            ("unnamed" type
                               (:members 
                                  ( ("FormatKey" function
                                       (:arguments 
                                          ( ("pks" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("deque" type
                                                     (:template-specifier 
                                                        ( ("InplaceCell" type nil nil nil))                                                        
                                                      :type "class")
                                                      nil nil))
                                                (reparse-symbol arg-sub-list) [552 582])
                                            ("col" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("Slice" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [583 600]))                                          
                                        :type ("string" type (:type "class") nil nil))
                                        (reparse-symbol namespacesubparts) [535 852])
                                    ("FormatKey" function
                                       (:arguments 
                                          ( ("rowKey" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("Slice" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [871 891])
                                            ("colName" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("Slice" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [892 913]))                                          
                                        :type ("string" type (:type "class") nil nil))
                                        (reparse-symbol namespacesubparts) [854 1074])
                                    ("FormatPkey" function
                                       (:arguments 
                                          ( ("pks" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("deque" type
                                                     (:template-specifier 
                                                        ( ("InplaceCell" type nil nil nil))                                                        
                                                      :type "class")
                                                      nil nil))
                                                (reparse-symbol arg-sub-list) [1094 1124]))                                          
                                        :type ("string" type (:type "class") nil nil))
                                        (reparse-symbol namespacesubparts) [1076 1423])
                                    ("PrettyFormatPkey" function
                                       (:arguments 
                                          ( ("rowKey" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("Slice" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [1449 1469]))                                          
                                        :type ("string" type (:type "class") nil nil))
                                        (reparse-symbol namespacesubparts) [1425 1589]))                                  
                                :type "namespace")
                                (reparse-symbol namespacesubparts) [522 1592])
                            ("AddRow" function
                               (:parent "MockStore"
                                :arguments 
                                  ( ("row" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("InplaceRow" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [1630 1652]))                                  
                                :type "void")
                                (reparse-symbol namespacesubparts) [1607 3089])
                            ("Add" function
                               (:parent "MockStore"
                                :arguments 
                                  ( ("cell" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("Cell" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [3111 3128]))                                  
                                :type "void")
                                (reparse-symbol namespacesubparts) [3091 3999])
                            ("BatchAdd" function
                               (:parent "MockStore"
                                :arguments 
                                  ( ("cells" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("KVMap" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [4026 4045]))                                  
                                :type "void")
                                (reparse-symbol namespacesubparts) [4001 4710])
                            ("MockTxn" function
                               (:constructor-flag t
                                :parent "MockTxn"
                                :arguments 
                                  ( ("stores" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("std::deque" type
                                             (:template-specifier 
                                                ( ("IStore" type (:pointer 1) nil nil))                                                
                                              :type "class")
                                              nil nil))
                                        (reparse-symbol arg-sub-list) [4734 4768])
                                    ("data" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("std::deque" type
                                             (:template-specifier 
                                                ( ("InplaceRowWithStoreName" type nil nil nil))                                                
                                              :type "class")
                                              nil nil))
                                        (reparse-symbol arg-sub-list) [4773 4821]))                                  
                                :type ("MockTxn" type (:type "class") nil nil))
                                (reparse-symbol namespacesubparts) [4712 4941])
                            ("FlushToStorage" function
                               (:parent "MockTxn"
                                :arguments 
                                  ( ("" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("LogPoint" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [4972 4988])
                                    ("" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("Version" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [4989 5004]))                                  
                                :type "void")
                                (reparse-symbol namespacesubparts) [4943 5185])
                            ("Serialize" function
                               (:parent "MockTxn"
                                :arguments 
                                  ( ("compressor" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("ICompressor" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [5211 5241])
                                    ("out" variable
                                       (:pointer 1
                                        :type ("string" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [5242 5254])
                                    ("scratch" variable
                                       (:pointer 1
                                        :type ("string" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [5255 5271]))                                  
                                :type "bool")
                                (reparse-symbol namespacesubparts) [5187 6705])
                            ("Commit" function
                               (:parent "MockTxn"
                                :type "void")
                                (reparse-symbol namespacesubparts) [6708 6776])
                            ("Abort" function
                               (:parent "MockTxn"
                                :type "void")
                                (reparse-symbol namespacesubparts) [6778 6845])
                            ("Retry" function
                               (:parent "MockTxn"
                                :type "void")
                                (reparse-symbol namespacesubparts) [6847 6914])
                            ("AddCell" function
                               (:parent "MockTxn"
                                :arguments 
                                  ( ("store" variable
                                       (:pointer 1
                                        :type ("IStore" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [6943 6957])
                                    ("pk" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("std::string" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [6962 6984])
                                    ("colName" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("std::string" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [6989 7016])
                                    ("cell" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("SQLVariant" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [7021 7044]))                                  
                                :type "void")
                                (reparse-symbol namespacesubparts) [6916 7090])
                            ("AddCell" function
                               (:parent "MockTxn"
                                :arguments 
                                  ( ("store" variable
                                       (:pointer 1
                                        :type ("IStore" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [7119 7133])
                                    ("pk" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("Slice" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [7138 7154])
                                    ("colName" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("Slice" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [7159 7180])
                                    ("cell" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("InplaceSQLVariant" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [7185 7215]))                                  
                                :type "void")
                                (reparse-symbol namespacesubparts) [7092 7261])
                            ("PointQuery" function
                               (:pointer 1
                                :parent "MockTxn"
                                :arguments 
                                  ( ("store" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("IStore" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [7303 7323])
                                    ("query" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("Query" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [7328 7347])
                                    ("opts" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("ReadOptions" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [7352 7376]))                                  
                                :type ("ICellIterator" type (:type "class") nil nil))
                                (reparse-symbol namespacesubparts) [7263 7439])
                            ("RangeQuery" function
                               (:pointer 1
                                :parent "MockTxn"
                                :arguments 
                                  ( ("store" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("IStore" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [7481 7501])
                                    ("query" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("Query" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [7506 7525])
                                    ("opts" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("ReadOptions" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [7530 7554]))                                  
                                :type ("ICellIterator" type (:type "class") nil nil))
                                (reparse-symbol namespacesubparts) [7441 7617])
                            ("RangeQueryReverse" function
                               (:pointer 1
                                :parent "MockTxn"
                                :arguments 
                                  ( ("store" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("IStore" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [7673 7693])
                                    ("query" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("Query" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [7698 7717])
                                    ("opts" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("ReadOptions" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [7722 7746]))                                  
                                :type ("IReverseCellIterator" type (:type "class") nil nil))
                                (reparse-symbol namespacesubparts) [7619 7809]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [419 7812]))                  
                :type "namespace")
                nil [400 7837]))          
      :file "sqlonline_commitlog_test_utils.cpp"
      :pointmax 7858
      :fsize 7857
      :lastmodtime '(21968 27940 664036 469000)
      :unmatched-syntax '((string 343 . 389)))
    (semanticdb-table "sqlonline_commitlog_test_utils.h"
      :file "sqlonline_commitlog_test_utils.h"
      :fsize 17059
      :lastmodtime '(21968 27940 657036 260000))
    (semanticdb-table "sqlonline_geo_ocm_client_unittest.cpp"
      :major-mode 'c++-mode
      :tags nil
      :file "sqlonline_geo_ocm_client_unittest.cpp"
      :pointmax 29627
      :fsize 29626
      :lastmodtime '(21968 27940 642038 155000)
      :unmatched-syntax nil)
    (semanticdb-table "sqlonline_geo_meta_manager_unittest.cpp"
      :major-mode 'c++-mode
      :tags 
        '( ("sqlonline/coreimpl/replication/geoengine/sqlonline_geo_meta_manager.h" include nil nil [1 81])
            ("sqlonline/common/public_error.h" include nil nil [82 124])
            ("sqlonline/common/common.h" include nil nil [125 161])
            ("apsara/common/unittest.h" include nil nil [162 197])
            ("tr1/memory" include (:system-flag t) nil [199 220])
            ("apsara" using (:type ("apsara" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [222 245])
            ("apsara::sqlonline" using (:type ("apsara::sqlonline" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [246 280])
            ("apsara::sqlonline::ocm" using (:type ("apsara::sqlonline::ocm" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [281 320])
            ("std" using (:type ("std" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [321 341])
            ("SqlonlineGeoMetaManagerUnittest" type
               (:superclasses 
                  ( ("apsara::UnitTestFixtureBase" type
                       (:protection "public"
                        :type "class")
                        nil nil))                  
                :members 
                  ( ("public" label nil (reparse-symbol classsubparts) [452 459])
                    ("TestGetInstanceInfo" function
                       (:prototype-flag t
                        :type "void")
                        (reparse-symbol classsubparts) [464 491])
                    ("APSARA_UNIT_TEST_CASE" function
                       (:prototype-flag t
                        :arguments 
                          ( ("" variable (:type ("TestGetInstanceInfo" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [518 538]))                          
                        :type "int")
                        (reparse-symbol classsubparts) [496 542])
                    ("TestGetInstanceLocation" function
                       (:prototype-flag t
                        :type "void")
                        (reparse-symbol classsubparts) [548 579])
                    ("APSARA_UNIT_TEST_CASE" function
                       (:prototype-flag t
                        :arguments 
                          ( ("" variable (:type ("TestGetInstanceLocation" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [606 630]))                          
                        :type "int")
                        (reparse-symbol classsubparts) [584 634])
                    ("TestGetReplicationInfo" function
                       (:prototype-flag t
                        :type "void")
                        (reparse-symbol classsubparts) [640 670])
                    ("APSARA_UNIT_TEST_CASE" function
                       (:prototype-flag t
                        :arguments 
                          ( ("" variable (:type ("TestGetReplicationInfo" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [697 720]))                          
                        :type "int")
                        (reparse-symbol classsubparts) [675 724])
                    ("TestGetAllReplicationInfo" function
                       (:prototype-flag t
                        :type "void")
                        (reparse-symbol classsubparts) [730 763])
                    ("APSARA_UNIT_TEST_CASE" function
                       (:prototype-flag t
                        :arguments 
                          ( ("" variable (:type ("TestGetAllReplicationInfo" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [790 816]))                          
                        :type "int")
                        (reparse-symbol classsubparts) [768 820])
                    ("TestInsertReplicationInfo" function
                       (:prototype-flag t
                        :type "void")
                        (reparse-symbol classsubparts) [826 859])
                    ("APSARA_UNIT_TEST_CASE" function
                       (:prototype-flag t
                        :arguments 
                          ( ("" variable (:type ("TestInsertReplicationInfo" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [886 912]))                          
                        :type "int")
                        (reparse-symbol classsubparts) [864 916])
                    ("TestDeleteReplicationInfo" function
                       (:prototype-flag t
                        :type "void")
                        (reparse-symbol classsubparts) [1031 1064])
                    ("APSARA_UNIT_TEST_CASE" function
                       (:prototype-flag t
                        :arguments 
                          ( ("" variable (:type ("TestDeleteReplicationInfo" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1091 1117]))                          
                        :type "int")
                        (reparse-symbol classsubparts) [1069 1121])
                    ("TestGetInstanceMetering" function
                       (:prototype-flag t
                        :type "void")
                        (reparse-symbol classsubparts) [1127 1158])
                    ("APSARA_UNIT_TEST_CASE" function
                       (:prototype-flag t
                        :arguments 
                          ( ("" variable (:type ("TestGetInstanceMetering" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1185 1209]))                          
                        :type "int")
                        (reparse-symbol classsubparts) [1163 1213])
                    ("TestConcurrentInstance" function
                       (:prototype-flag t
                        :type "void")
                        (reparse-symbol classsubparts) [1219 1249])
                    ("APSARA_UNIT_TEST_CASE" function
                       (:prototype-flag t
                        :arguments 
                          ( ("" variable (:type ("TestConcurrentInstance" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1276 1299]))                          
                        :type "int")
                        (reparse-symbol classsubparts) [1254 1303])
                    ("TestConcurrentReplication" function
                       (:prototype-flag t
                        :type "void")
                        (reparse-symbol classsubparts) [1309 1342])
                    ("APSARA_UNIT_TEST_CASE" function
                       (:prototype-flag t
                        :arguments 
                          ( ("" variable (:type ("TestConcurrentReplication" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1369 1395]))                          
                        :type "int")
                        (reparse-symbol classsubparts) [1347 1399])
                    ("Setup" function
                       (:typemodifiers ("virtual")
                        :type "void")
                        (reparse-symbol classsubparts) [1424 1644])
                    ("SetupCase" function
                       (:typemodifiers ("virtual")
                        :type "void")
                        (reparse-symbol classsubparts) [1669 1746])
                    ("CleanUpCase" function
                       (:typemodifiers ("virtual")
                        :type "void")
                        (reparse-symbol classsubparts) [1771 1809])
                    ("private" label nil (reparse-symbol classsubparts) [1811 1819])
                    ("CreateInstance" function
                       (:prototype-flag t
                        :arguments 
                          ( ("mInstanceName" variable
                               (:reference 1
                                :constant-flag t
                                :type ("std::string" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [1844 1877])
                            ("instatceInfo" variable
                               (:reference 1
                                :constant-flag t
                                :type ("ocm::InstanceInfo" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [1878 1916]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [1824 1917])
                    ("DeleteInstance" function
                       (:prototype-flag t
                        :arguments 
                          ( ("mInstanceName" variable
                               (:reference 1
                                :constant-flag t
                                :type ("std::string" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [1942 1975]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [1922 1976])
                    ("DeleteReplication" function
                       (:prototype-flag t
                        :arguments 
                          ( ("mInstanceName" variable
                               (:reference 1
                                :constant-flag t
                                :type ("std::string" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [2004 2037])
                            ("mReplicationId" variable
                               (:reference 1
                                :constant-flag t
                                :type ("std::string" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [2038 2072]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [1981 2073])
                    ("InitInstanceInfo" function
                       (:prototype-flag t
                        :arguments 
                          ( ("instInfo" variable
                               (:pointer 1
                                :type ("InstanceInfo" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [2101 2124])
                            ("instanceName" variable
                               (:reference 1
                                :constant-flag t
                                :type ("std::string" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [2125 2157])
                            ("instanceId" variable
                               (:reference 1
                                :constant-flag t
                                :type ("std::string" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [2166 2196]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [2079 2197])
                    ("InitReplicationInfo" function
                       (:prototype-flag t
                        :arguments 
                          ( ("repliationInfo" variable
                               (:pointer 1
                                :type ("ReplicationInfo" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [2228 2260])
                            ("instanceName" variable
                               (:reference 1
                                :constant-flag t
                                :type ("std::string" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [2261 2293])
                            ("instanceId" variable
                               (:reference 1
                                :constant-flag t
                                :type ("std::string" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [2302 2332])
                            ("replicationId" variable
                               (:reference 1
                                :constant-flag t
                                :type ("std::string" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [2333 2366]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [2203 2367])
                    ("InitReplicationInfoSecondary" function
                       (:prototype-flag t
                        :arguments 
                          ( ("repliationInfo" variable
                               (:pointer 1
                                :type ("ReplicationInfo" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [2407 2439])
                            ("instanceName" variable
                               (:reference 1
                                :constant-flag t
                                :type ("std::string" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [2448 2480])
                            ("instanceId" variable
                               (:reference 1
                                :constant-flag t
                                :type ("std::string" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [2481 2511])
                            ("replicationId" variable
                               (:reference 1
                                :constant-flag t
                                :type ("std::string" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [2520 2553]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [2373 2554])
                    ("TestConcurrentInstanceThread" function
                       (:prototype-flag t
                        :arguments 
                          ( ("geoMetaManagerPtr" variable
                               (:reference 1
                                :constant-flag t
                                :type ("GeoMetaManagerPtr" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [2593 2636])
                            ("idx" variable (:type ("uint32_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2637 2650]))                          
                        :type "int")
                        (reparse-symbol classsubparts) [2560 2651])
                    ("TestConcurrentReplicationThread" function
                       (:prototype-flag t
                        :arguments 
                          ( ("geoMetaManagerPtr" variable
                               (:reference 1
                                :constant-flag t
                                :type ("GeoMetaManagerPtr" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [2692 2735])
                            ("idx" variable (:type ("uint32_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2736 2749]))                          
                        :type "int")
                        (reparse-symbol classsubparts) [2656 2750])
                    ("private" label nil (reparse-symbol classsubparts) [2752 2760])
                    ("mOcmClient" variable
                       (:pointer 1
                        :type ("IOcmClient" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [2765 2788])
                    ("mOcmAddr" variable (:type ("OcmAddress" type (:type "class") nil nil)) (reparse-symbol classsubparts) [2793 2813])
                    ("mInstanceName" variable (:type ("std::string" type (:type "class") nil nil)) (reparse-symbol classsubparts) [2819 2845])
                    ("mInstanceId" variable (:type ("std::string" type (:type "class") nil nil)) (reparse-symbol classsubparts) [2850 2874])
                    ("mReplicationId" variable (:type ("std::string" type (:type "class") nil nil)) (reparse-symbol classsubparts) [2879 2906]))                  
                :type "class")
                nil [343 2909])
            ("APSARA_UNIT_TEST_FIXTURE" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("SqlonlineGeoMetaManagerUnittest" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2936 2968]))                  
                :type "int")
                nil [2911 2969])
            ("TestGetInstanceInfo" function
               (:parent "SqlonlineGeoMetaManagerUnittest"
                :type "void")
                nil [2972 4008])
            ("TestGetInstanceLocation" function
               (:parent "SqlonlineGeoMetaManagerUnittest"
                :type "void")
                nil [4010 4781])
            ("TestGetReplicationInfo" function
               (:parent "SqlonlineGeoMetaManagerUnittest"
                :type "void")
                nil [4783 6921])
            ("TestGetAllReplicationInfo" function
               (:parent "SqlonlineGeoMetaManagerUnittest"
                :type "void")
                nil [6923 8753])
            ("TestInsertReplicationInfo" function
               (:parent "SqlonlineGeoMetaManagerUnittest"
                :type "void")
                nil [8755 9539])
            ("TestDeleteReplicationInfo" function
               (:parent "SqlonlineGeoMetaManagerUnittest"
                :type "void")
                nil [10915 11957])
            ("TestGetInstanceMetering" function
               (:parent "SqlonlineGeoMetaManagerUnittest"
                :type "void")
                nil [11959 14006])
            ("TestConcurrentInstance" function
               (:parent "SqlonlineGeoMetaManagerUnittest"
                :type "void")
                nil [14008 14477])
            ("TestConcurrentReplication" function
               (:parent "SqlonlineGeoMetaManagerUnittest"
                :type "void")
                nil [14479 14954])
            ("CreateInstance" function
               (:parent "SqlonlineGeoMetaManagerUnittest"
                :arguments 
                  ( ("mInstanceName" variable
                       (:reference 1
                        :constant-flag t
                        :type ("std::string" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [15009 15042])
                    ("instatceInfo" variable
                       (:reference 1
                        :constant-flag t
                        :type ("ocm::InstanceInfo" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [15047 15085]))                  
                :type "void")
                nil [14956 15160])
            ("DeleteInstance" function
               (:parent "SqlonlineGeoMetaManagerUnittest"
                :arguments 
                  ( ("mInstanceId" variable
                       (:reference 1
                        :constant-flag t
                        :type ("std::string" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [15215 15246]))                  
                :type "void")
                nil [15162 15363])
            ("DeleteReplication" function
               (:parent "SqlonlineGeoMetaManagerUnittest"
                :arguments 
                  ( ("mInstanceId" variable
                       (:reference 1
                        :constant-flag t
                        :type ("std::string" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [15421 15452])
                    ("mReplicationId" variable
                       (:reference 1
                        :constant-flag t
                        :type ("std::string" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [15457 15491]))                  
                :type "void")
                nil [15365 15573])
            ("InitInstanceInfo" function
               (:parent "SqlonlineGeoMetaManagerUnittest"
                :arguments 
                  ( ("instInfo" variable
                       (:pointer 1
                        :type ("InstanceInfo" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [15630 15653])
                    ("instanceName" variable
                       (:reference 1
                        :constant-flag t
                        :type ("std::string" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [15658 15690])
                    ("instanceId" variable
                       (:reference 1
                        :constant-flag t
                        :type ("std::string" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [15695 15725]))                  
                :type "void")
                nil [15575 16992])
            ("InitReplicationInfo" function
               (:parent "SqlonlineGeoMetaManagerUnittest"
                :arguments 
                  ( ("repliationInfo" variable
                       (:pointer 1
                        :type ("ReplicationInfo" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [17057 17089])
                    ("instanceName" variable
                       (:reference 1
                        :constant-flag t
                        :type ("std::string" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [17094 17126])
                    ("instanceId" variable
                       (:reference 1
                        :constant-flag t
                        :type ("std::string" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [17131 17161])
                    ("replicationId" variable
                       (:reference 1
                        :constant-flag t
                        :type ("std::string" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [17166 17199]))                  
                :type "void")
                nil [16994 17900])
            ("InitReplicationInfoSecondary" function
               (:parent "SqlonlineGeoMetaManagerUnittest"
                :arguments 
                  ( ("repliationInfo" variable
                       (:pointer 1
                        :type ("ReplicationInfo" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [17974 18006])
                    ("instanceName" variable
                       (:reference 1
                        :constant-flag t
                        :type ("std::string" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [18011 18043])
                    ("instanceId" variable
                       (:reference 1
                        :constant-flag t
                        :type ("std::string" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [18048 18078])
                    ("replicationId" variable
                       (:reference 1
                        :constant-flag t
                        :type ("std::string" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [18083 18116]))                  
                :type "void")
                nil [17902 18818])
            ("TestConcurrentInstanceThread" function
               (:parent "SqlonlineGeoMetaManagerUnittest"
                :arguments 
                  ( ("geoMetaManagerPtr" variable
                       (:reference 1
                        :constant-flag t
                        :type ("GeoMetaManagerPtr" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [18887 18930])
                    ("idx" variable (:type ("uint32_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [18931 18944]))                  
                :type "int")
                nil [18820 21688])
            ("TestConcurrentReplicationThread" function
               (:parent "SqlonlineGeoMetaManagerUnittest"
                :arguments 
                  ( ("geoMetaManagerPtr" variable
                       (:reference 1
                        :constant-flag t
                        :type ("GeoMetaManagerPtr" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [21760 21803])
                    ("idx" variable (:type ("uint32_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [21805 21818]))                  
                :type "int")
                nil [21690 23713]))          
      :file "sqlonline_geo_meta_manager_unittest.cpp"
      :pointmax 23714
      :fsize 23713
      :lastmodtime '(21968 27940 663039 777000)
      :unmatched-syntax '((number 1396 . 1397) (number 1300 . 1301) (number 1210 . 1211) (number 1118 . 1119) (number 913 . 914) (number 817 . 818) (number 721 . 722) (number 631 . 632) (number 539 . 540))))
  :file "!apsarapangu!disk6!jingwen.hjw!work!trunk!sqlonline!coreimpl!unittest!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
