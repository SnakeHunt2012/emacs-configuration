;; Object sqlonline/
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "sqlonline/"
  :tables
  (list
    (semanticdb-table "mock_geo_engine.h"
      :major-mode 'c-mode
      :tags 
        '( ("APSARA_MOCK_GEO_ENGINE_H" variable (:constant-flag t) nil [42 66])
            ("sqlonline/coreimpl/replication/geoengine/sqlonline_geo_engine.h" include nil nil [68 142])
            ("DECLARE_FLAG_INT32" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("sqlonline_master_GeoInstanceLockTimeoutMs" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [163 205]))                  
                :type "int")
                nil [144 206])
            ("apsara" type
               (:members 
                  ( ("sqlonline" type
                       (:members 
                          ( ("MockGeoEngine" type
                               (:superclasses 
                                  ( ("GeoEngine" type
                                       (:protection "public"
                                        :type "class")
                                        nil nil))                                  
                                :members 
                                  ( ("public" label nil (reparse-symbol classsubparts) [291 298])
                                    ("MockGeoEngine" function
                                       (:constructor-flag t
                                        :type ("MockGeoEngine" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [303 471])
                                    ("MockGeoEngine" function
                                       (:destructor-flag t
                                        :type "void")
                                        (reparse-symbol classsubparts) [477 505])
                                    ("GetOcmClient" function
                                       (:prototype-flag t
                                        :pointer 1
                                        :type ("IOcmClient" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [511 538])
                                    ("public" label nil (reparse-symbol classsubparts) [540 547]))                                  
                                :type "class")
                                (reparse-symbol namespacesubparts) [250 550]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [227 553]))                  
                :type "namespace")
                nil [208 585]))          
      :file "mock_geo_engine.h"
      :pointmax 653
      :fsize 652
      :lastmodtime '(21954 60213 586036 129000)
      :unmatched-syntax nil
      :lexical-table 
        '(("APSARA_MOCK_GEO_ENGINE_H")
          )
)
    (semanticdb-table "mock_storage.cpp"
      :major-mode 'c++-mode
      :tags 
        '( ("mock_remote_fuxi_master.h" include nil nil [1 37])
            ("mock_master_service_impl.h" include nil nil [38 75])
            ("sqlonline_ocm_client.h" include nil nil [76 109])
            ("sqlonline/mock/sqlonline/mock_admin_client.h" include nil nil [110 165])
            ("sqlonline/worker/sqlstorage_worker_service.h" include nil nil [166 221])
            ("sqlonline/worker/worker_service_impl.h" include nil nil [222 271])
            ("sqlonline/core/sqlonline_const_variables.h" include nil nil [272 325])
            ("sqlonline/core/session_manager.h" include nil nil [326 369])
            ("sqlonline/coreimpl/sqlonline_static_variables.h" include nil nil [370 428])
            ("sqlonline/common/common.h" include nil nil [429 465])
            ("sqlonline/common/time_tools.h" include nil nil [466 506])
            ("sqlonline/include/sqlstorage_helper.h" include nil nil [507 555])
            ("sqlonline/include/mock_service_lib.h" include nil nil [556 603])
            ("sqlonline/include/mock_storage.h" include nil nil [604 647])
            ("sqlonline/include/mock_rpc.h" include nil nil [648 687])
            ("apsara/kuafu.h" include nil nil [688 713])
            ("apsara/pangu.h" include nil nil [714 739])
            ("apsara/common/common_test_lib.h" include nil nil [740 782])
            ("apsara/common/safeguard.h" include nil nil [783 819])
            ("apsara/common/flag.h" include nil nil [820 851])
            ("std" using (:type ("std" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [853 873])
            ("std::tr1" using (:type ("std::tr1" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [874 899])
            ("apsara::kuafu" using (:type ("apsara::kuafu" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [900 930])
            ("apsara::pangu" using (:type ("apsara::pangu" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [931 961])
            ("apsara::fuxi" using (:type ("apsara::fuxi" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [962 991])
            ("apsara::fuxi::servicelib" using (:type ("apsara::fuxi::servicelib" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [992 1033])
            ("apsara::sqlonline" using (:type ("apsara::sqlonline" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [1034 1068])
            ("apsara::sqlonline::geoengine" using (:type ("apsara::sqlonline::geoengine" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [1069 1114])
            ("DECLARE_FLAG_BOOL" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("shennong_enable_event_writer" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1134 1163]))                  
                :type "int")
                nil [1116 1164])
            ("DECLARE_FLAG_STRING" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("sqlstorage_DefaultDBName" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1185 1210]))                  
                :type "int")
                nil [1165 1211])
            ("DECLARE_FLAG_INT32" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("sqlstorage_DataChannelThreadNum" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1231 1263]))                  
                :type "int")
                nil [1212 1264])
            ("DECLARE_FLAG_INT32" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("sqlstorage_DataChannelQueueSize" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1284 1316]))                  
                :type "int")
                nil [1265 1317])
            ("DECLARE_FLAG_INT32" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("sqlstorage_WriteRequestThreadNum" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1337 1370]))                  
                :type "int")
                nil [1318 1371])
            ("DECLARE_FLAG_INT32" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("sqlstorage_WriteRequestQueueSize" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1391 1424]))                  
                :type "int")
                nil [1372 1425])
            ("DECLARE_FLAG_INT32" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("sqlonline_worker_ReadRelayPoolThreadCount" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1445 1487]))                  
                :type "int")
                nil [1426 1488])
            ("DECLARE_FLAG_INT32" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("sqlstorage_ReadRequestQueueSize" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1508 1540]))                  
                :type "int")
                nil [1489 1541])
            ("DECLARE_FLAG_INT32" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("sqlstorage_WorkerDefaultThreadNum" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1561 1595]))                  
                :type "int")
                nil [1542 1596])
            ("DECLARE_FLAG_INT32" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("sqlstorage_WorkerDefaultQueueSize" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1616 1650]))                  
                :type "int")
                nil [1597 1651])
            ("DECLARE_FLAG_INT32" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("sqlstorage_MasterAppRequestThreadNum" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1671 1708]))                  
                :type "int")
                nil [1652 1709])
            ("DECLARE_FLAG_INT32" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("sqlstorage_MasterAppRequestQueueSize" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1729 1766]))                  
                :type "int")
                nil [1710 1767])
            ("DECLARE_FLAG_INT32" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("sqlstorage_MasterSystemRequestThreadNum" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1787 1827]))                  
                :type "int")
                nil [1768 1828])
            ("DECLARE_FLAG_INT32" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("sqlstorage_MasterSystemRequestQueueSize" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1848 1888]))                  
                :type "int")
                nil [1829 1889])
            ("DECLARE_FLAG_INT32" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("sqlstorage_MasterDefaultThreadNum" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1909 1943]))                  
                :type "int")
                nil [1890 1944])
            ("DECLARE_FLAG_INT32" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("sqlstorage_MasterDefaultQueueSize" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1964 1998]))                  
                :type "int")
                nil [1945 1999])
            ("DECLARE_FLAG_INT32" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("sqlonline_master_OptimizerRequestThreadNum" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2019 2062]))                  
                :type "int")
                nil [2000 2063])
            ("DECLARE_FLAG_INT32" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("sqlonline_master_OptimizerRequestQueueSize" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2083 2126]))                  
                :type "int")
                nil [2064 2127])
            ("DECLARE_FLAG_INT32" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("sqlstorage_MasterDefaultQueueSize" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2147 2181]))                  
                :type "int")
                nil [2128 2182])
            ("DECLARE_FLAG_STRING" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("sqlstorage_MasterServicePort" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2203 2232]))                  
                :type "int")
                nil [2183 2233])
            ("DECLARE_FLAG_STRING" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("sqlstorage_WorkerAddr_UT" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2254 2279]))                  
                :type "int")
                nil [2234 2280])
            ("DECLARE_FLAG_STRING" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("sqlstorage_MasterAddr_UT" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2301 2326]))                  
                :type "int")
                nil [2281 2327])
            ("DECLARE_FLAG_BOOL" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("sqlstorage_EnableRandomAddr_UT" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2346 2377]))                  
                :type "int")
                nil [2328 2378])
            ("DECLARE_FLAG_BOOL" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("sqlengine_UT" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2397 2410]))                  
                :type "int")
                nil [2379 2411])
            ("unnamed" type
               (:members 
                  ( ("kMinPort" variable
                       (:constant-flag t
                        :default-value "30000"
                        :type ("int32_t" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [2426 2457])
                    ("kMaxPort" variable
                       (:constant-flag t
                        :default-value "65535"
                        :type ("int32_t" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [2458 2489])
                    ("kMaxRetry" variable
                       (:constant-flag t
                        :default-value "1000"
                        :type ("int32_t" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [2490 2521])
                    ("TryGetAvailablePort" function (:type ("int32_t" type (:type "class") nil nil)) (reparse-symbol namespacesubparts) [2523 2937]))                  
                :type "namespace")
                nil [2413 2940])
            ("apsara" type
               (:members 
                  ( ("sqlonline" type
                       (:members 
                          ( ("sLogger" variable
                               (:pointer 1
                                :typemodifiers ("static")
                                :default-value "logging::GetLogger(\"/apsara/sqlonline/mock_storage\")"
                                :type ("logging::Logger" type (:type "class") nil nil))
                                (reparse-symbol namespacesubparts) [2985 3076])
                            ("MockStorageWorker" function
                               (:constructor-flag t
                                :parent "MockStorageWorker"
                                :type ("MockStorageWorker" type (:type "class") nil nil))
                                (reparse-symbol namespacesubparts) [3119 3301])
                            ("MockStorageWorker" function
                               (:constructor-flag t
                                :parent "MockStorageWorker"
                                :arguments 
                                  ( ("mockService" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("MockWorkerService" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [3340 3377]))                                  
                                :type ("MockStorageWorker" type (:type "class") nil nil))
                                (reparse-symbol namespacesubparts) [3303 3553])
                            ("MockStorageWorker" function
                               (:destructor-flag t
                                :parent "MockStorageWorker"
                                :type "void")
                                (reparse-symbol namespacesubparts) [3555 3861])
                            ("Init" function
                               (:parent "MockStorageWorker"
                                :type "void")
                                (reparse-symbol namespacesubparts) [3863 6456])
                            ("RegisterService" function
                               (:parent "MockStorageWorker"
                                :arguments 
                                  ( ("desc" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("string" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [6503 6522])
                                    ("numThread" variable (:type "int") (reparse-symbol arg-sub-list) [6523 6537])
                                    ("queueSize" variable (:type "int") (reparse-symbol arg-sub-list) [6538 6552])
                                    ("service" variable
                                       (:pointer 1
                                        :type ("RPCService" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [6553 6573]))                                  
                                :type "void")
                                (reparse-symbol namespacesubparts) [6458 6988])
                            ("MockStorageMaster" function
                               (:constructor-flag t
                                :parent "MockStorageMaster"
                                :type ("MockStorageMaster" type (:type "class") nil nil))
                                (reparse-symbol namespacesubparts) [7031 7300])
                            ("MockStorageMaster" function
                               (:constructor-flag t
                                :parent "MockStorageMaster"
                                :arguments 
                                  ( ("mockService" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("MockMasterService" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [7339 7376]))                                  
                                :type ("MockStorageMaster" type (:type "class") nil nil))
                                (reparse-symbol namespacesubparts) [7302 7639])
                            ("MockStorageMaster" function
                               (:destructor-flag t
                                :parent "MockStorageMaster"
                                :type "void")
                                (reparse-symbol namespacesubparts) [7641 7984])
                            ("Init" function
                               (:parent "MockStorageMaster"
                                :type "void")
                                (reparse-symbol namespacesubparts) [7986 12157])
                            ("RegisterService" function
                               (:parent "MockStorageMaster"
                                :arguments 
                                  ( ("desc" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("string" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [12208 12227])
                                    ("numThread" variable (:type "int") (reparse-symbol arg-sub-list) [12228 12242])
                                    ("queueSize" variable (:type "int") (reparse-symbol arg-sub-list) [12243 12257])
                                    ("service" variable
                                       (:pointer 1
                                        :type ("RPCService" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [12258 12278]))                                  
                                :type "void")
                                (reparse-symbol namespacesubparts) [12159 12693])
                            ("WorkerStopped" function
                               (:parent "MockStorageMaster"
                                :arguments 
                                  ( ("workerAddr" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("string" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [12733 12758]))                                  
                                :type "void")
                                (reparse-symbol namespacesubparts) [12695 12854])
                            ("WorkerStarted" function
                               (:parent "MockStorageMaster"
                                :arguments 
                                  ( ("workerAddr" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("string" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [12894 12919]))                                  
                                :type "void")
                                (reparse-symbol namespacesubparts) [12856 13015])
                            ("MockStorage::mWorkerServiceCreator" variable (:type ("MockWorkerService" type (:type "class") nil nil)) (reparse-symbol namespacesubparts) [13052 13105])
                            ("MockStorage::mMasterServiceCreator" variable (:type ("MockMasterService" type (:type "class") nil nil)) (reparse-symbol namespacesubparts) [13106 13159])
                            ("MockStorage::mWorker" variable
                               (:pointer 1
                                :default-value "NULL"
                                :type ("MockStorageWorker" type (:type "class") nil nil))
                                (reparse-symbol namespacesubparts) [13160 13207])
                            ("MockStorage::mMaster" variable
                               (:pointer 1
                                :default-value "NULL"
                                :type ("MockStorageMaster" type (:type "class") nil nil))
                                (reparse-symbol namespacesubparts) [13208 13255])
                            ("Setup" function
                               (:parent "MockStorage"
                                :type "void")
                                (reparse-symbol namespacesubparts) [13257 13339])
                            ("Setup" function
                               (:parent "MockStorage"
                                :arguments 
                                  ( ("mockMasterService" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("MockMasterService" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [13370 13413])
                                    ("mockWorkerService" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("MockWorkerService" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [13418 13461]))                                  
                                :type "void")
                                (reparse-symbol namespacesubparts) [13341 13703])
                            ("Reset" function
                               (:parent "MockStorage"
                                :type "void")
                                (reparse-symbol namespacesubparts) [13705 13787])
                            ("Reset" function
                               (:parent "MockStorage"
                                :arguments 
                                  ( ("mockMasterService" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("MockMasterService" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [13818 13861])
                                    ("mockWorkerService" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("MockWorkerService" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [13866 13909]))                                  
                                :type "void")
                                (reparse-symbol namespacesubparts) [13789 14086])
                            ("CreateNewMockMaster" function
                               (:parent "MockStorage"
                                :type "void")
                                (reparse-symbol namespacesubparts) [14088 14838])
                            ("CreateNewMockWorker" function
                               (:parent "MockStorage"
                                :type "void")
                                (reparse-symbol namespacesubparts) [14840 15590])
                            ("CrashWorker" function
                               (:parent "MockStorage"
                                :type "void")
                                (reparse-symbol namespacesubparts) [15592 15879])
                            ("RecoverWorker" function
                               (:parent "MockStorage"
                                :type "void")
                                (reparse-symbol namespacesubparts) [15881 16122])
                            ("CrashMaster" function
                               (:parent "MockStorage"
                                :type "void")
                                (reparse-symbol namespacesubparts) [16124 16321])
                            ("RecoverMaster" function
                               (:parent "MockStorage"
                                :type "void")
                                (reparse-symbol namespacesubparts) [16323 16511])
                            ("CleanUp" function
                               (:parent "MockStorage"
                                :type "void")
                                (reparse-symbol namespacesubparts) [16513 16690]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [2962 16693]))                  
                :type "namespace")
                nil [2943 16718]))          
      :file "mock_storage.cpp"
      :pointmax 16739
      :fsize 16738
      :lastmodtime '(21969 40241 36045 649000)
      :unmatched-syntax '((punctuation 2940 . 2941) (punctuation 2906 . 2907)))
    (semanticdb-table "mock_remote_fuxi_master.h"
      :file "mock_remote_fuxi_master.h"
      :fsize 1122
      :lastmodtime '(21954 59470 116036 408000))
    (semanticdb-table "mock_master_service_impl.h"
      :file "mock_master_service_impl.h"
      :fsize 1606
      :lastmodtime '(21954 59470 118036 32000))
    (semanticdb-table "mock_admin_client.h"
      :file "mock_admin_client.h"
      :fsize 1148
      :lastmodtime '(21963 30359 320040 916000)))
  :file "!apsarapangu!disk6!jingwen.hjw!work!trunk_cur!sqlonline!mock!sqlonline!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
