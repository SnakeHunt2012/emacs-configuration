;; Object unittest/
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "unittest/"
  :tables
  (list
    (semanticdb-table "SConscript"
      :major-mode 'python-mode
      :tags 
        '( ("Import" code nil nil [24 37])
            ("env" variable nil nil [38 53])
            ("env" code nil nil [56 112])
            ("ut_objs" variable nil nil [114 161])
            ("env" code nil nil [162 677])
            ("perf_objs" variable nil nil [678 727])
            ("env" code nil nil [728 1221])
            ("env" code nil nil [1223 1751])
            ("env" code nil nil [1753 1772])
            ("env" code nil nil [1773 1793])
            ("env" code nil nil [1794 1813])
            ("env" code nil nil [1814 1836])
            ("env" code nil nil [1837 1859])
            ("env" code nil nil [1860 1884]))          
      :file "SConscript"
      :pointmax 1885
      :fsize 1884
      :lastmodtime '(21969 35479 503041 887000)
      :unmatched-syntax nil)
    (semanticdb-table "unlimited_tablet_unittest.cpp"
      :major-mode 'c++-mode
      :tags 
        '( ("sqlonline/coreimpl/unlimited_tablet.h" include nil nil [1 49])
            ("sqlonline/core/storage_tablet.h" include nil nil [50 92])
            ("sqlonline/core/tablet_utils.h" include nil nil [93 133])
            ("sqlonline/client/unittest/client_test_util.h" include nil nil [134 189])
            ("sqlonline/testing/common/sqlonline_tablet_unittest_common.h" include nil nil [190 260])
            ("sqlonline/testing/common/store_mock.h" include nil nil [261 309])
            ("sqlonline/testing/common/utility.h" include nil nil [310 355])
            ("sqlonline/testing/common/random.h" include nil nil [356 400])
            ("sqlonline/common/sqlonline_immutable_attributes.h" include nil nil [401 461])
            ("sqlonline/common/sqlonline_comparator.h" include nil nil [462 512])
            ("apsara/common/unittest.h" include nil nil [513 548])
            ("apsara/common/foreach.h" include nil nil [549 583])
            ("algorithm" include (:system-flag t) nil [584 604])
            ("tr1/tuple" include (:system-flag t) nil [605 625])
            ("map" include (:system-flag t) nil [626 640])
            ("std" using (:type ("std" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [642 662])
            ("std::tr1" using (:type ("std::tr1" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [663 688])
            ("apsara" using (:type ("apsara" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [689 712])
            ("apsara::sqlonline" using (:type ("apsara::sqlonline" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [713 747])
            ("apsara::sqlonline::test" using (:type ("apsara::sqlonline::test" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [748 788])
            ("apsara::sqlonline::tabletutil" using (:type ("apsara::sqlonline::tabletutil" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [789 835])
            ("unnamed" type
               (:members 
                  ( ("BuildUnlimitedTablet" function
                       (:typemodifiers ("static")
                        :arguments 
                          ( ("pkMetas" variable
                               (:reference 1
                                :constant-flag t
                                :type ("vector" type
                                     (:template-specifier 
                                        ( ("ColumnMeta" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [901 935])
                            ("defCols" variable
                               (:reference 1
                                :constant-flag t
                                :type ("vector" type
                                     (:template-specifier 
                                        ( ("ColumnMeta" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [941 975])
                            ("lgMetas" variable
                               (:reference 1
                                :constant-flag t
                                :type ("vector" type
                                     (:template-specifier 
                                        ( ("LocalityGroupMeta" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [980 1021])
                            ("stores" variable
                               (:reference 1
                                :constant-flag t
                                :type ("StoreContainer::StoreVec" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [1026 1065]))                          
                        :type ("UnlimitedTabletPtr" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [849 1694])
                    ("BuildStores" function
                       (:pointer 1
                        :typemodifiers ("static")
                        :arguments 
                          ( ("lgMetas" variable
                               (:reference 1
                                :constant-flag t
                                :type ("std::vector" type
                                     (:template-specifier 
                                        ( ("LocalityGroupMeta" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [1731 1777]))                          
                        :type ("StoreContainer" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [1696 2065])
                    ("kSCValue" function
                       (:prototype-flag t
                        :type ("SQLVariant" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [2067 2091]))                  
                :type "namespace")
                nil [837 2094])
            ("BRACKET" variable (:constant-flag t) nil [2104 2111])
            ("apsara" type
               (:members 
                  ( ("sqlonline" type
                       (:members 
                          ( ("PK" type
                               (:members 
                                  ( ("sPK" variable
                                       (:typemodifiers ("static")
                                        :type ("vector" type
                                             (:template-specifier 
                                                ( ("string" type nil nil nil))                                                
                                              :type "class")
                                              nil nil))
                                        (reparse-symbol namespacesubparts) [2192 2218])
                                    ("Init" function (:type "void") (reparse-symbol namespacesubparts) [2219 2513])
                                    ("GetRandomString" function
                                       (:arguments 
                                          ( ("rnd" variable
                                               (:reference 1
                                                :type ("RandomBase" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [2538 2554]))                                          
                                        :type ("string" type (:type "class") nil nil))
                                        (reparse-symbol namespacesubparts) [2515 2629])
                                    ("GetRandomInteger" function
                                       (:arguments 
                                          ( ("rnd" variable
                                               (:reference 1
                                                :type ("RandomBase" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [2656 2672]))                                          
                                        :type ("int32_t" type (:type "class") nil nil))
                                        (reparse-symbol namespacesubparts) [2631 2810]))                                  
                                :type "namespace")
                                (reparse-symbol namespacesubparts) [2177 2813])
                            ("TestUnlimitedTablet" type
                               (:superclasses 
                                  ( ("UnitTestFixtureBase" type
                                       (:protection "public"
                                        :type "class")
                                        nil nil))                                  
                                :members 
                                  ( ("public" label nil (reparse-symbol classsubparts) [2898 2905])
                                    ("TestModify_InvalidPK" function
                                       (:prototype-flag t
                                        :type "void")
                                        (reparse-symbol classsubparts) [2910 2938])
                                    ("TestModify_PK" function
                                       (:prototype-flag t
                                        :type "void")
                                        (reparse-symbol classsubparts) [2943 2964])
                                    ("TestModify_RowCondition" function
                                       (:prototype-flag t
                                        :type "void")
                                        (reparse-symbol classsubparts) [2969 3000])
                                    ("TestModify_AT_REPLACE" function
                                       (:prototype-flag t
                                        :type "void")
                                        (reparse-symbol classsubparts) [3005 3034])
                                    ("TestModify_AT_UPDATE" function
                                       (:prototype-flag t
                                        :type "void")
                                        (reparse-symbol classsubparts) [3039 3067])
                                    ("TestModify_AT_DELETE" function
                                       (:prototype-flag t
                                        :type "void")
                                        (reparse-symbol classsubparts) [3072 3100])
                                    ("TestModify_InvalidColumnName" function
                                       (:prototype-flag t
                                        :type "void")
                                        (reparse-symbol classsubparts) [3105 3141])
                                    ("TestModify_ColumnNameAndVaryTypeAttributes" function
                                       (:prototype-flag t
                                        :type "void")
                                        (reparse-symbol classsubparts) [3146 3196])
                                    ("TestReadRow" function
                                       (:prototype-flag t
                                        :type "void")
                                        (reparse-symbol classsubparts) [3201 3220])
                                    ("TestReadAttributes_TestInvalidPK" function
                                       (:prototype-flag t
                                        :type "void")
                                        (reparse-symbol classsubparts) [3225 3265])
                                    ("TestReadAttributes_TestInvalidColumnName" function
                                       (:prototype-flag t
                                        :type "void")
                                        (reparse-symbol classsubparts) [3270 3318])
                                    ("TestReadAttributes_TestReadExcludePK" function
                                       (:prototype-flag t
                                        :type "void")
                                        (reparse-symbol classsubparts) [3323 3367])
                                    ("TestReadAttributes_TestReadIncludePK" function
                                       (:prototype-flag t
                                        :type "void")
                                        (reparse-symbol classsubparts) [3372 3416])
                                    ("TestReadAttributes_ReadAllCols" function
                                       (:prototype-flag t
                                        :type "void")
                                        (reparse-symbol classsubparts) [3421 3459])
                                    ("TestRangeRead_TestScan" function
                                       (:prototype-flag t
                                        :type "void")
                                        (reparse-symbol classsubparts) [3464 3494])
                                    ("TestRangeRead_TestReadIncludePK" function
                                       (:prototype-flag t
                                        :type "void")
                                        (reparse-symbol classsubparts) [3499 3538])
                                    ("TestRangeRead_TestReadExcludePK" function
                                       (:prototype-flag t
                                        :type "void")
                                        (reparse-symbol classsubparts) [3543 3582])
                                    ("TestRangeRead_TestScanSizeHandler" function
                                       (:prototype-flag t
                                        :type "void")
                                        (reparse-symbol classsubparts) [3587 3628])
                                    ("TestFailinjection" function
                                       (:prototype-flag t
                                        :type "void")
                                        (reparse-symbol classsubparts) [3633 3658])
                                    ("TestOperation_SpecialColumnName" function
                                       (:prototype-flag t
                                        :type "void")
                                        (reparse-symbol classsubparts) [3663 3702])
                                    ("APSARA_UNIT_TEST_CASE" function
                                       (:prototype-flag t
                                        :arguments 
                                          ( ("" variable (:type ("TestModify_InvalidPK" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3730 3751]))                                          
                                        :type "int")
                                        (reparse-symbol classsubparts) [3708 3755])
                                    ("APSARA_UNIT_TEST_CASE" function
                                       (:prototype-flag t
                                        :arguments 
                                          ( ("" variable (:type ("TestModify_PK" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3782 3796]))                                          
                                        :type "int")
                                        (reparse-symbol classsubparts) [3760 3800])
                                    ("APSARA_UNIT_TEST_CASE" function
                                       (:prototype-flag t
                                        :arguments 
                                          ( ("" variable (:type ("TestModify_RowCondition" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3827 3851]))                                          
                                        :type "int")
                                        (reparse-symbol classsubparts) [3805 3855])
                                    ("APSARA_UNIT_TEST_CASE" function
                                       (:prototype-flag t
                                        :arguments 
                                          ( ("" variable (:type ("TestModify_AT_REPLACE" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3882 3904]))                                          
                                        :type "int")
                                        (reparse-symbol classsubparts) [3860 3908])
                                    ("APSARA_UNIT_TEST_CASE" function
                                       (:prototype-flag t
                                        :arguments 
                                          ( ("" variable (:type ("TestModify_AT_UPDATE" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3935 3956]))                                          
                                        :type "int")
                                        (reparse-symbol classsubparts) [3913 3960])
                                    ("APSARA_UNIT_TEST_CASE" function
                                       (:prototype-flag t
                                        :arguments 
                                          ( ("" variable (:type ("TestModify_AT_DELETE" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3987 4008]))                                          
                                        :type "int")
                                        (reparse-symbol classsubparts) [3965 4012])
                                    ("APSARA_UNIT_TEST_CASE" function
                                       (:prototype-flag t
                                        :arguments 
                                          ( ("" variable (:type ("TestModify_InvalidColumnName" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4039 4068]))                                          
                                        :type "int")
                                        (reparse-symbol classsubparts) [4017 4072])
                                    ("APSARA_UNIT_TEST_CASE" function
                                       (:prototype-flag t
                                        :arguments 
                                          ( ("" variable (:type ("TestModify_ColumnNameAndVaryTypeAttributes" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4099 4142]))                                          
                                        :type "int")
                                        (reparse-symbol classsubparts) [4077 4146])
                                    ("APSARA_UNIT_TEST_CASE" function
                                       (:prototype-flag t
                                        :arguments 
                                          ( ("" variable (:type ("TestReadRow" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4173 4185]))                                          
                                        :type "int")
                                        (reparse-symbol classsubparts) [4151 4189])
                                    ("APSARA_UNIT_TEST_CASE" function
                                       (:prototype-flag t
                                        :arguments 
                                          ( ("" variable (:type ("TestReadAttributes_TestInvalidPK" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4216 4249]))                                          
                                        :type "int")
                                        (reparse-symbol classsubparts) [4194 4253])
                                    ("APSARA_UNIT_TEST_CASE" function
                                       (:prototype-flag t
                                        :arguments 
                                          ( ("" variable (:type ("TestReadAttributes_TestInvalidColumnName" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4280 4321]))                                          
                                        :type "int")
                                        (reparse-symbol classsubparts) [4258 4325])
                                    ("APSARA_UNIT_TEST_CASE" function
                                       (:prototype-flag t
                                        :arguments 
                                          ( ("" variable (:type ("TestReadAttributes_TestReadExcludePK" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4352 4389]))                                          
                                        :type "int")
                                        (reparse-symbol classsubparts) [4330 4393])
                                    ("APSARA_UNIT_TEST_CASE" function
                                       (:prototype-flag t
                                        :arguments 
                                          ( ("" variable (:type ("TestReadAttributes_TestReadIncludePK" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4420 4457]))                                          
                                        :type "int")
                                        (reparse-symbol classsubparts) [4398 4461])
                                    ("APSARA_UNIT_TEST_CASE" function
                                       (:prototype-flag t
                                        :arguments 
                                          ( ("" variable (:type ("TestReadAttributes_ReadAllCols" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4488 4519]))                                          
                                        :type "int")
                                        (reparse-symbol classsubparts) [4466 4523])
                                    ("APSARA_UNIT_TEST_CASE" function
                                       (:prototype-flag t
                                        :arguments 
                                          ( ("" variable (:type ("TestRangeRead_TestScan" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4550 4573]))                                          
                                        :type "int")
                                        (reparse-symbol classsubparts) [4528 4577])
                                    ("APSARA_UNIT_TEST_CASE" function
                                       (:prototype-flag t
                                        :arguments 
                                          ( ("" variable (:type ("TestRangeRead_TestReadIncludePK" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4604 4636]))                                          
                                        :type "int")
                                        (reparse-symbol classsubparts) [4582 4640])
                                    ("APSARA_UNIT_TEST_CASE" function
                                       (:prototype-flag t
                                        :arguments 
                                          ( ("" variable (:type ("TestRangeRead_TestReadExcludePK" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4667 4699]))                                          
                                        :type "int")
                                        (reparse-symbol classsubparts) [4645 4703])
                                    ("APSARA_UNIT_TEST_CASE" function
                                       (:prototype-flag t
                                        :arguments 
                                          ( ("" variable (:type ("TestRangeRead_TestScanSizeHandler" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4730 4764]))                                          
                                        :type "int")
                                        (reparse-symbol classsubparts) [4708 4768])
                                    ("APSARA_UNIT_TEST_CASE" function
                                       (:prototype-flag t
                                        :arguments 
                                          ( ("" variable (:type ("TestFailinjection" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4795 4813]))                                          
                                        :type "int")
                                        (reparse-symbol classsubparts) [4773 4817])
                                    ("APSARA_UNIT_TEST_CASE" function
                                       (:prototype-flag t
                                        :arguments 
                                          ( ("" variable (:type ("TestOperation_SpecialColumnName" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4844 4876]))                                          
                                        :type "int")
                                        (reparse-symbol classsubparts) [4822 4880])
                                    ("Setup" function (:type "void") (reparse-symbol classsubparts) [4900 4944])
                                    ("private" label nil (reparse-symbol classsubparts) [4946 4954])
                                    ("Find" function
                                       (:arguments 
                                          ( ("cols" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("CorrectColumnArray" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [4971 5002])
                                            ("colName" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("std::string" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [5003 5030])
                                            ("desc" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("std::string" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [5031 5055]))                                          
                                        :type ("size_t" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [4959 5343])
                                    ("VerifyRows" function
                                       (:arguments 
                                          ( ("rows" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("vector" type
                                                     (:template-specifier 
                                                        ( ("CorrectRow" type nil nil nil))                                                        
                                                      :type "class")
                                                      nil nil))
                                                (reparse-symbol arg-sub-list) [5374 5405])
                                            ("nextKey" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("std::string" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [5406 5433])
                                            ("iter" variable
                                               (:pointer 1
                                                :type ("ITabletColumnIterator" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [5442 5470])
                                            ("desc" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("string" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [5471 5490]))                                          
                                        :type "void")
                                        (reparse-symbol classsubparts) [5349 8266])
                                    ("VerifySingleRow" function
                                       (:arguments 
                                          ( ("row" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("CorrectRow" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [8295 8317])
                                            ("iter" variable
                                               (:pointer 1
                                                :type ("ITabletColumnIterator" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [8318 8346])
                                            ("desc" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("string" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [8347 8366]))                                          
                                        :type "void")
                                        (reparse-symbol classsubparts) [8274 8483]))                                  
                                :type "class")
                                (reparse-symbol namespacesubparts) [2820 8486])
                            ("TestModify_InvalidPK" function
                               (:parent "TestUnlimitedTablet"
                                :type "void")
                                (reparse-symbol namespacesubparts) [8488 11759])
                            ("TestModify_PK" function
                               (:parent "TestUnlimitedTablet"
                                :type "void")
                                (reparse-symbol namespacesubparts) [11763 13909])
                            ("VERIFY_SC" variable (:constant-flag t) (reparse-symbol namespacesubparts) [13919 13928])
                            ("TestModify_RowCondition" function
                               (:parent "TestUnlimitedTablet"
                                :type "void")
                                (reparse-symbol namespacesubparts) [14214 26206])
                            ("TestModify_AT_REPLACE" function
                               (:parent "TestUnlimitedTablet"
                                :type "void")
                                (reparse-symbol namespacesubparts) [26208 27476])
                            ("TestModify_AT_UPDATE" function
                               (:parent "TestUnlimitedTablet"
                                :type "void")
                                (reparse-symbol namespacesubparts) [27478 30356])
                            ("TestModify_AT_DELETE" function
                               (:parent "TestUnlimitedTablet"
                                :type "void")
                                (reparse-symbol namespacesubparts) [30358 32516])
                            ("TestModify_InvalidColumnName" function
                               (:parent "TestUnlimitedTablet"
                                :type "void")
                                (reparse-symbol namespacesubparts) [32518 34595])
                            ("TestModify_ColumnNameAndVaryTypeAttributes" function
                               (:parent "TestUnlimitedTablet"
                                :type "void")
                                (reparse-symbol namespacesubparts) [34597 37748])
                            ("unnamed" type
                               (:members 
                                  ( ("AddOne" function
                                       (:arguments 
                                          ( ("ano" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("string" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [37776 37794]))                                          
                                        :type ("string" type (:type "class") nil nil))
                                        (reparse-symbol namespacesubparts) [37762 38187]))                                  
                                :type "namespace")
                                (reparse-symbol namespacesubparts) [37750 38189])
                            ("TestReadRow" function
                               (:parent "TestUnlimitedTablet"
                                :type "void")
                                (reparse-symbol namespacesubparts) [38209 40646])
                            ("TestReadAttributes_TestInvalidPK" function
                               (:parent "TestUnlimitedTablet"
                                :type "void")
                                (reparse-symbol namespacesubparts) [40648 43043])
                            ("TestReadAttributes_TestInvalidColumnName" function
                               (:parent "TestUnlimitedTablet"
                                :type "void")
                                (reparse-symbol namespacesubparts) [43045 44693])
                            ("TestReadAttributes_TestReadExcludePK" function
                               (:parent "TestUnlimitedTablet"
                                :type "void")
                                (reparse-symbol namespacesubparts) [44695 50098])
                            ("TestReadAttributes_TestReadIncludePK" function
                               (:parent "TestUnlimitedTablet"
                                :type "void")
                                (reparse-symbol namespacesubparts) [50100 53866])
                            ("TestReadAttributes_ReadAllCols" function
                               (:parent "TestUnlimitedTablet"
                                :type "void")
                                (reparse-symbol namespacesubparts) [53868 55567])
                            ("TestRangeRead_TestScan" function
                               (:parent "TestUnlimitedTablet"
                                :type "void")
                                (reparse-symbol namespacesubparts) [55569 61700])
                            ("TestRangeRead_TestReadIncludePK" function
                               (:parent "TestUnlimitedTablet"
                                :type "void")
                                (reparse-symbol namespacesubparts) [61702 68269])
                            ("TestRangeRead_TestReadExcludePK" function
                               (:parent "TestUnlimitedTablet"
                                :type "void")
                                (reparse-symbol namespacesubparts) [68271 77096])
                            ("TestRangeRead_TestScanSizeHandler" function
                               (:parent "TestUnlimitedTablet"
                                :type "void")
                                (reparse-symbol namespacesubparts) [77098 81760])
                            ("unnamed" type
                               (:members 
                                  ( ("AppendEncodedSQLVariant" function
                                       (:arguments 
                                          ( ("" variable (:type ("google::protobuf::RepeatedPtrField" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [81811 81846])
                                            ("" variable (:type ("apsara::sqlonline::PBCell" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [81849 81876])
                                            ("" variable (:type ("pbcells" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [81878 81886])
                                            ("name" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("string" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [81891 81910])
                                            ("encodedSQLVariant" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("string" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [81915 81947]))                                          
                                        :type "void")
                                        (reparse-symbol namespacesubparts) [81775 82052])
                                    ("RandEncoded_String" function
                                       (:arguments 
                                          ( ("rnd" variable
                                               (:reference 1
                                                :type ("RandomBase" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [82080 82096])
                                            ("isPK" variable
                                               (:default-value "false"
                                                :type "bool")
                                                (reparse-symbol arg-sub-list) [82097 82114]))                                          
                                        :type ("string" type (:type "class") nil nil))
                                        (reparse-symbol namespacesubparts) [82054 82345])
                                    ("RandEncoded_Integer" function
                                       (:arguments 
                                          ( ("rnd" variable
                                               (:reference 1
                                                :type ("RandomBase" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [82374 82390])
                                            ("isPK" variable
                                               (:default-value "false"
                                                :type "bool")
                                                (reparse-symbol arg-sub-list) [82391 82408]))                                          
                                        :type ("string" type (:type "class") nil nil))
                                        (reparse-symbol namespacesubparts) [82347 82561])
                                    ("RandEncoded_Double" function
                                       (:arguments 
                                          ( ("rnd" variable
                                               (:reference 1
                                                :type ("RandomBase" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [82589 82605]))                                          
                                        :type ("string" type (:type "class") nil nil))
                                        (reparse-symbol namespacesubparts) [82563 82673])
                                    ("RandEncoded_Boolean" function
                                       (:arguments 
                                          ( ("rnd" variable
                                               (:reference 1
                                                :type ("RandomBase" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [82702 82718]))                                          
                                        :type ("string" type (:type "class") nil nil))
                                        (reparse-symbol namespacesubparts) [82675 82784])
                                    ("ToString" function
                                       (:arguments 
                                          ( ("row" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("PBRowV2" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [82802 82821]))                                          
                                        :type ("string" type (:type "class") nil nil))
                                        (reparse-symbol namespacesubparts) [82786 83183])
                                    ("sLogger" variable
                                       (:pointer 1
                                        :typemodifiers ("static")
                                        :default-value "logging::GetLogger(\"/apsara/sqlonline/unlimited_tablet_unittest\")"
                                        :type ("logging::Logger" type (:type "class") nil nil))
                                        (reparse-symbol namespacesubparts) [83185 83285])
                                    ("BuildPBRowV2" function
                                       (:arguments 
                                          ( ("rnd" variable
                                               (:reference 1
                                                :type ("RandomBase" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [83305 83321])
                                            ("row" variable
                                               (:pointer 1
                                                :type ("PBRowV2" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [83322 83335])
                                            ("at" variable (:type ("ModifyRowActionType" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [83336 83359]))                                          
                                        :type "void")
                                        (reparse-symbol namespacesubparts) [83287 88785])
                                    ("BuildRandomPK" function
                                       (:arguments 
                                          ( ("rnd" variable
                                               (:reference 1
                                                :type ("RandomBase" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [88808 88824]))                                          
                                        :type ("string" type (:type "class") nil nil))
                                        (reparse-symbol namespacesubparts) [88787 89837])
                                    ("ReadType" type
                                       (:members 
                                          ( ("RT_READ_ATTR" variable
                                               (:constant-flag t
                                                :default-value (89874 89875)
                                                :type "int")
                                                (reparse-symbol enumsubparts) [89859 89875])
                                            ("RT_READRANGE" variable
                                               (:constant-flag t
                                                :default-value (89896 89897)
                                                :type "int")
                                                (reparse-symbol enumsubparts) [89881 89897])
                                            ("RT_READRANGE_REVERSE" variable
                                               (:constant-flag t
                                                :default-value (89926 89927)
                                                :type "int")
                                                (reparse-symbol enumsubparts) [89903 89927]))                                          
                                        :type "enum")
                                        (reparse-symbol namespacesubparts) [89839 89930])
                                    ("ToString" function
                                       (:arguments 
                                          ( ("r" variable (:type ("ReadType" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [89948 89959]))                                          
                                        :type ("string" type (:type "class") nil nil))
                                        (reparse-symbol namespacesubparts) [89932 90089])
                                    ("BuildRandomColumnNames" function
                                       (:arguments 
                                          ( ("rnd" variable
                                               (:reference 1
                                                :type ("RandomBase" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [90129 90145]))                                          
                                        :type ("vector" type
                                             (:template-specifier 
                                                ( ("string" type nil nil nil))                                                
                                              :type "class")
                                              nil nil))
                                        (reparse-symbol namespacesubparts) [90091 90972])
                                    ("BuildErrorInjectedStores" function
                                       (:pointer 1
                                        :arguments 
                                          ( ("rnd" variable
                                               (:pointer 1
                                                :type ("RandomBase" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [91020 91036])
                                            ("lgMetas" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("std::vector" type
                                                     (:template-specifier 
                                                        ( ("LocalityGroupMeta" type nil nil nil))                                                        
                                                      :type "class")
                                                      nil nil))
                                                (reparse-symbol arg-sub-list) [91037 91083]))                                          
                                        :type ("StoreContainer" type (:type "class") nil nil))
                                        (reparse-symbol namespacesubparts) [90974 91496]))                                  
                                :type "namespace")
                                (reparse-symbol namespacesubparts) [81762 91499])
                            ("TestFailinjection" function
                               (:parent "TestUnlimitedTablet"
                                :type "void")
                                (reparse-symbol namespacesubparts) [91566 100233])
                            ("unnamed" type
                               (:members 
                                  ( ("GenerateSpecialColumnName" function
                                       (:arguments 
                                          ( ("vec" variable
                                               (:pointer 1
                                                :type ("vector" type
                                                     (:template-specifier 
                                                        ( ("string" type nil nil nil))                                                        
                                                      :type "class")
                                                      nil nil))
                                                (reparse-symbol arg-sub-list) [100278 100298]))                                          
                                        :type "void")
                                        (reparse-symbol namespacesubparts) [100247 100776]))                                  
                                :type "namespace")
                                (reparse-symbol namespacesubparts) [100235 100778])
                            ("TestOperation_SpecialColumnName" function
                               (:parent "TestUnlimitedTablet"
                                :type "void")
                                (reparse-symbol namespacesubparts) [100780 102691])
                            ("APSARA_UNIT_TEST_FIXTURE" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("" variable (:type ("TestUnlimitedTablet" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [102717 102737]))                                  
                                :type "int")
                                (reparse-symbol namespacesubparts) [102692 102738]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [2154 102741]))                  
                :type "namespace")
                nil [2134 102763]))          
      :file "unlimited_tablet_unittest.cpp"
      :pointmax 102783
      :fsize 102782
      :lastmodtime '(21968 27940 843065 368000)
      :unmatched-syntax '((punctuation 81876 . 81877) (punctuation 81875 . 81876) (punctuation 81848 . 81849) (punctuation 81847 . 81848) (punctuation 81845 . 81846) (punctuation 81810 . 81811) (punctuation 81809 . 81810) (number 4877 . 4878) (number 4814 . 4815) (number 4765 . 4766) (number 4700 . 4701) (number 4637 . 4638) (number 4574 . 4575) (number 4520 . 4521) (number 4458 . 4459) (number 4390 . 4391) (number 4322 . 4323) (number 4250 . 4251) (number 4186 . 4187) (number 4143 . 4144) (number 4069 . 4070) (number 4009 . 4010) (number 3957 . 3958) (number 3905 . 3906) (number 3852 . 3853) (number 3797 . 3798) (number 3752 . 3753) (string 2087 . 2089) (string 2087 . 2089))
      :lexical-table 
        '(("BRACKET" (spp-arg-list ("x") 2111 . 2114) . ((semantic-list "(\"[\" + (x) + \"]\")" 2115 . 2132)))
          ("VERIFY_SC" (spp-arg-list ("txn" "store" "pk") 13928 . 13944) . 
              ((DO "do" 13951 . 13953) (semantic-list "{ \\
        tuple<bool, SQLVariant> v = txn->FindCell(store, pk, SYSTEM_COLUMN_NAME); \\
        APSARA_TEST_EQUAL(get<0>(v), true); \\
        if (get<0>(v)) { \\
            APSARA_TEST_EQUAL(get<1>(v), SQLVariant(kSCValue)); \\
        } \\
    }" 13954 . 14198) (WHILE "while" 14199 . 14204) (semantic-list "(false)" 14205 . 14212)))
          )
)
    (semanticdb-table "sqlonline_manifest_store_unittest.cpp"
      :major-mode 'c++-mode
      :tags 
        '( ("sqlonline/common/sqlonline_manifest_store.h" include nil nil [365 419])
            ("sqlonline/testing/common/utility.h" include nil nil [420 465])
            ("sqlonline/common/slice.h" include nil nil [466 501])
            ("sqlonline/common/sqlonline_macro.h" include nil nil [502 547])
            ("sqlonline/common/public_error.h" include nil nil [548 590])
            ("sqlonline/common/common.h" include nil nil [591 627])
            ("apsara/pangu.h" include nil nil [628 653])
            ("apsara/common/random_generator.h" include nil nil [655 698])
            ("apsara/common/random.h" include nil nil [699 732])
            ("apsara/common/unittest.h" include nil nil [734 769])
            ("apsara/common/jsonizable.h" include nil nil [770 807])
            ("sqlonline/common/sqlonline_logging.h" include nil nil [808 855])
            ("string" include (:system-flag t) nil [856 873])
            ("std" using (:type ("std" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [875 895])
            ("std::tr1" using (:type ("std::tr1" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [896 921])
            ("apsara" using (:type ("apsara" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [922 945])
            ("sLogger" variable
               (:pointer 1
                :typemodifiers ("static")
                :default-value "logging::GetLogger(\"/apsara/sqlonline/testing/unittest/ManifestStoreV1UnitTest\")"
                :type ("logging::Logger" type (:type "class") nil nil))
                nil [947 1067])
            ("DECLARE_FLAG_BOOL" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("sqlonline_PanguFileSystemFailInjection" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1087 1126]))                  
                :type "int")
                nil [1069 1127])
            ("DECLARE_FLAG_BOOL" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("sqlonline_NormalFileWriteFailInjection" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1146 1185]))                  
                :type "int")
                nil [1128 1186])
            ("DECLARE_FLAG_INT32" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("sqlonline_FailInjectionProbability" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1206 1241]))                  
                :type "int")
                nil [1187 1242])
            ("DECLARE_FLAG_INT32" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("pangu_mock_OutputStreamExceptionProbability" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1262 1306]))                  
                :type "int")
                nil [1243 1307])
            ("DECLARE_FLAG_INT32" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("pangu_mock_InputStreamExceptionProbability" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1327 1370]))                  
                :type "int")
                nil [1308 1371])
            ("apsara" type
               (:members 
                  ( ("sqlonline" type
                       (:members 
                          ( ("unnamed" type
                               (:members 
                                  ( ("kNameSeparator" variable
                                       (:pointer 1
                                        :typemodifiers ("static")
                                        :constant-flag t
                                        :default-value "\".\""
                                        :type "char")
                                        (reparse-symbol namespacesubparts) [1428 1468])
                                    ("Manifest4UT" type
                                       (:superclasses 
                                          ( ("Jsonizable" type
                                               (:protection "public"
                                                :type "class")
                                                nil nil))                                          
                                        :members 
                                          ( ("public" label nil (reparse-symbol classsubparts) [1510 1517])
                                            ("Jsonize" function
                                               (:arguments 
                                                  ( ("json" variable
                                                       (:reference 1
                                                        :type ("JsonWrapper" type (:type "class") nil nil))
                                                        (reparse-symbol arg-sub-list) [1535 1553]))                                                  
                                                :type "void")
                                                (reparse-symbol classsubparts) [1522 1651])
                                            ("mVersion" variable (:type ("uint32_t" type (:type "class") nil nil)) (reparse-symbol classsubparts) [1661 1679])
                                            ("mContent" variable (:type ("string" type (:type "class") nil nil)) (reparse-symbol classsubparts) [1684 1700]))                                          
                                        :type "struct")
                                        (reparse-symbol namespacesubparts) [1469 1703])
                                    ("GetSeqNumberFromFileName" function
                                       (:arguments 
                                          ( ("fileName" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("string" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [1738 1761]))                                          
                                        :type ("int64_t" type (:type "class") nil nil))
                                        (reparse-symbol namespacesubparts) [1705 2086]))                                  
                                :type "namespace")
                                (reparse-symbol namespacesubparts) [1415 2089])
                            ("ManifestStoreV1UnitTest" type
                               (:superclasses 
                                  ( ("UnitTestFixtureBase" type
                                       (:protection "public"
                                        :type "class")
                                        nil nil))                                  
                                :members 
                                  ( ("public" label nil (reparse-symbol classsubparts) [2175 2182])
                                    ("APSARA_UNIT_TEST_CASE" function
                                       (:prototype-flag t
                                        :arguments 
                                          ( ("" variable (:type ("TestStoreAndLoad" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2273 2290]))                                          
                                        :type "int")
                                        (reparse-symbol classsubparts) [2251 2294])
                                    ("APSARA_UNIT_TEST_CASE" function
                                       (:prototype-flag t
                                        :arguments 
                                          ( ("" variable (:type ("TestStoreAndLoadWithEmptyFiles" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2453 2484]))                                          
                                        :type "int")
                                        (reparse-symbol classsubparts) [2431 2488])
                                    ("APSARA_UNIT_TEST_CASE" function
                                       (:prototype-flag t
                                        :arguments 
                                          ( ("" variable (:type ("TestMultiStoreAndLoad" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2586 2608]))                                          
                                        :type "int")
                                        (reparse-symbol classsubparts) [2564 2612])
                                    ("APSARA_UNIT_TEST_CASE" function
                                       (:prototype-flag t
                                        :arguments 
                                          ( ("" variable (:type ("TestEmptyFileAndLoad" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2755 2776]))                                          
                                        :type "int")
                                        (reparse-symbol classsubparts) [2733 2780])
                                    ("APSARA_UNIT_TEST_CASE" function
                                       (:prototype-flag t
                                        :arguments 
                                          ( ("" variable (:type ("TestSwitchFile" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2925 2940]))                                          
                                        :type "int")
                                        (reparse-symbol classsubparts) [2903 2944])
                                    ("APSARA_UNIT_TEST_CASE" function
                                       (:prototype-flag t
                                        :arguments 
                                          ( ("" variable (:type ("TestStoreWithDifferentSize" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3140 3167]))                                          
                                        :type "int")
                                        (reparse-symbol classsubparts) [3118 3171])
                                    ("APSARA_UNIT_TEST_CASE" function
                                       (:prototype-flag t
                                        :arguments 
                                          ( ("" variable (:type ("TestLargeManifestFileAndGC" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3418 3445]))                                          
                                        :type "int")
                                        (reparse-symbol classsubparts) [3396 3449])
                                    ("APSARA_UNIT_TEST_CASE" function
                                       (:prototype-flag t
                                        :arguments 
                                          ( ("" variable (:type ("TestLoadEmptyDir" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3585 3602]))                                          
                                        :type "int")
                                        (reparse-symbol classsubparts) [3563 3606])
                                    ("APSARA_UNIT_TEST_CASE" function
                                       (:prototype-flag t
                                        :arguments 
                                          ( ("" variable (:type ("TestFailoverStoreAndLoad" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3921 3946]))                                          
                                        :type "int")
                                        (reparse-symbol classsubparts) [3899 3950])
                                    ("APSARA_UNIT_TEST_CASE" function
                                       (:prototype-flag t
                                        :arguments 
                                          ( ("" variable (:type ("TestChecksum" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3978 3991]))                                          
                                        :type "int")
                                        (reparse-symbol classsubparts) [3956 3995])
                                    ("APSARA_UNIT_TEST_CASE" function
                                       (:prototype-flag t
                                        :arguments 
                                          ( ("" variable (:type ("TestIllegalOptions" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4023 4042]))                                          
                                        :type "int")
                                        (reparse-symbol classsubparts) [4001 4046])
                                    ("Setup" function
                                       (:typemodifiers ("virtual")
                                        :type "void")
                                        (reparse-symbol classsubparts) [4068 4557])
                                    ("TestStoreAndLoad" function
                                       (:prototype-flag t
                                        :type "void")
                                        (reparse-symbol classsubparts) [4563 4587])
                                    ("TestStoreAndLoadWithEmptyFiles" function
                                       (:prototype-flag t
                                        :type "void")
                                        (reparse-symbol classsubparts) [4592 4630])
                                    ("TestMultiStoreAndLoad" function
                                       (:prototype-flag t
                                        :type "void")
                                        (reparse-symbol classsubparts) [4635 4664])
                                    ("TestEmptyFileAndLoad" function
                                       (:prototype-flag t
                                        :type "void")
                                        (reparse-symbol classsubparts) [4669 4697])
                                    ("TestSwitchFile" function
                                       (:prototype-flag t
                                        :type "void")
                                        (reparse-symbol classsubparts) [4702 4724])
                                    ("TestStoreWithDifferentSize" function
                                       (:prototype-flag t
                                        :type "void")
                                        (reparse-symbol classsubparts) [4729 4763])
                                    ("TestLargeManifestFileAndGC" function
                                       (:prototype-flag t
                                        :type "void")
                                        (reparse-symbol classsubparts) [4768 4802])
                                    ("TestLoadEmptyDir" function
                                       (:prototype-flag t
                                        :type "void")
                                        (reparse-symbol classsubparts) [4807 4831])
                                    ("TestFailoverStoreAndLoad" function
                                       (:prototype-flag t
                                        :type "void")
                                        (reparse-symbol classsubparts) [4836 4868])
                                    ("TestChecksum" function
                                       (:prototype-flag t
                                        :type "void")
                                        (reparse-symbol classsubparts) [4873 4893])
                                    ("TestIllegalOptions" function
                                       (:prototype-flag t
                                        :type "void")
                                        (reparse-symbol classsubparts) [4898 4924])
                                    ("private" label nil (reparse-symbol classsubparts) [4926 4934])
                                    ("StoreManifest" function
                                       (:prototype-flag t
                                        :arguments 
                                          ( ("mfStorePtr" variable
                                               (:pointer 1
                                                :type ("IManifestStore" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [4958 4985])
                                            ("mf" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("Manifest4UT" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [4986 5008]))                                          
                                        :type "void")
                                        (reparse-symbol classsubparts) [4939 5009])
                                    ("LoadManifest" function
                                       (:prototype-flag t
                                        :arguments 
                                          ( ("mfStorePtr" variable
                                               (:pointer 1
                                                :type ("IManifestStore" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [5032 5059])
                                            ("pMf" variable
                                               (:pointer 1
                                                :type ("Manifest4UT" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [5060 5077]))                                          
                                        :type "void")
                                        (reparse-symbol classsubparts) [5014 5078])
                                    ("CheckFailoverData" function
                                       (:prototype-flag t
                                        :arguments 
                                          ( ("opts" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("ManifestStoreOptions" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [5118 5151])
                                            ("mf4Basic" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("Manifest4UT" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [5164 5192])
                                            ("mf4Failover" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("Manifest4UT" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [5206 5237]))                                          
                                        :type "int")
                                        (reparse-symbol classsubparts) [5083 5238])
                                    ("SetRandomFailoverEnv" function (:type "void") (reparse-symbol classsubparts) [5243 6077])
                                    ("CreateFile" function
                                       (:arguments 
                                          ( ("path" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("string" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [6099 6118]))                                          
                                        :type "void")
                                        (reparse-symbol classsubparts) [6083 6670])
                                    ("DeleteFile" function
                                       (:arguments 
                                          ( ("path" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("string" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [6692 6711]))                                          
                                        :type "void")
                                        (reparse-symbol classsubparts) [6676 7255])
                                    ("ListDirectory" function
                                       (:arguments 
                                          ( ("dir" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("string" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [7280 7298])
                                            ("files" variable
                                               (:pointer 1
                                                :type ("vector" type
                                                     (:template-specifier 
                                                        ( ("string" type nil nil nil))                                                        
                                                      :type "class")
                                                      nil nil))
                                                (reparse-symbol arg-sub-list) [7299 7321]))                                          
                                        :type "void")
                                        (reparse-symbol classsubparts) [7261 8886])
                                    ("InjectEmptyManifestFiles" function
                                       (:arguments 
                                          ( ("numFile" variable
                                               (:default-value "0"
                                                :type ("int32_t" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [8922 8941]))                                          
                                        :type "void")
                                        (reparse-symbol classsubparts) [8892 9838])
                                    ("private" label nil (reparse-symbol classsubparts) [9840 9848])
                                    ("mOptions" variable (:type ("ManifestStoreOptions" type (:type "class") nil nil)) (reparse-symbol classsubparts) [9853 9883])
                                    ("mFailProbability" variable (:type ("int32_t" type (:type "class") nil nil)) (reparse-symbol classsubparts) [9888 9913])
                                    ("mRand" variable (:type ("DefaultRandom" type (:type "class") nil nil)) (reparse-symbol classsubparts) [9918 9938]))                                  
                                :type "class")
                                (reparse-symbol namespacesubparts) [2090 9941])
                            ("APSARA_UNIT_TEST_FIXTURE" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("" variable (:type ("ManifestStoreV1UnitTest" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9968 9992]))                                  
                                :type "int")
                                (reparse-symbol namespacesubparts) [9943 9993])
                            ("GetRandomManifest" function
                               (:typemodifiers ("static")
                                :arguments 
                                  ( ("len" variable (:type ("uint64_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [10032 10045]))                                  
                                :type ("Manifest4UT" type (:type "class") nil nil))
                                (reparse-symbol namespacesubparts) [9995 10289])
                            ("StoreManifest" function
                               (:parent "ManifestStoreV1UnitTest"
                                :arguments 
                                  ( ("mfStorePtr" variable
                                       (:pointer 1
                                        :type ("IManifestStore" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [10335 10362])
                                    ("mf" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("Manifest4UT" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [10363 10385]))                                  
                                :type "void")
                                (reparse-symbol namespacesubparts) [10291 10508])
                            ("LoadManifest" function
                               (:parent "ManifestStoreV1UnitTest"
                                :arguments 
                                  ( ("mfStorePtr" variable
                                       (:pointer 1
                                        :type ("IManifestStore" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [10553 10580])
                                    ("pMf" variable
                                       (:pointer 1
                                        :type ("Manifest4UT" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [10581 10598]))                                  
                                :type "void")
                                (reparse-symbol namespacesubparts) [10510 10681])
                            ("TestStoreAndLoad" function
                               (:parent "ManifestStoreV1UnitTest"
                                :type "void")
                                (reparse-symbol namespacesubparts) [10683 11824])
                            ("TestStoreAndLoadWithEmptyFiles" function
                               (:parent "ManifestStoreV1UnitTest"
                                :type "void")
                                (reparse-symbol namespacesubparts) [11826 14090])
                            ("TestMultiStoreAndLoad" function
                               (:parent "ManifestStoreV1UnitTest"
                                :type "void")
                                (reparse-symbol namespacesubparts) [14093 15292])
                            ("TestLargeManifestFileAndGC" function
                               (:parent "ManifestStoreV1UnitTest"
                                :type "void")
                                (reparse-symbol namespacesubparts) [15294 16973])
                            ("TestSwitchFile" function
                               (:parent "ManifestStoreV1UnitTest"
                                :type "void")
                                (reparse-symbol namespacesubparts) [16975 18281])
                            ("TestStoreWithDifferentSize" function
                               (:parent "ManifestStoreV1UnitTest"
                                :type "void")
                                (reparse-symbol namespacesubparts) [18283 19897])
                            ("TestEmptyFileAndLoad" function
                               (:parent "ManifestStoreV1UnitTest"
                                :type "void")
                                (reparse-symbol namespacesubparts) [19899 22532])
                            ("TestLoadEmptyDir" function
                               (:parent "ManifestStoreV1UnitTest"
                                :type "void")
                                (reparse-symbol namespacesubparts) [22534 23713])
                            ("CheckFailoverData" function
                               (:parent "ManifestStoreV1UnitTest"
                                :arguments 
                                  ( ("opts" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("ManifestStoreOptions" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [23771 23804])
                                    ("mf4Basic" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("Manifest4UT" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [23813 23841])
                                    ("mf4Failover" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("Manifest4UT" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [23851 23882]))                                  
                                :type "int")
                                (reparse-symbol namespacesubparts) [23715 25659])
                            ("TestFailoverStoreAndLoad" function
                               (:parent "ManifestStoreV1UnitTest"
                                :type "void")
                                (reparse-symbol namespacesubparts) [25661 27692])
                            ("TestChecksum" function
                               (:parent "ManifestStoreV1UnitTest"
                                :type "void")
                                (reparse-symbol namespacesubparts) [27694 29007])
                            ("TestIllegalOptions" function
                               (:parent "ManifestStoreV1UnitTest"
                                :type "void")
                                (reparse-symbol namespacesubparts) [29009 30335]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [1392 30338]))                  
                :type "namespace")
                nil [1373 30370]))          
      :file "sqlonline_manifest_store_unittest.cpp"
      :pointmax 30399
      :fsize 30402
      :lastmodtime '(21968 27940 834035 918000)
      :unmatched-syntax '((number 4043 . 4044) (number 3992 . 3993) (number 3947 . 3948) (number 3603 . 3604) (number 3446 . 3447) (number 3168 . 3169) (number 2941 . 2942) (number 2777 . 2778) (number 2609 . 2610) (number 2485 . 2486) (number 2291 . 2292))))
  :file "!apsarapangu!disk6!jingwen.hjw!work!trunk!sqlonline!testing!unittest!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
