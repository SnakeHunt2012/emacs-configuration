;; Object lib/
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "lib/"
  :tables
  (list
    (semanticdb-table "ocm_wrapper.py"
      :major-mode 'python-mode
      :tags 
        '( ("sys" include nil nil [45 55])
            ("sys" code nil nil [56 131])
            ("sys" code nil nil [132 200])
            ("try" code nil nil [202 270])
            ("replication_config" include nil nil [270 295])
            ("random" include nil nil [296 309])
            ("time" include nil nil [310 321])
            ("ocm_client" include nil nil [323 347])
            ("ocm_error" include nil nil [348 386])
            ("cmd_wrapper" include nil nil [387 425])
            ("OCMWrapper" type
               (:superclasses ("object")
                :members 
                  ( ("__init__" function
                       (:suite 
                          ( ("'''如果需要使用特定的ocm_server,而不是VIP,请使用'''" code nil (reparse-symbol indented_block_body) [722 758])
                            ("self" variable nil (reparse-symbol indented_block_body) [767 791])
                            ("self" variable nil (reparse-symbol indented_block_body) [801 835])
                            ("if" code nil (reparse-symbol indented_block_body) [844 1141])
                            ("self" variable nil (reparse-symbol indented_block_body) [1150 1240]))                          
                        :parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [471 475])
                            ("location_type" variable nil (reparse-symbol function_parameters) [494 507])
                            ("ocm_hostname" variable nil (reparse-symbol function_parameters) [526 538])
                            ("ocm_port" variable nil (reparse-symbol function_parameters) [564 572])
                            ("ocm_accessid" variable nil (reparse-symbol function_parameters) [598 610])
                            ("ocm_accesskey" variable nil (reparse-symbol function_parameters) [663 676]))                          
                        :constructor-flag t)
                        (reparse-symbol indented_block_body) [458 1241])
                    ("get_instance_model_type" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [1275 1279])
                            ("instance_name" variable nil (reparse-symbol function_parameters) [1281 1294]))                          )
                        (reparse-symbol indented_block_body) [1247 1738])
                    ("get_instance_id" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [1763 1767])
                            ("instance_name" variable nil (reparse-symbol function_parameters) [1769 1782]))                          )
                        (reparse-symbol indented_block_body) [1743 2230])
                    ("get_instance" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [2253 2257])
                            ("instance_name" variable nil (reparse-symbol function_parameters) [2259 2272]))                          )
                        (reparse-symbol indented_block_body) [2236 2905])
                    ("delete_cluster" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [2929 2933])
                            ("cluster" variable nil (reparse-symbol function_parameters) [2935 2942]))                          )
                        (reparse-symbol indented_block_body) [2910 3324])
                    ("get_cluster" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [3345 3349])
                            ("cluster" variable nil (reparse-symbol function_parameters) [3351 3358]))                          )
                        (reparse-symbol indented_block_body) [3329 3688])
                    ("delete_all_instance" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [3717 3721]))                          )
                        (reparse-symbol indented_block_body) [3693 4080])
                    ("insert_user" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [4101 4105]))                          )
                        (reparse-symbol indented_block_body) [4085 4676])
                    ("update_cluster" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [4700 4704])
                            ("cluster" variable nil (reparse-symbol function_parameters) [4706 4713])
                            ("location_type" variable nil (reparse-symbol function_parameters) [4715 4728]))                          )
                        (reparse-symbol indented_block_body) [4681 4964])
                    ("insert_cluster" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [4988 4992])
                            ("cluster" variable nil (reparse-symbol function_parameters) [4994 5001]))                          )
                        (reparse-symbol indented_block_body) [4969 6332])
                    ("enable_replication" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [6360 6364])
                            ("pri_instance_name" variable nil (reparse-symbol function_parameters) [6366 6383])
                            ("sec_instance_name" variable nil (reparse-symbol function_parameters) [6385 6402])
                            ("sec_region_name" variable nil (reparse-symbol function_parameters) [6404 6419])
                            ("sec_cluster_name" variable nil (reparse-symbol function_parameters) [6421 6437])
                            ("user_id" variable nil (reparse-symbol function_parameters) [6444 6451]))                          )
                        (reparse-symbol indented_block_body) [6337 6594])
                    ("disable_replication" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [6626 6630])
                            ("pri_instance_name" variable nil (reparse-symbol function_parameters) [6632 6649])
                            ("sec_instance_name" variable nil (reparse-symbol function_parameters) [6651 6668])
                            ("sec_region_name" variable nil (reparse-symbol function_parameters) [6670 6685])
                            ("user_id" variable nil (reparse-symbol function_parameters) [6687 6694]))                          )
                        (reparse-symbol indented_block_body) [6602 6819])
                    ("delete_replication" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [6850 6854])
                            ("instance_id" variable nil (reparse-symbol function_parameters) [6856 6867])
                            ("replication_id" variable nil (reparse-symbol function_parameters) [6869 6883]))                          )
                        (reparse-symbol indented_block_body) [6827 6958])
                    ("delete_instance" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [6983 6987])
                            ("instance_id" variable nil (reparse-symbol function_parameters) [6989 7000])
                            ("instance_name" variable nil (reparse-symbol function_parameters) [7007 7020]))                          )
                        (reparse-symbol indented_block_body) [6963 7619])
                    ("insert_instance" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [7648 7652])
                            ("instance_name" variable nil (reparse-symbol function_parameters) [7654 7667])
                            ("model_type" variable nil (reparse-symbol function_parameters) [7669 7679]))                          )
                        (reparse-symbol indented_block_body) [7628 9288])
                    ("get_replication" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [9313 9317])
                            ("instance_name" variable nil (reparse-symbol function_parameters) [9319 9332])
                            ("instance_id" variable nil (reparse-symbol function_parameters) [9341 9352]))                          )
                        (reparse-symbol indented_block_body) [9293 9740])
                    ("get_replication_id" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [9768 9772])
                            ("instance_id" variable nil (reparse-symbol function_parameters) [9774 9785]))                          )
                        (reparse-symbol indented_block_body) [9745 9947])
                    ("get_metering" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [9969 9973])
                            ("instance_id" variable nil (reparse-symbol function_parameters) [9975 9986]))                          )
                        (reparse-symbol indented_block_body) [9952 10098])
                    ("get_replication_status" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [10130 10134])
                            ("instance_name" variable nil (reparse-symbol function_parameters) [10136 10149])
                            ("target_instance_name" variable nil (reparse-symbol function_parameters) [10151 10171])
                            ("target_region_name" variable nil (reparse-symbol function_parameters) [10173 10191])
                            ("user_id" variable nil (reparse-symbol function_parameters) [10193 10200]))                          )
                        (reparse-symbol indented_block_body) [10103 10332]))                  
                :type "class")
                nil [427 10332])
            ("g_ocm_wrapper" variable nil nil [10333 10448])
            ("if" code nil nil [10450 11216]))          
      :file "ocm_wrapper.py"
      :pointmax 11245
      :fsize 11274
      :lastmodtime '(21998 42019 943088 430000)
      :unmatched-syntax '((INDENT_BLOCK 8906 . 9288) (NEWLINE 8905 . 8906) (COLON 8904 . 8905) (TRY 8626 . 8629) (AS 8900 . 8902) (INDENT_BLOCK 2452 . 2691) (NEWLINE 2451 . 2452) (COLON 2450 . 2451) (TRY 2333 . 2336) (AS 2446 . 2448)))
    (semanticdb-table "replication_config.py"
      :file "replication_config.py"
      :fsize 4210
      :lastmodtime '(22007 54404 21035 323000))
    (semanticdb-table "cmd_wrapper.py"
      :file "cmd_wrapper.py"
      :fsize 17930
      :lastmodtime '(21993 26150 856040 451000)))
  :file "!apsarapangu!disk6!jingwen.hjw!work!ts_ots!ts_replication_commercialize_back!lib!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
