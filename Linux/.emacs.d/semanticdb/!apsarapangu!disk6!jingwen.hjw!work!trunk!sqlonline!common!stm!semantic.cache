;; Object stm/
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "stm/"
  :tables
  (list
    (semanticdb-table "transaction.cpp"
      :major-mode 'c++-mode
      :tags 
        '( ("transaction.h" include nil nil [364 388])
            ("helper.h" include nil nil [389 408])
            ("sqlonline/common/sqlonline_macro.h" include nil nil [409 454])
            ("apsara/common/time_stamp.h" include nil nil [455 492])
            ("tr1/tuple" include (:system-flag t) nil [493 513])
            ("algorithm" include (:system-flag t) nil [514 534])
            ("std" using (:type ("std" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [536 556])
            ("std::tr1" using (:type ("std::tr1" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [557 582])
            ("apsara" type
               (:members 
                  ( ("sqlonline" type
                       (:members 
                          ( ("stm" type
                               (:members 
                                  ( ("NextTxnId" function (:type ("TxnId" type (:type "class") nil nil)) (reparse-symbol namespacesubparts) [642 870])
                                    ("Transaction" function
                                       (:constructor-flag t
                                        :parent "Transaction"
                                        :type ("Transaction" type (:type "class") nil nil))
                                        (reparse-symbol namespacesubparts) [872 940])
                                    ("Transaction" function
                                       (:destructor-flag t
                                        :parent "Transaction"
                                        :type "void")
                                        (reparse-symbol namespacesubparts) [942 1057])
                                    ("AddCollectionData" function
                                       (:parent "Transaction"
                                        :arguments 
                                          ( ("coll" variable
                                               (:pointer 1
                                                :type ("ICollection" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [1095 1113])
                                            ("collData" variable
                                               (:pointer 1
                                                :type "void")
                                                (reparse-symbol arg-sub-list) [1114 1129]))                                          
                                        :type "void")
                                        (reparse-symbol namespacesubparts) [1059 1265])
                                    ("GetCollectionData" function
                                       (:pointer 1
                                        :parent "Transaction"
                                        :arguments 
                                          ( ("coll" variable
                                               (:pointer 1
                                                :type ("ICollection" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [1304 1322]))                                          
                                        :type "void")
                                        (reparse-symbol namespacesubparts) [1267 1510])
                                    ("Commit" function
                                       (:throws ("Confliction")
                                        :parent "Transaction"
                                        :type "void")
                                        (reparse-symbol namespacesubparts) [1512 2694])
                                    ("Abort" function
                                       (:parent "Transaction"
                                        :type "void")
                                        (reparse-symbol namespacesubparts) [2696 3019])
                                    ("Backoff" function
                                       (:parent "Transaction"
                                        :arguments 
                                          ( ("cnt" variable (:type ("int64_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3047 3059]))                                          
                                        :type "void")
                                        (reparse-symbol namespacesubparts) [3021 3488])
                                    ("StoreTxnIdAndClearWriteProtection" function
                                       (:arguments 
                                          ( ("txn" variable
                                               (:pointer 1
                                                :type ("boost::atomic" type
                                                     (:template-specifier 
                                                        ( ("TxnId" type nil nil nil))                                                        
                                                      :type "class")
                                                      nil nil))
                                                (reparse-symbol arg-sub-list) [3530 3556])
                                            ("desire" variable (:type ("TxnId" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3557 3570]))                                          
                                        :type ("TxnId" type (:type "class") nil nil))
                                        (reparse-symbol namespacesubparts) [3490 4082])
                                    ("WaitForNoRead" function
                                       (:arguments 
                                          ( ("txnid" variable
                                               (:pointer 1
                                                :type ("boost::atomic" type
                                                     (:template-specifier 
                                                        ( ("TxnId" type nil nil nil))                                                        
                                                      :type "class")
                                                      nil nil))
                                                (reparse-symbol arg-sub-list) [4103 4131]))                                          
                                        :type "void")
                                        (reparse-symbol namespacesubparts) [4084 4287]))                                  
                                :type "namespace")
                                (reparse-symbol namespacesubparts) [625 4290]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [603 4310]))                  
                :type "namespace")
                nil [584 4336]))          
      :file "transaction.cpp"
      :pointmax 4359
      :fsize 4358
      :lastmodtime '(21954 59453 88035 987000)
      :unmatched-syntax nil)
    (semanticdb-table "transaction.h"
      :file "transaction.h"
      :fsize 6068
      :lastmodtime '(21954 59453 89113 479000))
    (semanticdb-table "helper.h"
      :file "helper.h"
      :fsize 2068
      :lastmodtime '(21954 59453 88035 987000)))
  :file "!apsarapangu!disk6!jingwen.hjw!work!trunk!sqlonline!common!stm!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
